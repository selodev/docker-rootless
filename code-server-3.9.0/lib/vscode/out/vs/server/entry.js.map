{"version":3,"sources":["vs/server/fake","vs/server/vs/base/common/performance.js","vs/server/vs/base/node/languagePacks.js","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/assert.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/decorators.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/errors.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/arrays.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/functional.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/iterator.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/json.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/jsonFormatter.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/jsonEdit.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/lifecycle.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/linkedList.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/event.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/cancellation.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/async.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/platform.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/process.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/path.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/processes.ts","vs/server/vs/base/common/semver/semver.js","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/stream.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/strings.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/buffer.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/severity.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/types.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/extpath.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/objects.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uri.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/amd.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/console.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/map.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/glob.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/marshalling.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/network.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/normalization.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/resources.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/labels.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uriIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uuid.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/decoder.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/macAddress.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/id.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/paths.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/pfs.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/extpath.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/proxy_agent.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/watcher.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/actions.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/date.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/errorMessage.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/processes.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensions/common/extensionValidator.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/win32/csharpWatcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/win32/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/graph.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/contextkey/common/contextkey.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/download/common/download.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/environment/common/environment.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensions/common/extensions.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/files.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/io.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/label/common/label.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/localizations/common/localizations.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/log.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionDownloader.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/fileService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/localizations/node/localizations.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/bufferLog.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/fileLogService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/logIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/node/spdlogService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/node/loggerService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/notification/common/notification.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/product/common/product.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/environment/node/environmentService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/product/common/productService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/registry/common/platform.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configuration.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/remote/common/remoteHosts.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/common/request.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/common/requestIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/node/proxy.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/serviceMachineId/common/serviceMachineId.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/state/node/state.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/state/node/stateService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/storage/common/storage.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/errorTelemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/browser/errorTelemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryLogAppender.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/workspaces/common/workspaces.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/workspace/common/workspace.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/common/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/insights.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/logger.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/nls.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/connection.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/protocol.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/util.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariable.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariableCollection.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariableShared.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminal.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalDataBuffering.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalEnvironment.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/node/terminal.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/node/terminalEnvironment.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/node/terminalProcess.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolver.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/configurationResolver/common/variableResolver.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/editor/common/editorService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/common/editor.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/remoteTerminalChannel.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/extensions/common/extensionPoints.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/extensions/node/extensionPoints.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/channel.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentFileSystemChannel.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/zip.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionsScanner.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/marketplace.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/node/requestService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/code/node/cliProcessMain.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/server.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/entry.ts"],"names":["sharedObj","__m","__M","deps","result","i","len","length","_factory","MonacoPerformanceMarks","_dataLen","_nativeMark","performance","mark","bind","name","push","Date","now","getEntries","entries","startTime","getDuration","from","to","target","endIndex","importEntries","splice","exportEntries","slice","factory","nodeRequire","path","fs","perf","exists","file","Promise","c","rimraf","location","e","lstat","err","stats","then","stat","isDirectory","isSymbolicLink","dir","readdir","files","children","all","map","child","join","rmdir","undefined","unlink","code","readFile","resolve","reject","data","writeFile","content","getNLSConfiguration","commit","userDataPath","metaDataFile","locale","availableLanguages","pseudo","process","env","initialLocale","defaultResult","configs","configFile","JSON","parse","readFileSync","getLanguagePackConfigurations","config","index","lastIndexOf","substring","console","error","resolveLanguagePackLocale","packConfig","mainPack","hash","translations","fileExists","packId","cacheRoot","coreLocation","translationsConfigFile","corruptedFile","*","_languagePackId","_translationsConfigFile","_cacheRoot","_resolvedLanguagePackCoreLocation","_corruptedFile","corrupted","toDelete","d","utimes","touch","catch","mkdir","recursive","mkdirp","values","metadata","packData","contents","bundles","Object","keys","writes","bundle","modules","create","module","defaultMessages","messages","targetStrings","elem","translatedMessage","key","replace","stringify","exports","ok","value","message","Error","createDecorator","mapFn","descriptor","fnKey","fn","get","memoizeId","createMemoizer","memoizeKeyPrefix","self","warn","memoizeKey","args","this","hasOwnProperty","defineProperty","configurable","enumerable","writable","apply","clear","getOwnPropertyNames","forEach","property","indexOf","memoize","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","clearTimeout","setTimeout","throttle","lastRunKey","pendingKey","Number","MAX_VALUE","nextTime","ErrorHandler","[object Object]","listeners","unexpectedErrorHandler","stack","listener","_removeListener","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","split","String","NotImplementedError","super","NotSupportedError","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","m","element","pop","j","remove","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","quickSelect","nth","TypeError","pivotValue","random","lower","higher","pivots","val","groupBy","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","o","min","isCancellationRequested","errors_1","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","distinctES6","Set","has","add","uniqueFilter","lastIndex","firstOrDefault","notFoundValue","commonPrefixLength","flatten","concat","range","arg","indexer","mapper","reduce","r","t","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","temp","pushToStart","unshift","pushToEnd","mapArrayOrNot","items","asArray","getRandomElement","mapFind","mapped","once","_this","didCall","arguments","Iterable","is","thing","Symbol","iterator","_empty","freeze","empty","single","iterable","first","next","some","predicate","iterables","consume","atMost","POSITIVE_INFINITY","consumed","done","ParseOptions","CharacterCodes","createScanner","text","ignoreTrivia","pos","tokenOffset","scanError","scanHexDigits","count","digits","hexValue","ch","charCodeAt","scanNext","isWhitespace","fromCharCode","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","contains","node","offset","includeRightBound","visit","visitor","options","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","parseLiteral","allowEmptyContent","getNodeType","ScanError","SyntaxKind","ParseErrorCode","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","sep","last","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","parseTree","ensurePropertyComplete","endOffset","valueNode","findNodeAtLocation","root","segment","found","propertyNode","getNodePath","getNodeValue","prop","findNodeAtOffset","item","stripComments","replaceCh","kind","parts","repeat","s","getEOL","charAt","eol","isEOL","format","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","nChars","tabSize","computeIndentLevel","indentValue","lineBreak","indentLevel","insertSpaces","scanner","json_1","hasError","newLineAndIndent","editOperations","addEdit","startOffset","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","setProperty","originalPath","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","withFormatting","newProperty","edit","removalIndex","toRemove","newText","applyEdit","begin","jsonFormatter_1","edits","curr","max","removeProperty","applyEdits","sortedEdits","arrays_1","diff","lastModifiedOffset","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","log","MultiDisposeError","dispose","iterator_1","isDisposable","combinedDisposable","disposables","toDisposable","DisposableStore","_toDispose","_isDisposed","DISABLE_DISPOSED_WARNING","_store","MutableDisposable","_value","ReferenceCollection","references","Map","reference","counter","createReferencedObject","set","functional_1","destroyReferencedObject","delete","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","Event","event","thisArgs","didFire","call","snapshot","each","merge","initial","output","emitter","Emitter","fire","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","callback","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","raceCancellablePromises","async","cancellablePromises","resolvedPromiseIndex","promises","cancellablePromise","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","current","promiseTask","SequencerByKey","promiseMap","newPromise","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","firstParallel","promiseList","todo","finish","_b","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","iLimitedTask","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","IntervalCounter","lastIncrementTime","global","define","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_userAgent","_globals","nodeProcess","vscode","isElectronRenderer","versions","electron","isElectronSandboxed","sandboxed","navigator","platform","rawNlsConfig","nlsConfig","resolved","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","Language","isDefaultVariant","isDefault","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","safeProcess","platform_1","cwd","execPath","substr","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","pathObject","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","Source","TerminateResponseCode","sanitizeProcessEnvironment","preserve","keysToRemove","envKey","search","amd","l","toStringTag","__esModule","default","prototype","H","NODE_DEBUG","SEMVER_SPEC_VERSION","MAX_SAFE_INTEGER","re","src","u","f","h","v","w","g","y","E","T","$","S","R","I","O","A","M","RegExp","V","P","C","L","N","q","D","X","z","G","Z","B","U","F","loose","version","trim","match","raw","major","minor","patch","prerelease","build","valid","clean","SemVer","compareMain","comparePre","K","inc","isNaN","ee","compareIdentifiers","J","Q","W","Y","te","ne","oe","ie","semver","se","operator","rcompareIdentifiers","compareLoose","rcompare","rsort","gt","lt","eq","neq","gte","lte","cmp","Comparator","ae","parseRange","ue","ce","pe","fe","le","intersects","Range","every","toComparators","satisfies","maxSatisfying","minSatisfying","validRange","ltr","gtr","outside","coerce","fun","title","browser","argv","addListener","off","removeAllListeners","prependListener","prependOnceListener","binding","chdir","umask","isReadableStream","pause","resume","destroy","newWriteableStream","WriteableStreamImpl","isReadableBufferedStream","stream","ended","state","flowing","destroyed","pendingWritePromises","flowData","flowErrors","flowEnd","highWaterMark","write","fullDataBuffer","pendingWritePromise","consumeReadable","readable","chunks","chunk","read","peekReadable","maxChunks","lastReadChunk","consumeStream","peekStream","streamListeners","dataListener","errorListener","endListener","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","abs","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCodePoint","prevGraphemeBreakType","group","parseInt","escape","html","character","truncate","maxLength","suffix","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","modifiers","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","containsFullWidthCharacter","isEmojiImprecise","lcut","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","UTF8_BOM_CHARACTER","stripUTF8BOM","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","destination","streamToBuffer","streams","readUInt16LE","writeUInt16LE","readableToBuffer","bufferToReadable","bufferedStreamToBuffer","bufferedStream","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","Severity","_warning","_warn","_info","fromValue","Warning","Info","Ignore","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","isDefined","assertType","condition","assertIsDefined","assertAllDefined","isFunction","validateConstraint","constraint","constructor","getAllPropertyNames","proto","getPrototypeOf","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","NotImplementedProxy","Proxy","toSlashes","osPath","path_1","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","parentCandidate","sepOffset","sanitizeFilePath","endsWith","isRootOrDriveLetter","pathNormalized","indexOfPath","parseLineAndColumnAware","rawPath","line","column","segmentAsNumber","types_1","deepClone","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","changed","r1","r2","i2","mixin","overwrite","safeStringify","getOrDefault","baseValue","targetValue","getCaseInsensitive","lowercaseKey","equivalentKey","find","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","uriToFsPath","change","Uri","percentDecode","components","uri","pathFragment","newPath","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponent","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","LoaderStats","amdLoadScript","amdInvokeFactory","nodeEval","detail","timestamp","duration","require","getStats","nodeRequireTotal","to2dArray","amdLoad","amdInvoke","header","rows","lengths","cell","ci","row","_cell","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","label","isOneStringArg","consoleArgs","getOrSet","mapToString","setToString","StringIterator","_pos","ConfigKeysIterator","_caseSensitive","_from","_to","justSeps","PathIterator","_splitOnBackslash","UriIteratorState","UriIterator","_ignorePathCasing","_states","_stateIdx","_pathIterator","reset","hasNext","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","ignorePathCasing","_root","iter","oldElement","_getNode","_delete","superStr","_entries","ResourceMap","mapOrKeyFn","toKey","defaultToKey","clb","thisArg","tuple","Touch","LinkedMap","_map","_head","_tail","_state","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","char","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","replacer","flags","revive","depth","buffer_1","Schemas","inMemory","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeNotebook","vscodeNotebookCell","vscodeSettings","webviewPanel","vscodeWebview","vscodeWebviewResource","extension","vscodeFileResource","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","pathname","FileAccess","FALLBACK_AUTHORITY","uriOrModule","moduleIdToUrl","toUri","rewrite","toCodeFileUri","isUri","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","removeAccents","regex","originalFSPath","ExtUri","uri1","uri2","ignoreFragment","getComparisonKey","network_1","isEqualAuthority","joinPath","normalizedPath","fromPath","toPath","newURI","a1","a2","fsp","hasTrailingPathSeparator","isRootSep","extUri","extUriBiasedIgnorePathCase","extUriIgnorePathCase","basenameOrAuthority","normalizePath","resolvePath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","mime","toLocalResource","localScheme","hasDriveLetter","normalizeDriveLetter","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","userHome","tildify","getBaseLabel","extractDriveLetter","normalizedUserHomeCached","normalizedUserHome","original","normalized","startsWith","untildify","ellipsis","unc","home","Type","shorten","pathSeparator","shortenedPaths","pathIndex","prefix","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","toJSON","_transformIncomingURIs","transformIncoming","URITransformer","remoteAuthority","DefaultURITransformer","transformOutgoingURIs","_transformOutgoingURIs","transformOutgoing","transformIncomingURIs","transformAndReviveIncomingURIs","_UUIDPattern","isUUID","_hex","padStart","_fillRandomValues","bucket","generateUuid","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","__$__nodeRequire","invalidMacAddresses","validateMacAddress","tempCandidate","getMac","ifaces","os_1","networkInterfaces","infos","info","mac","machineId","virtualMachineHint","_virtualMachineOUIs","forStrings","findSubstr","vmOui","interfaceCount","interfaces","_isVirtualMachineMacAdress","getMachineId","crypto","resolve_1","reject_1","macAddress","macAddress_1","createHash","update","digest","getMacMachineId","uuid","pathsPath","asFileUri","getDefaultUserDataPath","RimRafMode","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","chmod","util_1","promisify","handleDirectoryChildren","readdirSync","normalization_1","oldPath","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","statLink","lstats","symbolicLink","dangling","renameIgnoreError","symlink","writeFilePathQueues","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","reader","createReadStream","writer","createWriteStream","finished","pipe","doCopyFile","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","realcaseSync","pfs_1","ix","realpath","access","constants","R_OK","realpathSync","accessSync","monkeyPatch","inVSCode","shouldEnable","httpProxy","proxyFromEnv","getProxyForUrl","logger_1","logger","debug","httpsProxy","shouldEnableProxy","pa","proxyAgent","newProxyAgent","globalAgent","doWatchNonRecursive","onChange","originalFileName","mapPathToStatDisposable","watcherDisposables","disposable","watcher","fs_1","watch","folderChildren","changedFileName","changedFilePath","statDisposable","timeoutHandle","CHANGE_BUFFER_DELAY","watchFile","watchFolder","State","DataType","requestTypeToStr","responseTypeToStr","RequestType","ResponseType","BufferReader","bytes","BufferWriter","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","msgLength","send","logOutgoing","body","sendBuffer","logIncoming","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","listen","timeoutTimer","requests","RequestInitiator","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","doRequest","sendRequest","uninitializedPromise","Idle","whenInitialized","cancellationTokenListener","onResponse","IPCServer","onDidClientConnect","_connections","_onDidAddConnection","onDidAddConnection","_onDidRemoveConnection","onDidRemoveConnection","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","routerOrClientFilter","connectionPromise","routeCall","getDelayedChannel","getChannel","getMulticastEvent","routeEvent","clientFilter","eventMultiplexer","relay","IPCClient","ipcLogger","getNextTickChannel","didTick","propertyIsEvent","StaticRouter","hub","route","createChannelReceiver","service","disableMarshalling","mapEventNameToEvent","eventImpl","marshalling_1","createChannelSender","_target","propKey","properties","methodArgs","colorTables","prettyWithoutArrays","logWithColors","direction","req","initiator","pretty","colorTable","IPCLogger","_outgoingPrefix","_incomingPrefix","_totalIncoming","_totalOutgoing","requestId","emptyBuffer","getEmptyBuffer","ChunkStream","_chunks","_totalLength","buff","byteCount","_read","advance","resultOffset","chunkIndex","chunkPart","ProtocolMessageType","ProtocolConstants","ProtocolMessage","ack","writtenTime","ProtocolReader","socket","_onMessage","_register","readHead","readLen","messageType","_socket","_incomingData","onData","acceptChunk","lastReadTime","ProtocolWriter","lastWriteTime","drain","_writeNow","_writeSoon","head","wasEmpty","_bufferAdd","_bufferTake","Protocol","_onClose","onClose","_socketWriter","_socketReader","Client","ipc_1","getSocket","sendDisconnect","BufferedEmitter","_hasListeners","_isDeliveringMessages","_bufferedMessages","_deliverMessages","QueueElement","resultLen","it","LoadEstimator","lastRuns","_HISTORY_LENGTH","historyLimit","score","load","PersistentProtocol","initialChunk","_loadEstimator","_onControlMessage","onControlMessage","_onSocketClose","onSocketClose","_onSocketTimeout","onSocketTimeout","_isReconnecting","_outgoingUnackMsg","_outgoingMsgId","_outgoingAckId","_outgoingAckTimeout","_incomingMsgId","_incomingAckId","_incomingMsgLastTime","_incomingAckTimeout","_outgoingKeepAliveTimeout","_incomingKeepAliveTimeout","_lastReplayRequestTime","_socketDisposables","_receiveMessage","_sendKeepAliveCheck","_recvKeepAliveCheck","unacknowledgedCount","timeSinceLastOutgoingMsg","timeSinceLastIncomingMsg","hasHighLoad","initialDataChunk","flushBuffer","toSend","toArray","_recvAckCheck","peek","_sendAckCheck","readEntireBuffer","_sendAck","oldestUnacknowledgedMsg","timeSinceOldestUnacknowledgedMsg","NodeSocket","_listener","bufferSize","Constants","ReadState","WebSocketNodeSocket","_onData","mask","ipc_net_1","_acceptChunk","onEnd","headerLen","secondByte","hasMask","unmask","cnt","bytesLeft","m3","m2","m1","XDG_RUNTIME_DIR","safeIpcPathLengths","2","1","validateIPCHandleLength","createRandomIPCHandle","randomSuffix","createStaticIPCHandle","directoryPath","scope","crypto_1","Server","server","toClientConnectionEvent","onConnection","serve","net_1","createServer","connect","clientId","createConnection","fromSocket","nls","Action","cssClass","enabled","actionCallback","_onDidChange","onDidChange","_enabled","_checked","_id","_label","_cssClass","_actionCallback","_setLabel","tooltip","_tooltip","_setTooltip","class","_setClass","_setEnabled","checked","_setChecked","ActionRunner","_onBeforeRun","onBeforeRun","_onDidRun","onDidRun","action","runAction","RadioGroup","actions","Separator","ID","ActionWithMenuAction","_actions","SubmenuAction","EmptySubmenuAction","localize","minute","hour","day","week","month","year","fromNow","date","appendAgoLabel","seconds","nls_1","toLocalISOString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","errno","syscall","toErrorMessage","arrays","types","getParseErrorMessage","errorCode","getWindowsCode","status","getWindowsShell","environment","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","useExec","cc","cp","stdout","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","withExtension","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debugBrk","child_process_1","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","ExtensionHostDebugBroadcastChannel","_onCloseEmitter","_onReloadEmitter","_onTerminateEmitter","_onLogToEmitter","_onAttachEmitter","sessionId","subId","ChannelName","ExtensionHostDebugChannelClient","onReload","onAttachSession","onLogToSession","onTerminateSession","debugRenderer","transformIncomingURI","transformIncomingExtension","uriIpc_1","manifest","transformed","transformOutgoingExtension","transformOutgoingURI","ExtensionManagementChannel","getUriTransformer","onInstallExtension","onDidInstallExtension","onUninstallExtension","onDidUninstallExtension","uriTransformer","local","zip","unzip","install","getManifest","canInstall","installFromGallery","uninstall","reinstallFromGallery","getInstalled","extensions","updateMetadata","updateExtensionScope","getExtensionsReport","ExtensionManagementChannelClient","_onInstallExtension","_onDidInstallExtension","_onUninstallExtension","_onDidUninstallExtension","zipLocation","vsix","installOptions","isMachineScoped","ExtensionTipsChannel","getConfigBasedTips","getImportantExecutableBasedTips","getOtherExecutableBasedTips","getAllWorkspacesTips","nlsRegex","localizeManifest","VERSION_REGEXP","isValidVersionStr","parseVersion","hasCaret","hasGreaterEquals","majorBase","majorMustEqual","minorBase","minorMustEqual","patchBase","patchMustEqual","preRelease","normalizeVersion","isMinimum","isValidVersion","_version","_desiredVersion","desiredVersion","desiredMajorBase","desiredMinorBase","desiredPatchBase","isVersionValid","currentVersion","requestedVersion","notices","isValidExtensionVersion","extensionDesc","isBuiltin","main","engines","isEngineValid","engine","FileWatcher","onDidFilesChange","onLogMessage","verboseLogging","isDisposed","restartCounter","startWatching","ipc_cp_1","AMD_ENTRYPOINT","PIPE_LOGGING","VERBOSE_LOGGING","MAX_RESTARTS","setVerboseLogging","onDidChangeFile","onDidLogMessage","setFolders","setRoots","watcherOptions","init","OutOfProcessWin32FolderWatcher","watchedFolder","ignored","eventCallback","logCallback","glob","startWatcher","decoder","rawEvents","eventParts","changeType","absolutePath","ignore","changeTypeMap","folder","csharpWatcherService_1","excludes","onFileEvents","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","incoming","outgoing","Graph","_hashFn","_nodes","fromNode","lookupOrInsertNode","toNode","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","STATIC_VALUES","ContextKeyExprType","ContextKeyExpr","ContextKeyFalseExpr","INSTANCE","ContextKeyTrueExpr","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyRegexExpr","ContextKeyInExpr","ContextKeyNotExpr","expr","ContextKeyAndExpr","ContextKeyOrExpr","ContextKeyGreaterExpr","ContextKeySmallerExpr","serialized","strict","_deserializeOrExpression","pieces","_deserializeAndExpression","_deserializeOne","serializedOne","_deserializeValue","_deserializeRegexValue","ContextKeyGreaterEqualsExpr","ContextKeySmallerEqualsExpr","serializedValue","caseIgnoreFlag","mapFnc","staticValue","cmp1","getValue","mapDefined","cmp2","mapEquals","valueKey","mapIn","ContextKeyNotInExpr","_actual","evaluate","mapNotEquals","mapNot","parseFloat","mapGreater","mapGreaterEquals","mapSmaller","mapSmallerEquals","thisSource","otherSource","mapRegex","ContextKeyNotRegexExpr","_expr","_normalizeArr","hasTrue","lastElement","secondToLastElement","resultElement","negate","hasFalse","terminals","LEFT","RIGHT","and","or","key1","key2","value1","value2","RawContextKey","_defaultValue","createKey","getContextKeyValue","not","notEquals","IContextKeyService","instantiation_1","SET_CONTEXT_COMMAND_ID","IDownloadService","IEnvironmentService","INativeEnvironmentService","LogsDataCleaner","environmentService","cleanUpOldLogsSoon","currentLog","logsPath","logsRoot","oldSessions","__decorate","__param","environment_1","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","isIExtensionIdentifier","SortBy","SortOrder","StatisticType","InstallOperation","IExtensionGalleryService","INSTALL_ERROR_NOT_SUPPORTED","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","ExtensionManagementError","IExtensionManagementService","DISABLED_EXTENSIONS_STORAGE_PATH","ENABLED_EXTENSIONS_STORAGE_PATH","IGlobalExtensionEnablementService","IExtensionTipsService","DefaultIconPath","asBrowserUri","ExtensionsLabel","ExtensionsLocalizedLabel","ExtensionsChannelId","PreferencesLabel","PreferencesLocalizedLabel","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","EXTENSION_CATEGORIES","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","contributes","localizations","isAuthenticaionProviderExtension","authentication","IBuiltinExtensionsScannerService","areSameExtensions","ExtensionIdentifierWithVersion","identifier","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","getExtensionIdentifier","byExtension","findGroup","getLocalExtensionTelemetryData","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","telemetryData","BetterMergeId","extensions_1","getMaliciousExtensionsSet","report","malicious","ExtensionsManifestCache","extensionsManagementService","extensionsManifestCache","onDidUnInstallExtension","invalidate","pfs","FileSystemProviderErrorCode","IFileService","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","updated","deleted","forUris","doContains","includeChildren","hasTypesFilter","includes","findSuperstr","_c","_d","_e","_f","getOfType","eventsForType","filterFn","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","MIN_MAX_MEMORY_SIZE_MB","FALLBACK_MAX_MEMORY_SIZE_MB","ByteSize","KB","MB","GB","TB","throwIfCancelled","throwIfTooLarge","totalBytesRead","limits","memory","files_1","readFileIntoStream","bytesRead","allowedRemainingBytes","posInFile","posInBuffer","lastChunkLength","doReadFileIntoStream","errorTransformer","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","fileChangesDelayer","watcher_2","fileChangesBuffer","pathToWatch","eventType","onFileChange","onVerbose","fileChanges","normalizedFileChanges","watcher_1","ServiceCollection","instanceOrDescriptor","_enableTracing","CyclicDependencyError","graph","InstantiationService","services","serviceCollection_1","_services","_parent","_trace","Trace","traceInvocation","_done","isOptional","_getOrCreateServiceInstance","stop","ctorOrDescriptor","rest","descriptors_1","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","graph_1","cycleCount","insertEdge","roots","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","TraceType","_start","_dep","_None","dur","_totals","causedCreation","lines","printChild","trace","nested","ILabelService","ILocalizationsService","isValidLocalization","localization","languageId","translation","languageName","localizedLanguageName","toISOString","LogLevel","ILogService","ILoggerService","DEFAULT_LOG_LEVEL","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Critical","ConsoleLogService","LogServiceAdapter","adapter","consoleLog","extractMessage","errorMessage_1","ConsoleLogInMainService","MultiplexLogService","logServices","logService","critical","DelegatedLogService","parseLogLevel","Off","NullLogService","getLogLevel","LogLevelToString","ExtensionIdVersionRegex","ExtensionsDownloader","extensionGalleryService","extensionsDownloadDir","extensionsDownloadPath","cleanUpPromise","cleanUp","vsixName","getName","tempLocation","download","retryUntil","folderStat","resolveMetadata","extensionManagementUtil_1","del","extensionManagement_1","log_1","ExtensionsLifecycle","processesLimiter","script","parseScript","runLifecycleHook","getExtensionStoragePath","scriptKey","lifecycleHook","lifecycleType","extensionLifecycleProcess","onexit","uninstallHook","opts","silent","extensionUninstallProcess","setEncoding","onStdout","onStderr","onOutput","onDebouncedOutput","groupEnd","globalStorageHome","FileService","BUFFER_SIZE","_onDidChangeFileSystemProviderRegistrations","_onWillActivateFileSystemProvider","onWillActivateFileSystemProvider","_onDidChangeFileSystemProviderCapabilities","onDidChangeFileSystemProviderCapabilities","_onDidRunOperation","onDidRunOperation","_onError","_onDidFilesChange","activeWatchers","writeQueues","providerDisposables","isPathCaseSensitive","onDidChangeCapabilities","onDidErrorOccur","joiners","capability","resourceForError","activateProvider","withProvider","doResolveFile","resolveTo","resolveSingleChildDescendants","trie","toFileStat","Boolean","recurse","labels_1","File","Directory","SymbolicLink","ctime","resolvedEntries","childResource","childStat","toResolve","doValidateCreateFile","bufferOrReadableOrStream","throwIfFileSystemIsReadonly","withWriteProvider","bufferOrReadableOrStreamOrBufferedStream","validateWriteFile","stream_1","doWriteUnbuffered","doWriteBuffered","withReadProvider","doReadAsFileStream","preferUnbuffered","cancellableSource","statPromise","validateReadFile","fileStreamPromise","readFileUnbuffered","readFileStreamed","readFileBuffered","fileStream","readFileStream","io_1","validateReadFileLimits","tooLargeErrorResult","doCanMoveCopy","sourceProvider","targetProvider","doValidateMoveCopy","doMoveCopy","isSameResourceWithDifferentPathCase","sourceFile","doCopyFolder","doPipeBuffered","doPipeBufferedToUnbuffered","doPipeUnbufferedToBuffered","doPipeUnbuffered","sourceFolder","targetFolder","sourceChild","targetChild","getExtUri","directory","directoriesToCreate","doValidateDelete","useTrash","watchDisposed","watchDisposable","doWatch","toWatchKey","writeQueue","readableOrStreamOrBufferedStream","ensureWriteQueue","doWriteStreamBufferedQueued","doWriteReadableBufferedQueued","streamOrBufferedStream","doWriteBuffer","totalBytesWritten","doWriteUnbufferedQueued","doPipeBufferedQueued","sourceHandle","targetHandle","doPipeUnbufferedQueued","doPipeUnbufferedToBufferedQueued","DiskFileSystemProvider","mapHandleToPos","writeHandles","_onDidWatchErrorOccur","_onDidChangeFile","recursiveFoldersToWatch","recursiveWatchRequestDelayer","_capabilities","toFilePath","toType","birthtime","toFileSystemProviderError","filePath","normalizedPos","normalizePos","updatePos","bytesLength","lastKnownPos","doWrite","bytesWritten","doDelete","fromFilePath","validateTargetDeleted","watchRecursive","watchNonRecursive","folderToWatch","refreshRecursiveWatchers","doRefreshRecursiveWatchers","recursiveWatcher","watcherService_3","watcherImpl","usePolling","watcherService_1","watcherService_2","recursiveWatcherLogLevelListener","watcherService","watcherService_4","logLevelListener","LocalizationsService","extensionManagementService","_onDidLanguagesChange","onDidLanguagesChange","LanguagePacksCache","getLanguagePacks","languagePacks","languages","extensionIdentifier","installed","languagePacksFilePath","languagePacksFileLimiter","initializedCache","withLanguagePacks","createLanguagePacksFromExtensions","createLanguagePacksFromExtension","updateHash","localizationContribution","localizations_1","languagePack","extensionInLanguagePack","md5","getLogFunction","BufferLogService","_logger","_log","FileLogService","backupIndex","initializePromise","initialize","createFile","loadContent","getBackupResource","getCurrentTimestamp","stringifyLogLevel","toTwoDigits","currentTime","toThreeDigits","FileLoggerService","instantiationService","loggers","bufferLog_1","createInstance","LoggerChannel","consoleFn","LoggerChannelClient","FollowerLogService","createRotatingLogger","filename","filesize","filecount","SpdLogService","logsFolder","_loggerCreationPromise","_createSpdLogLogger","processName","_spdlog","setAsyncMode","logfilePath","createRotatingLoggerAsync","createSpdLogLogger","disposeLogger","drop","LoggerService","baseName","spdlogService_1","fileLogService_1","severity_1","INotificationService","NeverShowAgainScope","NotificationsFilter","NoOpNotification","progress","NoOpProgress","onDidClose","onDidChangeVisibility","product","nameShort","nameLong","applicationName","dataFolderName","urlProtocol","reportIssueUrl","licenseName","licenseUrl","extensionAllowedProposedApi","rawProductConfiguration","rootPath","pkg","process_1","NativeEnvironmentService","_args","date_1","appRoot","homedir","vscodePortable","parseUserDataDir","appSettingsHome","tmpDir","userRoamingDataHome","settingsResource","resources","userDataSyncHome","userDataSyncLogResource","machineSettingsResource","workspaceStorageHome","keybindingsResource","keyboardLayoutResource","argvResource","product_1","snippetsHome","isExtensionDevelopment","extensionDevelopmentPath","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","parsePathArg","extensionsPath","vscodeExtensions","extraExtensionPaths","extraBuiltinExtensionPaths","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","disableExtensions","debugExtensionHost","parseExtensionHostPort","isBuilt","sharedIPCHandle","serviceMachineIdResource","crashReporterId","crashReporterDirectory","driverHandle","telemetryLogResource","disableTelemetry","isBuild","parseDebugPort","debugId","debugArg","debugBrkArg","defaultBuildPort","break","decorators_1","parseSearchPort","IProductService","Registry","Assert","Extensions","JSONContribution","jsonContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","schemas","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","as","jsonContributionRegistry_1","overrideIdentifierFromKey","getDefaultValue","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","_onDidUpdateConfiguration","onDidUpdateConfiguration","defaultValues","defaultLanguageConfigurationOverridesNode","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","excludedConfigurationProperties","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","deregisterConfiguration","removeFromSchema","allOf","defaultConfigurations","defaultConfiguration","description","$ref","updatePropertyDefaultValue","updateSchema","registerOverrideIdentifiers","updateOverridePropertyPatternKey","overrideIdentifier","propertyKeys","validateProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","getConfigurationProperties","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","getConfigurationValue","settingPath","component","accessSetting","keyFromOverrideIdentifier","IConfigurationService","isConfigurationOverrides","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","overrides","byOverrideIdentifier","override","identifiers","toOverridesByIdentifier","fromOverridesByIdentifier","configurationRegistry_1","fromOverride","toOverride","toOverrides","overrideRaw","keyInOverrideRaw","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","userValue","workspaceValue","workspaceFolderValue","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_scopes","_raw","_configurationModel","_parseErrors","configurationModel","doParseContent","parseRaw","doParseRaw","parseErrors","json","filterByScope","filterOverriddenProperties","getScope","propertySchema","UserSettings","userSettingsResource","parser","parseContent","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidateConfigurationModel","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","memoryValue","getOverrideValue","user","userLocal","userRemote","workspaceFolder","workspaceConfiguration","folderConfigurations","defaults","fromKeys","getKeysForOverrideIdentifier","toKeys","updateDefaultConfiguration","updateLocalUserConfiguration","updateRemoteUserConfiguration","updateWorkspaceConfiguration","folderConfiguration","currentFolderConfiguration","updateFolderConfiguration","folderConfig","deleteFolderConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguraiton","parseConfigurationModel","model","mergeChanges","keysSet","overridesMap","ConfigurationChangeEvent","currentConfiguraiton","currentWorkspace","_previousConfiguration","affectedKeys","affectedKeysTree","previousConfiguration","doesAffectedKeysTreeContains","requestedTree","AllKeysConfigurationChangeEvent","sourceConfig","allKeys","ConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","configurationModels_1","reloadConfigurationScheduler","reloadConfiguration","onDidDefaultConfigurationChange","loadConfiguration","toData","onDidChangeUserConfiguration","userConfigurationModel","compareAndUpdateLocalUserConfiguration","compareAndUpdateDefaultConfiguration","configurationChange","getTargetConfiguration","RemoteAuthorityResolverErrorCode","IRemoteAuthorityResolverService","RemoteAuthorityResolverError","_message","_code","_detail","isHandled","NotAvailable","setPrototypeOf","TemporarilyNotAvailable","NoResolverFound","getRemoteAuthority","getRemoteName","isSuccess","statusCode","hasNoContent","IRequestService","asText","asJson","registerConfiguration","order","http.proxy","markdownDescription","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","RequestChannel","headers","RequestChannelClient","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","hostname","auth","rejectUnauthorized","strictSSL","resolve_2","reject_2","getServiceMachineId","storageService","store","IStateService","FileStorage","dbPath","_database","lastFlushedSerializedDatabase","database","loadSync","loadAsync","saveSync","serializedDatabase","StateService","fileStorage","STATE_FILE","getItem","setItem","IS_NEW_KEY","TARGET_KEY","WillSaveStateReason","IStorageService","StorageScope","StorageTarget","AbstractStorageService","_onDidChangeValue","onDidChangeValue","_onDidChangeTarget","onDidChangeTarget","_onWillSaveState","onWillSaveState","_workspaceKeyTargets","_globalKeyTargets","getKeyTargets","reason","withPausedEmitters","updateKeyTarget","doStore","doRemove","keyTargets","workspaceKeyTargets","loadKeyTargets","globalKeyTargets","keysRaw","getBoolean","NONE","doFlush","logStorage","globalPath","workspacePath","safeParse","globalItems","globalItemsParsed","workspaceItems","workspaceItemsParsed","globalValues","table","workspaceValues","InMemoryStorageService","globalCache","workspaceCache","fallbackValue","getCache","valueStr","emitDidChangeValue","toWorkspace","ErrorEvent","callstack","BaseErrorTelemetry","telemetryService","flushDelay","ERROR_FLUSH_TIMEOUT","_flushHandle","_disposables","_telemetryService","_flushDelay","unbind","Errors","_onErrorEvent","installErrorListeners","_flushBuffer","_enqueue","publicLogError2","ErrorTelemetry","errorTelemetry_1","oldOnError","onerror","_onUncaughtError","uncaught_error_name","uncaught_error_msg","ITelemetryService","instanceStorageKey","currentSessionDateStorageKey","firstSessionDateStorageKey","lastSessionDateStorageKey","machineIdKey","Flags","FilterType","AssetType","Icon","Details","Changelog","Manifest","VSIX","License","Repository","PropertyType","Dependency","ExtensionPack","Engine","LocalizedLanguages","WebExtension","DefaultQueryState","pageNumber","pageSize","sortBy","sortOrder","criteria","assetTypes","Query","filterType","filters","searchText","criterium","SearchText","getStatistic","statistics","statisticName","getCoreTranslationAssets","assetType","asset","getVersionAsset","getRepositoryAsset","gitRegExp","fallbackUri","getDownloadAsset","fallbackAssetUri","getIconAsset","assetUri","getExtensions","getEngine","getLocalizedLanguages","getIsWebExtension","webExtensionProperty","getWebResource","toExtension","galleryExtension","querySource","assets","readme","changelog","license","repository","icon","coreTranslations","extensionName","extensionId","lastUpdated","displayName","shortDescription","installCount","rating","ratingCount","webResource","extensionPack","localizedLanguages","webExtension","preview","ExtensionGalleryService","requestService","productService","extensionsGallery","extensionsGalleryUrl","serviceUrl","extensionsControlUrl","controlUrl","commonHeadersPromise","resolveMarketplaceHeaders","names","total","firstPage","pageResult","getPage","pageIndex","getCompatibleExtensionByEngine","extensionValidator_1","withFlags","IncludeAssetUri","IncludeStatistics","IncludeFiles","IncludeVersionProperties","withPage","withFilter","Target","ExtensionId","ExtensionName","galleryExtensions","queryGallery","rawExtension","versionAsset","rawVersion","getLastValidExtensionVersion","isEnabled","publicLog2","IncludeLatestVersionOnly","quotedCategory","category","Category","quotedTag","tag","Tag","Featured","withSortBy","ids","withSortOrder","ct","nextPageQuery","ExcludeNonValidated","ExcludeWithFlags","flagsToString","Unpublished","commonHeaders","Content-Type","Accept","Accept-Encoding","Content-Length","url","api","request_1","resultCount","resultMetadata","metadataType","metadataItems","operationParam","downloadAsset","getAsset","publicLog","compatible","IncludeVersions","fallbackUrl","firstOptions","fallbackOptions","getLastValidExtensionVersionFromProperties","getLastValidExtensionVersionRecursively","manifestAsset","slow","X-Market-Client-Id","User-Agent","serviceMachineId_1","telemetry_1","productService_1","storage_1","TelemetryService","_configurationService","_experimentProperties","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","sendErrorTelemetry","piiPath","_updateUserOptIn","optIn","isHashedId","usingFallbackGuid","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","instanceId","msftInternal","anonymizeFilePaths","_cleanupInfo","errorEventName","publicLogError","updatedStack","cleanUpIndexes","nodeModulesRegex","fileRegex","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","privacyStatementUrl","tags","flattenKeys","flatKeys","NullTelemetryService","combinedAppender","appenders","NullAppender","configurationTelemetry","configurationSource","configurationKeys","validateTelemetryData","measurements","flat","cleanRemoteAuthority","TelemetryLogAppender","loggerService","getLogger","telemetryUtils_1","AppInsightsAppender","_eventPrefix","_defaultData","aiKeyOrClientFactory","_aiClient","_asyncAIClient","aiKey","appInsights","defaultClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","setInternalLogging","endpointUrl","getClient","aiClient","_withAIClient","trackEvent","resolveCommonProperties","msftInternalDomains","release","domainList","domain","msftDomain","verifyMicrosoftInternalDomain","seq","defineProperties","common.timesincesessionstart","common.sequence","SNAP","SNAP_REVISION","buildTelemetryMessage","mergedTelemetry","mergeTelemetry","dirName","dirs","statSync","telemetryJsonFolders","isRecentFolder","isStoredWorkspaceFolder","isRawFileWorkspaceFolder","isRawUriWorkspaceFolder","isSingleFolderWorkspaceIdentifier","WORKSPACE_EXTENSION","WORKSPACE_FILTER","UNTITLED_WORKSPACE_NAME","IWorkspacesService","isRecentWorkspace","isRecentFile","reviveWorkspaceIdentifier","configPath","isWorkspaceIdentifier","workspaceIdentifier","toWorkspaceIdentifier","isUntitledWorkspace","isSingleFolderWorkspaceInitializationPayload","WORKSPACE_SUFFIX","hasWorkspaceFileExtension","SLASH","getStoredWorkspaceFolder","folderURI","forceAbsolute","folderName","targetConfigFolderURI","useSlashForPath","folderPath","storedFolders","rewriteWorkspaceFileForNewLocation","rawWorkspaceContents","configPathURI","isFromUntitledWorkspace","targetConfigPathURI","storedWorkspace","doParseStoredWorkspace","sourceConfigFolder","targetConfigFolder","rewrittenFolders","slashForPath","absolute","jsonEdit","newContent","remoteHosts_1","restoreRecentlyOpened","workspaces","restoreGracefully","func","storedRecents","workspaces3","workspaceLabels","configURIPath","folderUri","files2","fileLabels","fileUri","toStoreData","recents","hasLabel","recent","IWorkspaceContextService","WorkbenchState","IWorkspace","isIWorkspace","IWorkspaceFolder","isIWorkspaceFolder","toResource","Workspace","_configuration","_foldersMap","_folders","updateFoldersMap","WorkspaceFolder","toWorkspaceFolder","toWorkspaceFolders","configuredFolders","workspaceConfigFile","relativeTo","configuredFolder","workspaces_1","comparisonKey","TelemetryChannel","setEnabled","getTelemetryInfo","setExperimentProperty","TelemetryChannelClient","Channel","_sender","cpus","cores","memoryFree","freemem","memoryTotal","totalmem","userInfo","TELEMETRY_URL","named","metadataPath","amd_1","isInternalConfiguration","DefaultConfiguration","getNlsConfiguration","util","lp","_languagePackSupport","getTranslations","getLocaleFromConfig","localeConfigUri","_m1","_m2","m4","length_1","Connection","offline","_offline","doReconnect","doDispose","ManagementConnection","setOffline","getUnderlyingSocket","beginAcceptReconnection","endAcceptReconnection","ExtensionHostConnection","field","sendInitMessage","skipWebSocketFrames","proc","VSCODE_EXTHOST_WILL_SEND_SOCKET","VSCODE_HANDLES_UNCAUGHT_ERRORS","VSCODE_LOG_STACK","VSCODE_LOG_LEVEL","LOG_LEVEL","VSCODE_NLS_CONFIG","ipc_net_2","logger_2","reconnectionToken","rawMessage","authenticate","sendMessage","sendControl","encodePath","IEnvironmentVariableService","EnvironmentVariableMutatorType","getMissingMutatorsFromArray","otherMutatorExtensions","mutator","MergedEnvironmentVariableCollection","collections","collection","variable","environmentVariable_1","Replace","lowerToActualVariableNames","mutators","actualVariable","Append","Prepend","otherMutators","currentMutators","otherMutator","getChangedMutatorsFromArray","serializeEnvironmentVariableCollection","deserializeEnvironmentVariableCollection","serializedCollection","TERMINAL_VIEW_ID","KEYBINDING_CONTEXT_TERMINAL_IS_OPEN","contextkey_1","KEYBINDING_CONTEXT_TERMINAL_FOCUS","KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE_KEY","KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE","KEYBINDING_CONTEXT_TERMINAL_NOT_FOCUSED","toNegated","KEYBINDING_CONTEXT_TERMINAL_A11Y_TREE_FOCUS","KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED","KEYBINDING_CONTEXT_TERMINAL_TEXT_NOT_SELECTED","KEYBINDING_CONTEXT_TERMINAL_FIND_VISIBLE","KEYBINDING_CONTEXT_TERMINAL_FIND_NOT_VISIBLE","KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_FIND_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_NOT_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_PROCESS_SUPPORTED","IS_WORKSPACE_SHELL_ALLOWED_STORAGE_KEY","NEVER_MEASURE_RENDER_TIME_STORAGE_KEY","SHOW_TERMINAL_CONFIG_PROMPT","EXT_HOST_CREATION_DELAY","TerminalCursorStyle","BLOCK","LINE","UNDERLINE","TERMINAL_CONFIG_SECTION","TERMINAL_ACTION_CATEGORY","DEFAULT_LETTER_SPACING","MINIMUM_LETTER_SPACING","DEFAULT_LINE_HEIGHT","MINIMUM_FONT_WEIGHT","MAXIMUM_FONT_WEIGHT","DEFAULT_FONT_WEIGHT","DEFAULT_BOLD_FONT_WEIGHT","SUGGESTIONS_FONT_WEIGHT","DEFAULT_LOCAL_ECHO_EXCLUDE","ProcessState","LinuxDistro","TitleEventSource","TERMINAL_COMMAND_ID","DEFAULT_COMMANDS_TO_SKIP_SHELL","terminalContributionsDescriptor","extensionPoint","defaultExtensionKind","jsonSchema","required","TerminalDataBufferer","_callback","_terminalBufferMap","throttleBy","timeoutId","mergeEnvironments","configKey","actualKey","_mergeEnvironmentValue","addTerminalEnvironmentKeys","detectLocale","shouldSetLangEnvVariable","getLangEnvVariable","mergeNonNullKeys","resolveConfigurationVariables","variableResolver","lang","languageVariants","af","am","be","bg","ca","cs","da","de","en","es","et","eu","fi","fr","he","hr","hu","hy","ja","kk","ko","nl","no","pl","pt","ro","ru","sk","sl","sr","sv","tr","uk","zh","_resolveCwd","_sanitizeCwd","getShellSetting","fetchSetting","isWorkspaceShellAllowed","platformOverride","shellConfigValue","getCwd","customCwd","unresolved","ignoreConfigurationCwd","escapeNonWindowsPath","createVariableResolver","lastActiveWorkspace","configurationResolverService","getDefaultShell","defaultShell","isWoW64","windir","useAutomationShell","maybeExecutable","sysnativePath","getDefaultShellArgs","platformKey","shellArgsConfigValue","resolvedArgs","createTerminalEnvironment","shellLaunchConfig","envFromConfig","baseEnv","strictEnv","allowedEnvFromConfig","getSystemShell","_TERMINAL_DEFAULT_SHELL_WINDOWS","isAtLeastWindows10","is32ProcessOn64Windows","powerShellPath","processes","getSystemShellWindows","_TERMINAL_DEFAULT_SHELL_UNIX_LIKE","unixLikeTerminal","SHELL","getSystemShellUnixLike","detectedDistro","terminal_1","Fedora","Ubuntu","getWindowsBuildNumber","osVersion","buildNumber","getShellPathFromRegistry","shellName","shellPath","GetStringRegKey","linuxDistro","detectAvailableShells","system32Path","useWSLexe","expectedLocations","Command Prompt","Windows PowerShell","PowerShell","WSL Bash","Git Bash","validateShellPaths","potentialPaths","shells","detectAvailableWindowsShells","detectAvailableUnixShells","mainProcessParentEnv","getMainProcessParentEnv","baseEnvironment","mainProcessId","ppid","codeProcessName","rawEnv","envPath","TerminalProcess","_shellLaunchConfig","cols","_executableEnv","windowsEnableConpty","_logService","_currentTitle","_titleInterval","_writeQueue","_onProcessData","_onProcessExit","_onProcessReady","_onProcessTitleChanged","_initialCwd","useConpty","_ptyOptions","conptyInheritCursor","initialText","_delayedResizer","DelayedResizer","onTrigger","dimensions","resize","exitMessage","_exitMessage","onProcessData","onProcessExit","onProcessReady","onProcessTitleChanged","firstError","_validateCwd","_validateExecutable","setupPtyProcess","slc","envPaths","terminalEnvironment_1","ptyProcess","_ptyProcess","_processStartupComplete","_closeTimeout","_queueProcessExit","_exitCode","exitCode","_setupTitlePolling","_sendProcessId","_sendProcessTitle","_kill","ex","immediate","_startWrite","_writeTimeout","_doWrite","readlink","linkedstr","_onTrigger","_timeout","IConfigurationResolverService","AbstractVariableResolverService","_context","_labelService","_envVariables","_contributedVariables","ev","recursiveResolve","commandValueMapping","resolvedVariables","windows","osx","linux","resolveAnyBase","newConfig","variables","resolution","resolveString","replaced","VARIABLE_REGEXP","VARIABLE_LHS","resolvedValue","evaluateSingleVariable","displayUri","getUriLabel","noPrefix","argument","getFilePath","getFolderPathForFile","getWorkspaceFolderPathForFile","getFolderUri","getWorkspaceFolderCount","resolveFromMap","lineNumber","getLineNumber","selectedText","getSelectedText","ep","getExecPath","IEditorService","ACTIVE_GROUP","SIDE_GROUP","SideBySideEditor","ActiveEditorDirtyContext","ActiveEditorPinnedContext","ActiveEditorStickyContext","ActiveEditorReadonlyContext","ActiveEditorContext","ActiveEditorAvailableEditorIdsContext","TextCompareEditorVisibleContext","TextCompareEditorActiveContext","EditorGroupEditorsCountContext","ActiveEditorGroupEmptyContext","ActiveEditorGroupIndexContext","ActiveEditorGroupLastContext","MultipleEditorGroupsContext","SingleEditorGroupsContext","EditorsVisibleContext","InEditorZenModeContext","IsCenteredLayoutContext","SplitEditorsVertically","EditorAreaVisibleContext","TEXT_DIFF_EDITOR_ID","BINARY_DIFF_EDITOR_ID","isTextEditorPane","getViewState","Verbosity","SaveReason","EditorInput","_onDidChangeDirty","onDidChangeDirty","_onDidChangeLabel","onDidChangeLabel","_onDispose","onDispose","getTypeId","verbosity","getTitle","candidates","typeId","otherInput","isEditorInputWithPreferredResource","preferredResource","EncodingMode","SideBySideEditorInput","_secondary","_primary","registerListeners","onceSecondaryDisposed","secondary","oncePrimaryDisposed","primary","isReadonly","isUntitled","isDirty","isSaving","save","saveAs","revert","getTelemetryDescriptor","EditorModel","isEditorInputWithOptions","editor","EditorOptions","settings","forceReload","revealIfVisible","revealIfOpened","preserveFocus","activation","pinned","sticky","inactive","ignoreError","TextEditorOptions","textEditorOptions","selection","startLineNumber","startColumn","endLineNumber","endColumn","viewState","editorViewState","selectionRevealType","saveViewState","scrollType","gotApplied","restoreViewState","setSelection","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeInCenterIfOutsideViewport","revealRangeInCenter","EditorCommandsContextActionRunner","actions_1","EditorResourceAccessor","supportSideBySide","BOTH","getOriginalUri","filterByScheme","PRIMARY","originalResource","filterUri","getCanonicalUri","canonicalResource","CloseDirection","EditorInputFactories","customEditorInputFactoryInstances","editorInputFactoryConstructors","editorInputFactoryInstances","accessor","createEditorInputFactory","editorInputId","fileEditorInputFactory","pathsToEditors","editors","openOnlyIfExists","columnNumber","overrideId","forceFile","forceUntitled","EditorsOrder","computeEditorAriaLabel","groupCount","ariaLabel","getAriaLabel","isPinned","isSticky","viewColumnToEditorGroup","editorGroupService","viewColumn","editorService_1","groups","getGroups","candidateGroup","firstGroup","editorGroupToViewColumn","editorGroup","getGroup","activeGroup","REMOTE_TERMINAL_CHANNEL_NAME","RemoteTerminalChannelClient","_remoteAuthority","_channel","_workspaceContextService","_resolverService","_environmentVariableService","_remoteAuthorityResolverService","_editorService","activeWorkspaceRootUri","shouldPersistTerminal","terminalConfig","terminal.integrated.automationShell.windows","_readSingleTerminalConfiguration","terminal.integrated.automationShell.osx","terminal.integrated.automationShell.linux","terminal.integrated.shell.windows","terminal.integrated.shell.osx","terminal.integrated.shell.linux","terminal.integrated.shellArgs.windows","terminal.integrated.shellArgs.osx","terminal.integrated.shellArgs.linux","terminal.integrated.env.windows","terminal.integrated.env.osx","terminal.integrated.env.linux","terminal.integrated.inheritEnv","inheritEnv","terminal.integrated.cwd","terminal.integrated.detectLocale","allResolvedVariables","resolveWithInteraction","envVariableCollections","environmentVariableShared_1","resolverResult","resolveAuthority","resolverEnv","extensionHostEnv","workspaceFolders","activeWorkspaceFolder","activeFileResource","editor_1","activeEditor","workspaceId","workspaceName","getWorkspaceLabel","terminalId","reqId","isError","payload","isInitialization","workspace_1","configurationResolver_1","remoteAuthorityResolver_1","label_1","Translations","aKeys","bKeys","Logger","messageHandler","_messageHandler","notification_1","MANIFEST_FILE","ExtensionManifestHandler","ourVersion","absoluteFolderPath","isUnderDevelopment","_ourVersion","_absoluteFolderPath","_isBuiltin","_isUnderDevelopment","_absoluteManifestPath","ExtensionManifestParser","manifestContents","__metadata","isUserBuiltin","jsonErrorMessages_1","ExtensionManifestNLSReplacer","_nlsConfig","extensionDescription","reportErrors","localized","reportInvalidFormat","translationId","localizedMessages","translationPath","translationBundle","package","findMessageBundles","messageBundle","messageBundleContent","resolveOriginalMessageBundle","_replaceNLStrings","originalMessageBundle","originalBundleContent","devMode","toCheck","literal","originalMessages","messageScope","processEntry","messageKey","ExtensionManifestValidator","_extensionDescription","isValidExtensionDescription","extensionLocation","extensionFolderPath","baseIsValidExtensionDescription","_isStringArray","activationEvents","normalizedAbsolutePath","ExtensionScannerInput","extensionPoints_1","DefaultExtensionResolver","ExtensionScanner","replaceNLS","resolver","obsolete","obsoleteFileContents","refs","resolveExtensions","ref","createNLSConfig","_extensionDescriptions","scanExtension","extensionDescriptions","scanExtensions","builtinExtensions","extraBuiltinExtensions","resultMap","resultArr","aLastSegment","bLastSegment","Watcher","diskFileSystemProvider_1","watches","FileProviderChannel","watchers","filechange","session","cts","unwatch","_watch","requestResourcePath","ExtensionEnvironmentChannel","telemetry","getEnvironmentData","getDiagnosticInfo","logTelemetry","flushTelemetry","settingsPath","extensionHostLogsPath","scanMultiple","VSCODE_DEV","scanBuiltin","scanInstalled","allExtensions","uniqueExtensions","multipleExtensions","VariableResolverService","variableResolver_1","Terminal","_pid","_title","_isOrphan","replayData","maxReplayData","totalReplayData","disposeDelay","buffering","_onEvent","bufferer","startBuffering","disposeTimeout","persist","terminalDataBuffering_1","overflow","terminalProcess_1","isOrphan","onEvent","shutdown","getInitialCwd","TerminalProviderChannel","onTerminalProcessEvent","getTerminal","createTerminalProcess","startTerminalProcess","sendInputToTerminalProcess","shutdownTerminalProcess","resizeTerminalProcess","getTerminalInitialCwd","getTerminalCwd","sendCommandResultToTerminalProcess","orphanQuestionReply","listTerminals","activeWorkspaceUri","activeWorkspace","resolverService","terminalEnvironment","resolvedShellLaunchConfig","getDefaultShellAndArgs","getEnvFromConfig","VSCODE_IPC_HOOK_CLI","getNonInheritedEnv","environmentVariableCollection_1","applyToProcessEnvironment","terminal","REMOTE_FILE_SYSTEM_CHANNEL_NAME","RemoteFileSystemProvider","remoteAgentService","_onDidChangeCapabilities","getConnection","setCaseSensitive","remoteAgentEnvironment","getEnvironment","eventsOrError","isCaseSensitive","dataOrErrorOrEnd","RemoteExtensionLogFileName","IRemoteAgentService","ExtractError","cause","toExtractError","extractZip","zipfile","targetPath","extractedEntriesCount","readNextEntry","readEntry","entryCount","sourcePathRegex","fileName","targetFileName","openZipStream","attr","externalFileAttributes","modeFromEntry","targetDirName","istream","extractEntry","openZip","zipFile","lazy","yauzl_1","lazyEntries","openReadStream","zipPath","yazl","ZipFile","addBuffer","localPath","addFile","zipStream","outputStream","extract","sourcePath","zip_1","ExtensionsScanner","beforeRemovingExtension","_devSystemExtensionsPath","systemExtensionsPath","uninstalledPath","uninstalledFileLimiter","removeUninstalledExtensions","removeOutdatedExtensions","scanSystemExtensions","joinErrors","scanUserExtensions","excludeOutdated","uninstalled","getUninstalledExtensions","scanAllUserExtensions","scanExtensionsInDirs","identifierWithVersion","tempPath","extensionPath","extractAtLocation","setMetadata","manifestPath","parseManifest","withUninstalledExtensions","removeExtension","extractPath","renamePath","systemExtensionsPromise","scanDefaultSystemExtensions","devSystemExtensionsPromise","scanDevSystemExtensions","systemExtensions","devSystemExtensions","limiter","extensionsFolders","extensionFolder","readManifest","readmeUrl","changelogUrl","devSystemExtensionsList","getDevSystemExtensionsList","scanExtensionsInDir","devSystemExtensionsPath","removeUninstalledExtension","builtInExtensions","errorOrErrors","previousValue","currentValue","extensionNls_1","ExtensionManagementService","galleryService","downloadService","lastReportTimestamp","installingExtensions","uninstallingExtensions","extensionLifecycle","extensionLifecycle_1","extensionsScanner","extensionsScanner_1","postUninstall","manifestCache","extensionsManifestCache_1","extensionsDownloader","extensionDownloader_1","collectFiles","downloadLocation","downloadVsix","extensionManagementUtil_2","collectFilesFromDirectory","uninstallExtension","unsetUninstalledAndGetLocal","getGalleryMetadata","installFromZipPath","downloadedLocation","installExtension","installDependenciesAndPackExtensions","checkAndGetCompatibleVersion","reportTelemetry","getTelemetryEvent","doInstallFromGallery","gallery","existingExtension","installableExtension","downloadInstallableExtension","donotIncludePackAndDependencies","setUninstalled","isMalicious","compatibleExtension","getCompatibleExtension","findGalleryExtension","downloadExtension","saveMetadataForLocalExtension","extractAndInstall","isUninstalled","unsetUninstalled","extractUserExtension","dependenciesAndPackExtensions","old","galleryIdentifier","extensionsToInstall","rollback","extensionsToUninstall","extensionToUninstall","checkForDependenciesAndUninstall","findGalleryExtensionByName","findGalleryExtensionById","preUninstallExtension","packedExtensions","donotIncludePack","getAllPackExtensionsToUninstall","uninstallExtensions","postUninstallExtension","otherExtensionsToUninstall","donotCheckDependents","checkForDependents","doUninstall","dependents","getDependents","remainingDependents","dependent","getDependentsErrorMessage","dependingExtension","extensionsPack","packOfPackedExtensions","packedExtension","userExtensions","reportStatistic","errorcode","filterUninstalled","allUninstalled","reportedExtensions","updateReportCache","extensionData","download_1","vszipExtract","vszip","vszipBuffer","tar","tarPath","pack","tarStream","finalize","archivePath","extractTar","extractAssets","assetPath","extractor","fail","extractData","fileData","nextEntry","rawName","fstream","enableCustomMarketplace","SERVICE_URL","itemUrl","ITEM_URL","recommendationsUrl","RequestService","configure","proxy","proxyStrictSSL","authorization","proxyAuthorization","agent","proxy_1","Proxy-Authorization","_request","endpoint","rawRequest","getRawRequest","getNodeRequest","password","followRedirects","zlib_1","createGunzip","abort","notInstalled","useId","getId","withVersion","EXTENSION_ID_REGEX","getIdAndVersion","Main","setInstallSource","listExtensions","installExtensions","locateExtension","telemetry_2","installSource","showVersions","categories","builtinExtensionIds","force","failed","installedExtensionsManifests","checkIfNotInstalled","installedExtension","vsixs","installExtensionInfos","installVSIX","getGalleryExtensions","extensionInfo","notFound","updateLocalizationsCache","extensionIds","extensionsWithIdAndVersion","newer","getExtensionId","uninstalledExtensions","localizationService","eventPrefix","environmentService_1","fileService_1","diskFileSystemProvider","registerProvider","configurationService_1","state_1","stateService_1","_serviceBrand","instantiationService_1","invokeFunction","stateService","requestService_1","extensionManagementService_1","extensionGalleryService_1","aiConfig","asimovKey","appInsightsAppender_1","commonProperties_1","telemetryService_1","createChild","Vscode","_onDidClientConnect","ipc","maxExtraOfflineConnections","cliProcessMain_1","servicesPromise","initializeServices","startPath","parseUrl","workbenchWebConfiguration","workspaceUri","workspaceProvider","homeIndicator","href","nls_2","remoteUserDataUri","productConfiguration","nlsConfiguration","protocol_1","reconnection","handshake","desiredConnectionType","debugPort","getDebugPort","reconnect","connection_1","disposeOldOfflineConnections","tunnel","mkdirSync","remoteAgentService_1","logIpc_1","extensionHostDebugIpc_1","loggerService_1","id_1","logsDataCleaner_1","insights_1","telemetryLogAppender_1","localizations_2","extensionManagementIpc_1","channel_1","requestIpc_1","remoteAgentFileSystemChannel_1","remoteTerminalChannel_1","marketplace_1","exit","CODE_SERVER_PARENT_PID","parentPid","server_1","cli","handleWebSocket"],"mappings":";;;CAAA;AACA,IC2EAA,ED3EAC,EAAA,CAAA,UAAA,UAAA,2BAAA,sBAAA,iDAAA,0BAAA,uBAAA,qBAAA,SAAA,yBAAA,yBAAA,uBAAA,mBAAA,6BAAA,wBAAA,uBAAA,yBAAA,wBAAA,wBAAA,2BAAA,yBAAA,KAAA,6CAAA,iCAAA,8BAAA,sBAAA,KAAA,qCAAA,uCAAA,iDAAA,qBAAA,6DAAA,iEAAA,yBAAA,gBAAA,+BAAA,sBAAA,OAAA,gBAAA,2CAAA,yDAAA,yBAAA,wBAAA,wBAAA,OAAA,8BAAA,+BAAA,4CAAA,yCAAA,8CAAA,mBAAA,wBAAA,iCAAA,mDAAA,+CAAA,qDAAA,gDAAA,qCAAA,qCAAA,wBAAA,qBAAA,4BAAA,0BAAA,+BAAA,uBAAA,mCAAA,yBAAA,gCAAA,2CAAA,8BAAA,yCAAA,wDAAA,iDAAA,uCAAA,+CAAA,kDAAA,wDAAA,iEAAA,gDAAA,iDAAA,8CAAA,sBAAA,2DAAA,iEAAA,gDAAA,8CAAA,yDAAA,oDAAA,+DAAA,kEAAA,0CAAA,wBAAA,4BAAA,+BAAA,0BAAA,4BAAA,2BAAA,0BAAA,qBAAA,yBAAA,sBAAA,6BAAA,6BAAA,0BAAA,kBAAA,qBAAA,uBAAA,2BAAA,uBAAA,SAAA,gCAAA,yBAAA,6BAAA,sBAAA,qCAAA,0CAAA,mCAAA,gCAAA,0BAAA,qCAAA,gEAAA,oEAAA,yEAAA,sEAAA,gEAAA,0DAAA,8CAAA,wCAAA,qCAAA,uDAAA,4CAAA,uDAAA,kDAAA,oCAAA,+BAAA,oCAAA,uDAAA,4DAAA,6EAAA,+DAAA,iDAAA,gEAAA,sDAAA,qDAAA,qDAAA,4DAAA,sDAAA,yCAAA,uCAAA,iEAAA,+DAAA,uDAAA,iCAAA,2DAAA,0DAAA,mCAAA,wCAAA,gCAAA,qCAAA,+CAAA,0DAAA,uDAAA,oDAAA,wCAAA,wCAAA,iCAAA,MAAA,uDAAA,+BAAA,sCAAA,qCAAA,8CAAA,+CAAA,oDAAA,uCAAA,2CAAA,yCAAA,6BAAA,0BAAA,4BAAA,0BAAA,qEAAA,6DAAA,2DAAA,qDAAA,2EAAA,sEAAA,6BAAA,6DAAA,0DAAA,wDAAA,yBAAA,mEAAA,yDAAA,yDAAA,6BAAA,8BAAA,wBAAA,iBAAA,6BAAA,cAAA,iBAAA,MAAA,QAAA,OAAA,QAAA,OAAA,aAAA,OAAA,mBACAC,EAAA,SAAAC;AAEA,IADA,IAAAC,EAAA,GACAC,EAAA,EAAAC,EAAAH,EAAAI,OAAAF,EAAAC,EAAAD,IACAD,EAAAC,GAAAJ,EAAAE,EAAAE,IAEA,OAAAD,GCEA,SAAAI,EAAAR,GAEAA,EAAAS,uBAAAT,EAAAS,wBAAA,GAEA,MAAAC,EAAA,EACAC,EAAA,iBAAAC,aAAA,mBAAAA,YAAAC,KAAAD,YAAAC,KAAAC,KAAAF,aAAA,OAsDA,MARA,CACAC,KANA,SAAAE,GACAf,EAAAS,uBAAAO,KAAAD,EAAAE,KAAAC,OACAP,EAAAI,IAKAI,WAtCA,WACA,MAAAf,EAAA,GACAgB,EAAApB,EAAAS,uBACA,IAAA,IAAAJ,EAAA,EAAAA,EAAAe,EAAAb,OAAAF,GAAAK,EACAN,EAAAY,KAAA,CACAD,KAAAK,EAAAf,GACAgB,UAAAD,EAAAf,EAAA,KAGA,OAAAD,GA8BAkB,YA3BA,SAAAC,EAAAC,GACA,MAAAJ,EAAApB,EAAAS,uBACA,IAAAgB,EAAAD,EACAE,EAAA,EACA,IAAA,IAAArB,EAAAe,EAAAb,OAAAG,EAAAL,GAAA,EAAAA,GAAAK,EACA,GAAAU,EAAAf,KAAAoB,EAAA,CACA,GAAAA,IAAAD,EAMA,OAAAJ,EAAAM,EAAA,GAAAN,EAAAf,EAAA,GAJAqB,EAAArB,EACAoB,EAAAF,EAOA,OAAA,GAYAI,cAhDA,SAAAP,GACApB,EAAAS,uBAAAmB,OAAA,EAAA,KAAAR,IAgDAS,cA7CA,WACA,OAAA7B,EAAAS,uBAAAqB,MAAA,KCPA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAMA,SAAAC,EAAAC,GACA,OAAA,IAAAC,QAAAC,GAAAL,EAAAE,OAAAC,EAAAE,IAuDA,SAAAC,EAAAC,GACA,OAzCAJ,EAyCAI,EAxCA,IAAAH,QAAA,CAAAC,EAAAG,IAAAR,EAAAS,MAAAN,EAAA,CAAAO,EAAAC,IAAAD,EAAAF,EAAAE,GAAAL,EAAAM,MAwCAC,KAAAC,GACAA,EAAAC,gBAAAD,EAAAE,iBAlCA,SAAAC,GACA,OAAA,IAAAZ,QAAA,CAAAC,EAAAG,IAAAR,EAAAiB,QAAAD,EAAA,CAAAN,EAAAQ,IAAAR,EAAAF,EAAAE,GAAAL,EAAAa;CAkCAD,CAAAV,GACAK,KAAAO,GAAAf,QAAAgB,IAAAD,EAAAE,IAAAC,GAAAhB,EAAAP,EAAAwB,KAAAhB,EAAAe,OACAV,KAAA,KArBA,SAAAI,GACA,OAAA,IAAAZ,QAAA,CAAAC,EAAAG,IAAAR,EAAAwB,MAAAR,EAAAN,GAAAA,EAAAF,EAAAE,GAAAL,OAAAoB,MAoBAD,CAAAjB,IAbA,SAAAJ,GACA,OAAA,IAAAC,QAAA,CAAAC,EAAAG,IAAAR,EAAA0B,OAAAvB,EAAAO,GAAAA,EAAAF,EAAAE,GAAAL,OAAAoB,KAcAC,CAAAnB,GAEAG,IACA,GAAA,WAAAA,EAAAiB,KAGA,MAAAjB,IArDA,IAAAP,EAyDA,SAAAyB,EAAAzB,GACA,OAAA,IAAAC,SAAA,SAAAyB,EAAAC,GACA9B,EAAA4B,SAAAzB,EAAA,QAAA,SAAAO,EAAAqB,GACArB,EACAoB,EAAApB,GAGAmB,EAAAE,SAUA,SAAAC,EAAA7B,EAAA8B,GACA,OAAA,IAAA7B,SAAA,SAAAyB,EAAAC,GACA9B,EAAAgC,UAAA7B,EAAA8B,EAAA,QAAA,SAAAvB,GACAA,EACAoB,EAAApB,GAGAmB,UAuLA,MAAA,CACAK,oBAlIA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAA,WAAAA,EACA,OAAAlC,QAAAyB,QAAA,CAAAS,OAAAA,EAAAC,mBAAA,GAAAC,QAAA,IAGA,GAAAC,QAAAC,IAAA,WACA,OAAAtC,QAAAyB,QAAA,CAAAS,OAAAA,EAAAC,mBAAA,KAQA,GAAAD,IAAA,OAAAA,GAAA,UAAAA,GACA,OAAAlC,QAAAyB,QAAA,CAAAS,OAAAA,EAAAC,mBAAA,KAGA,MAAAI,EAAAL,EAEArC,EAAAtB,KAAA,uBAEA,MAAAiE,EAAA,SAAAN,GAEA,OADArC,EAAAtB,KAAA,qBACAyB,QAAAyB,QAAA,CAAAS,OAAAA,EAAAC,mBAAA,MAEA,IACA,IAAAJ,EACA,OAAAS,EAAAD,GAEA,MAAAE,EA1EA,SAAAT,GACA,MAAAU,EAAA/C,EAAAwB,KAAAa,EAAA,sBACA;AAIA,OAAAW,KAAAC,MAAAhD,EAAAiD,aAAAH,EAAA,SACA,MAAApC,KAmEAwC,CAAAd,GACA,IAAAS,EACA,OAAAD,EAAAD,GAGA,KADAL,EA5DA,SAAAa,EAAAb,GACA,IACA,KAAAA,GAAA,CACA,GAAAa,EAAAb,GACA,OAAAA,EACA,CACA,MAAAc,EAAAd,EAAAe,YAAA,KACA,KAAAD,EAAA,GAGA,OAFAd,EAAAA,EAAAgB,UAAA,EAAAF,KAMA,MAAA1C,GACA6C,QAAAC,MAAA,gDAAA9C,IA6CA+C,CAAAZ,EAAAP,IAEA,OAAAM,EAAAD,GAEA,MAAAe,EAAAb,EAAAP,GACA,IAAAqB,EACA,OAAAD,GAAA,iBAAAA,EAAAE,MAAAF,EAAAG,cAAA,iBAAAF,EAAAD,EAAAG,aAAA,QAGA3D,EAAAyD,GAAA/C,KAAAkD,IACA,IAAAA,EACA,OAAAlB,EAAAD,GAEA,MAAAoB,EAAAL,EAAAE,KAAA,IAAAtB,EACA0B,EAAAjE,EAAAwB,KAAAa,EAAA,MAAA2B,GACAE,EAAAlE,EAAAwB,KAAAyC,EAAA7B,GACA+B,EAAAnE,EAAAwB,KAAAyC,EAAA,YACAG,EAAApE,EAAAwB,KAAAyC,EAAA,kBACA9F,EAAA,CACAoE,OAAAK,EACAJ,mBAAA,CAAA6B,IAAA9B,GACA+B,gBAAAN,EACAO,wBAAAJ,EACAK,WAAAP,EACAQ,kCAAAP,EACAQ,eAAAN,GAEA,OAAAjE,EAAAiE,GAAAvD,KAAA8D,IAEA,IAAAC,EAMA,OAJAA,EADAD,EACApE,EAAA0D,GAEA5D,QAAAyB,aAAAJ,IAEAb,KAAA,IACAV,EAAA+D,GAAArD,KAAAkD,GACAA,GAtNA,SAAA3D,GACA,OAAA,IAAAC,QAAA,CAAAC,EAAAG,KAAA,MAAAoE,EAAA,IAAA7F,KAAAiB,EAAA6E,OAAA1E,EAAAyE,EAAAA,EAAAlE,GAAAA,EAAAF,EAAAE,GAAAL,OAuNAyE,CAAAb,GAAAc,MAAA,QACA9E,EAAAtB,KAAA,qBACAT,GAlMA,SAAA8C,GACA,OAAA,IAAAZ,QAAA,CAAAC,EAAAG,IAAAR,EAAAgF,MAAAhE,EAAA,CAAAiE,WAAA,GAAAvE,GAAAA,GAAA,WAAAA,EAAAiB,KAAAnB,EAAAE,GAAAL,EAAAW;CAmMAkE,CAAAjB,GAAArD,KAAA,IACAR,QAAAgB,IAAA,CAAAQ,EAAAS,GAAAT,EAAA+B,MACA/C,KAAAuE,IACA,MAAAC,EAAArC,KAAAC,MAAAmC,EAAA,IACAE,EAAAtC,KAAAC,MAAAmC,EAAA,IAAAG,SACAC,EAAAC,OAAAC,KAAAL,EAAAG,SACAG,EAAA,GACA,IAAA,MAAAC,KAAAJ,EAAA,CACA,MAAAK,EAAAR,EAAAG,QAAAI,GACApG,EAAAiG,OAAAK,OAAA,MACA,IAAA,MAAAC,KAAAF,EAAA,CACA,MAAAH,EAAAL,EAAAK,KAAAK,GACAC,EAAAX,EAAAY,SAAAF,GACAjC,EAAAwB,EAAAS,GACA,IAAAG,EACA,GAAApC,EAAA,CACAoC,EAAA,GACA,IAAA,IAAA9H,EAAA,EAAAA,EAAAsH,EAAApH,OAAAF,IAAA,CACA,MAAA+H,EAAAT,EAAAtH,GAEA,IAAAgI,EAAAtC,EADA,iBAAAqC,EAAAA,EAAAA,EAAAE,UAEA3E,IAAA0E,IACAA,EAAAJ,EAAA5H,IAEA8H,EAAAnH,KAAAqH,SAGAF,EAAAF,EAEAxG,EAAAuG,GAAAG,EAEAP,EAAA5G,KAAAkD,EAAAjC,EAAAwB,KAAA0C,EAAA0B,EAAAU,QAAA,MAAA,KAAA,aAAAtD,KAAAuD,UAAA/G,KAGA,OADAmG,EAAA5G,KAAAkD,EAAAkC,EAAAnB,KAAAuD,UAAA5C,EAAAG,gBACAzD,QAAAgB,IAAAsE,KACA9E,KAAA,KACAX,EAAAtB,KAAA,qBACAT,IACA6G,MAAArE,IACA6C,QAAAC,MAAA,uCAAA9C,GACAkC,EAAAN,WA5EAM,EAAAD,GAkFA,MAAAjC,GAEA,OADA6C,QAAAC,MAAA,uCAAA9C,GACAkC,EAAAN,MAUA,kHC1SAiE,EAAAC,GAAA,SAAmBC,EAAiBC,GACnC,IAAKD,EACJ,MAAM,IAAIE,MAAMD,EAAU,qBAAqBA,KAAa,0ECL9D,SAAgBE,EAAgBC;AAC/B,MAAO,CAACtH,EAAa6G,EAAaU,KACjC,IAAIC,EAAuB,KACvBC,EAAsB,KAU1B,GARgC,mBAArBF,EAAWL,OACrBM,EAAQ,QACRC,EAAKF,EAAWL,OACoB,mBAAnBK,EAAWG,MAC5BF,EAAQ,MACRC,EAAKF,EAAWG,MAGZD,EACJ,MAAM,IAAIL,MAAM,iBAGjBG,EAAWC,GAAUF,EAAMG,EAAIZ,+HAjBjCG,EAAAK,gBAAAA,EAqBA,IAAIM,EAAY,EAChB,SAAgBC,IACf,MAAMC,EAAmB,WAAWF,MACpC,IAAIG,OAAY5F,EAEhB,MAAMvD,EAAS,SAAiBqB,EAAa6G,EAAaU,GACzD,IAAIC,EAAuB,KACvBC,EAAsB,KAc1B,GAZgC,mBAArBF,EAAWL,OACrBM,EAAQ,QAGW,KAFnBC,EAAKF,EAAWL,OAERpI,QACPkF,QAAQ+D,KAAK,kEAEsB,mBAAnBR,EAAWG,MAC5BF,EAAQ,MACRC,EAAKF,EAAWG,MAGZD,EACJ,MAAM,IAAIL,MAAM,iBAGjB,MAAMY,EAAa,GAAGH,KAAoBhB,IAC1CU,EAAWC,GAAU,YAAaS,GAYjC,OAXAH,EAAOI,KAEFA,KAAKC,eAAeH,IACxB/B,OAAOmC,eAAeF,KAAMF,EAAY,CACvCK,cAAc,EACdC,YAAY,EACZC,UAAU,EACVrB,MAAOO,EAAIe,MAAMN,KAAMD,KAIlBC,KAAKF,KAed,OAXArJ,EAAO8J,MAAQ,UACM,IAATX,GAGX7B,OAAOyC,oBAAoBZ,GAAMa,QAAQC,IACG,IAAvCA,EAASC,QAAQhB,WACbC,EAAKc,MAKRjK,EApDRqI,EAAAY,eAAAA,EAuDAZ,EAAA8B,QAAA,SAAwB9I,EAAa6G,EAAaU,GACjD,OAAOK,GAAAA,CAAiB5H,EAAQ6G,EAAKU;AAOtCP,EAAA+B,SAAA,SAA4BC,EAAeC,EAA+BC,GACzE,OAAO7B,EAAgB,CAACI,EAAIZ,KAC3B,MAAMsC,EAAW,aAAatC,IACxBuC,EAAY,oBAAoBvC,IAEtC,OAAO,YAAwBoB,GACzBC,KAAKkB,KACTlB,KAAKkB,GAAaF,EAAuBA,SAAyBhH,GAGnEmH,aAAanB,KAAKiB,IAEdF,IACHf,KAAKkB,GAAaH,EAAQf,KAAKkB,MAAenB,GAC9CA,EAAO,CAACC,KAAKkB,KAGdlB,KAAKiB,GAAYG,WAAW,KAC3B7B,EAAGe,MAAMN,KAAMD,GACfC,KAAKkB,GAAaF,EAAuBA,SAAyBhH,GAChE8G,OAKNhC,EAAAuC,SAAA,SAA4BP,EAAeC,EAA+BC,GACzE,OAAO7B,EAAgB,CAACI,EAAIZ,KAC3B,MAAMsC,EAAW,mBAAmBtC,IAC9BuC,EAAY,oBAAoBvC,IAChC2C,EAAa,qBAAqB3C,IAClC4C,EAAa,qBAAqB5C,IAExC,OAAO,YAAwBoB,GAY9B,GAXKC,KAAKkB,KACTlB,KAAKkB,GAAaF,EAAuBA,SAAyBhH,GAE1C,OAArBgG,KAAKsB,SAA6CtH,IAArBgG,KAAKsB,KACrCtB,KAAKsB,IAAeE,OAAOC,WAGxBV,IACHf,KAAKkB,GAAaH,EAAQf,KAAKkB,MAAenB,IAG3CC,KAAKuB,GACR,OAGD,MAAMG,EAAW1B,KAAKsB,GAAcR,EAChCY,GAAYpK,KAAKC,OACpByI,KAAKsB,GAAchK,KAAKC,MACxBgI,EAAGe,MAAMN,KAAM,CAACA,KAAKkB,KACrBlB,KAAKkB,GAAaF,EAAuBA,SAAyBhH,IAElEgG,KAAKuB,IAAc,EACnBvB,KAAKiB,GAAYG,WAAW,KAC3BpB,KAAKuB,IAAc,EACnBvB,KAAKsB,GAAchK,KAAKC,MACxBgI,EAAGe,MAAMN,KAAM,CAACA,KAAKkB,KACrBlB,KAAKkB,GAAaF,EAAuBA,SAAyBhH,GAChE0H,EAAWpK,KAAKC;ySCxIvB,MAAaoK,EAIZC,cAEC5B,KAAK6B,UAAY,GAEjB7B,KAAK8B,uBAAyB,SAAU/I,GACvCqI,WAAW,KACV,GAAIrI,EAAEgJ,MACL,MAAM,IAAI7C,MAAMnG,EAAEkG,QAAU,OAASlG,EAAEgJ,OAGxC,MAAMhJ,GACJ,IAIL6I,YAAYI,GAGX,OAFAhC,KAAK6B,UAAUxK,KAAK2K,GAEb,KACNhC,KAAKiC,gBAAgBD,IAIfJ,KAAK7I,GACZiH,KAAK6B,UAAUpB,QAASuB,IACvBA,EAASjJ,KAIH6I,gBAAgBI,GACvBhC,KAAK6B,UAAU5J,OAAO+H,KAAK6B,UAAUlB,QAAQqB,GAAW,GAGzDJ,0BAA0BM,GACzBlC,KAAK8B,uBAAyBI,EAG/BN,4BACC,OAAO5B,KAAK8B,uBAGbF,kBAAkB7I,GACjBiH,KAAK8B,uBAAuB/I,GAC5BiH,KAAKmC,KAAKpJ,GAIX6I,0BAA0B7I,GACzBiH,KAAK8B,uBAAuB/I,IApD9B+F,EAAA6C,aAAAA,EAwDa7C,EAAAsD,aAAe,IAAIT,EAEhC7C,EAAAuD,0BAAA,SAA0CH,GACzCpD,EAAAsD,aAAaC,0BAA0BH;AAGxCpD,EAAAwD,kBAAA,SAAkCvJ,GAE5BwJ,EAAuBxJ,IAC3B+F,EAAAsD,aAAaE,kBAAkBvJ,IAKjC+F,EAAA0D,0BAAA,SAA0CzJ,GAEpCwJ,EAAuBxJ,IAC3B+F,EAAAsD,aAAaI,0BAA0BzJ,IAczC+F,EAAA2D,+BAAA,SAA+C1G,GAC9C,GAAIA,aAAiBmD,MAAO,CAC3B,IAAI9H,KAAEA,EAAI6H,QAAEA,GAAYlD,EAExB,MAAO,CACN2G,UAAU,EACVtL,KAAAA,EACA6H,QAAAA,EACA8C,MAL2BhG,EAAO4G,YAAoB5G,EAAOgG,OAU/D,OAAOhG,GAqBR,MAAM6G,EAAe,WAKrB,SAAgBL,EAAuBxG,GACtC,OAAOA,aAAiBmD,OAASnD,EAAM3E,OAASwL,GAAgB7G,EAAMkD,UAAY2D,EADnF9D,EAAAyD,uBAAAA,EAOAzD,EAAA+D,SAAA,WACC,MAAM9G,EAAQ,IAAImD,MAAM0D,GAExB,OADA7G,EAAM3E,KAAO2E,EAAMkD,QACZlD,GAGR+C,EAAAgE,gBAAA,SAAgC1L,GAC/B,OAAIA,EACI,IAAI8H,MAAM,qBAAqB9H,KAE/B,IAAI8H,MAAM,qBAInBJ,EAAAiE,aAAA,SAA6B3L,GAC5B,OAAIA,EACI,IAAI8H,MAAM,kBAAkB9H,KAE5B,IAAI8H,MAAM,kBAInBJ,EAAAkE,SAAA,SAAyB5L,GACxB,OAAOA,EACJ,IAAI8H,MAAM,sBAAsB9H,wBAChC,IAAI8H,MAAM,wCAGdJ,EAAAmE,SAAA,SAAyBC,GACxB,MAAMzM,EAAS,IAAIyI,MAAM,GAAGgE,uBAE5B,OADAzM,EAAOW,KAAO,WACPX,GAGRqI,EAAAqE,gBAAA,SAAgClK;AAC/B,OAAKA,EAIDA,EAAIgG,QACAhG,EAAIgG,QAGRhG,EAAI8I,MACA9I,EAAI8I,MAAMqB,MAAM,MAAM,GAGvBC,OAAOpK,GAXN,SAcT,MAAaqK,UAA4BpE,MACxC0C,YAAY3C,GACXsE,MAAM,kBACFtE,IACHe,KAAKf,QAAUA,IAJlBH,EAAAwE,oBAAAA,EASA,MAAaE,UAA0BtE,MACtC0C,YAAY3C,GACXsE,MAAM,gBACFtE,IACHe,KAAKf,QAAUA,IAJlBH,EAAA0E,kBAAAA,4DCvIA,SAAgBC,EAAqBC,EAAyBC,GAC7D,IAAIC,EAAM,EAAGC,EAAOH,EAAM9M,OAC1B,GAAa,IAATiN,EACH,OAAO,EAER,KAAOD,EAAMC,GAAM,CAClB,MAAMC,EAAMC,KAAKC,OAAOJ,EAAMC,GAAQ,GAClCF,EAAED,EAAMI,IACXD,EAAOC,EAEPF,EAAME,EAAM,EAGd,OAAOF,EA2CR,SAAgBK,EAAa3J,EAAW4J,GAEvC,OAyBD,SAASC,EAASC,EAAQF,EAAqBG,EAAYC,EAAYC,GACtE,GAAID,GAAMD,EACT,OAED,MAAMP,EAAMO,GAAOC,EAAKD,GAAM,EAAK,EACnCF,EAAMC,EAAGF,EAASG,EAAIP,EAAKS,GAC3BJ,EAAMC,EAAGF,EAASJ,EAAM,EAAGQ,EAAIC,GAC/B,GAAIL,EAAQE,EAAEN,GAAMM,EAAEN,EAAM,KAAO,EAIlC,QAjCF,SAAmBM,EAAQF,EAAqBG,EAAYP,EAAaQ,EAAYC,GACpF,IAAIC,EAAUH,EAAII,EAAWX,EAAM,EACnC,IAAK,IAAIpN,EAAI2N,EAAI3N,GAAK4N,EAAI5N,IACzB6N,EAAI7N,GAAK0N,EAAE1N,GAEZ,IAAK,IAAIA,EAAI2N,EAAI3N,GAAK4N,EAAI5N,IACrB8N,EAAUV,EAEbM,EAAE1N,GAAK6N,EAAIE,KACDA,EAAWH,EAErBF,EAAE1N,GAAK6N,EAAIC,KACDN,EAAQK,EAAIE,GAAWF,EAAIC,IAAY,EAEjDJ,EAAE1N,GAAK6N,EAAIE,KAGXL,EAAE1N,GAAK6N,EAAIC,KAkBbE,CAAON,EAAGF,EAASG,EAAIP,EAAKQ,EAAIC,GAvChCJ,CAAM7J,EAAM4J,EAAS,EAAG5J,EAAK1D,OAAS,EAAG,IAClC0D,EA+DR,SAAgBqK,EAAcC,EAA0BC,EAAyBX,GAChF,MAAMzN,EAA8B,GAEpC,SAASqO,EAAWC,EAAeC,EAAqBC,GACvD,GAAoB,IAAhBD,GAAyC,IAApBC,EAASrO,OACjC,OAGD,MAAMsO,EAASzO,EAAOA,EAAOG,OAAS,GAElCsO,GAAUA,EAAOH,MAAQG,EAAOF,cAAgBD,GACnDG,EAAOF,aAAeA,EACtBE,EAAOD,SAAS5N,QAAQ4N,IAExBxO,EAAOY,KAAK,CAAE0N,MAAAA,EAAOC,YAAAA,EAAaC,SAAAA,IAIpC,IAAIE,EAAY,EACZC,EAAW;CAEf,OAAa,CACZ,GAAID,IAAcP,EAAOhO,OAAQ,CAChCkO,EAAWK,EAAW,EAAGN,EAAM1M,MAAMiN,IACrC,MAED,GAAIA,IAAaP,EAAMjO,OAAQ,CAC9BkO,EAAWK,EAAWP,EAAOhO,OAASuO,EAAW,IACjD,MAGD,MAAME,EAAgBT,EAAOO,GACvBG,EAAeT,EAAMO,GACrBG,EAAIrB,EAAQmB,EAAeC,GACvB,IAANC,GAEHJ,GAAa,EACbC,GAAY,GACFG,EAAI,GAEdT,EAAWK,EAAW,EAAG,IACzBA,GAAa,GACHI,EAAI,IAEdT,EAAWK,EAAW,EAAG,CAACG,IAC1BF,GAAY,GAId,OAAO3O,EA4ER,SAAS+O,EAAW9B,EAAyBQ,EAAiCzN,EAAaC,EAAW+O,GACrG,IAAK,MAAMF,EAAI9O,EAAOG,OAAQF,EAAI+O,EAAG/O,IAAK,CACzC,MAAMgP,EAAUhC,EAAMhN,GACtB,GAAIwN,EAAQwB,EAASjP,EAAO8O,EAAI,IAAM,EAAG,CACxC9O,EAAOkP,MACP,MAAMC,EAAInC,EAAkBhN,EAAQsC,GAAKmL,EAAQwB,EAAS3M,GAAK,GAC/DtC,EAAOwB,OAAO2N,EAAG,EAAGF,KAqLvB,SAAgBG,EAAUnC,EAAYgC,GACrC,MAAM/J,EAAQ+H,EAAM/C,QAAQ+E,GAC5B,GAAI/J,GAAS,EAGZ,OAFA+H,EAAMzL,OAAO0D,EAAO,GAEb+J,qfA/eT5G,EAAAgH,KAAA,SAAwBpC,EAAqB6B,EAAY,GACxD,OAAO7B,EAAMA,EAAM9M,QAAU,EAAI2O,KAGlCzG,EAAAiH,MAAA,SAAyBC,GACxB,GAAmB,IAAfA,EAAIpP,OACP,MAAM,IAAIsI,MAAM;CAGjB,MAAO,CAAC8G,EAAI7N,MAAM,EAAG6N,EAAIpP,OAAS,GAAIoP,EAAIA,EAAIpP,OAAS,KAGxDkI,EAAAmH,OAAA,SAA0BC,EAAmCC,EAAqCC,EAAsC,EAAChC,EAAGiC,IAAMjC,IAAMiC,IACvJ,GAAIH,IAAQC,EACX,OAAO,EAGR,IAAKD,IAAQC,EACZ,OAAO,EAGR,GAAID,EAAItP,SAAWuP,EAAMvP,OACxB,OAAO,EAGR,IAAK,IAAIF,EAAI,EAAGC,EAAMuP,EAAItP,OAAQF,EAAIC,EAAKD,IAC1C,IAAK0P,EAAWF,EAAIxP,GAAIyP,EAAMzP,IAC7B,OAAO,EAIT,OAAO,GAGRoI,EAAAwH,aAAA,SAAgC5C,EAAyB/E,EAAQ4H,GAChE,IAAI3C,EAAM,EACTC,EAAOH,EAAM9M,OAAS,EAEvB,KAAOgN,GAAOC,GAAM,CACnB,MAAMC,GAAQF,EAAMC,GAAQ,EAAK,EAC3B2C,EAAOD,EAAW7C,EAAMI,GAAMnF,GACpC,GAAI6H,EAAO,EACV5C,EAAME,EAAM,MACN,CAAA,KAAI0C,EAAO,GAGjB,OAAO1C,EAFPD,EAAOC,EAAM,GAKf,QAASF,EAAM,IAQhB9E,EAAA2E,kBAAAA,EAmBA3E,EAAA2H,YAAA,SAAgBA,EAAeC,EAAapM,EAAW4J,GAItD,IAFAwC,GAAY,IAEDpM,EAAK1D,OACf,MAAM,IAAI+P,UAAU,iBAGrB,IAAIC,EAAatM,EAAKyJ,KAAKC,MAAM1J,EAAK1D,OAASmN,KAAK8C,WAChDC,EAAa,GACbC,EAAc,GACdC,EAAc,GAElB,IAAK,IAAIhI,KAAS1E,EAAM,CACvB,MAAM2M,EAAM/C,EAAQlF,EAAO4H,GACvBK,EAAM,EACTH,EAAMzP,KAAK2H,GACDiI,EAAM,EAChBF,EAAO1P,KAAK2H,GAEZgI,EAAO3P,KAAK2H,GAId,OAAI0H,EAAMI,EAAMlQ,OACR6P,EAAYC,EAAKI,EAAO5C,GACrBwC,EAAMI,EAAMlQ,OAASoQ,EAAOpQ,OAC/BoQ,EAAO,GAEPP,EAAYC,GAAOI,EAAMlQ,OAASoQ,EAAOpQ,QAASmQ,EAAQ7C,IAQnEpF,EAAAmF,UAAAA,EA4CAnF,EAAAoI,QAAA,SAA2B5M,EAAwB4J,GAClD,MAAMzN,EAAgB,GACtB,IAAI0Q,OAAgCnN,EACpC,IAAK,MAAM0L,KAAWzB,EAAU3J,EAAKnC,MAAM,GAAI+L,GACzCiD,GAAsD,IAAtCjD,EAAQiD,EAAa,GAAIzB,GAI7CyB,EAAa9P,KAAKqO,IAHlByB,EAAe,CAACzB,GAChBjP,EAAOY,KAAK8P,IAKd,OAAO1Q,GAURqI,EAAA6F,WAAAA,EAwDA7F,EAAAsI,MAAA,SAAyBxC,EAA0BC,EAAyBX,GAC3E,MAAMmD,EAAU1C,EAAWC,EAAQC,EAAOX,GACpCoD,EAAe,GACfC,EAAa,GAEnB,IAAK,MAAMtP,KAAUoP,EACpBC,EAAQjQ,QAAQuN,EAAOzM,MAAMF,EAAO8M,MAAO9M,EAAO8M,MAAQ9M,EAAO+M,cACjEuC,EAAMlQ,QAAQY,EAAOgN,UAGtB,MAAO,CAAEqC,QAAAA,EAASC,MAAAA;EAanBzI,EAAA0I,IAAA,SAAuB9D,EAAyBQ,EAAiCqB,GAChF,GAAU,IAANA,EACH,MAAO,GAER,MAAM9O,EAASiN,EAAMvL,MAAM,EAAGoN,GAAGkC,KAAKvD,GAEtC,OADAsB,EAAQ9B,EAAOQ,EAASzN,EAAQ8O,EAAG7B,EAAM9M,QAClCH,GAgBRqI,EAAA4I,SAAA,SAA4BhE,EAAYQ,EAAiCqB,EAAWoC,EAAeC,GAClG,OAAU,IAANrC,EACI5M,QAAQyB,QAAQ,IAGjB,IAAIzB,QAAQ,CAACyB,EAASC,KAC5B,WACC,MAAMwN,EAAInE,EAAM9M,OACVH,EAASiN,EAAMvL,MAAM,EAAGoN,GAAGkC,KAAKvD,GACtC,IAAK,IAAIxN,EAAI6O,EAAGE,EAAI1B,KAAK+D,IAAIvC,EAAIoC,EAAOE,GAAInR,EAAImR,EAAGnR,EAAI+O,EAAGA,EAAI1B,KAAK+D,IAAIrC,EAAIkC,EAAOE,GAAI,CAIrF,GAHInR,EAAI6O,SACD,IAAI5M,QAAQyB,GAAWgH,WAAWhH,IAErCwN,GAASA,EAAMG,wBAClB,MAAMC,EAAAnF,WAEP2C,EAAQ9B,EAAOQ,EAASzN,EAAQC,EAAG+O,GAEpC,OAAOhP,GAZR,GAcE0C,KAAKiB,EAASC,MAkBlByE,EAAAmJ,SAAA,SAA4BvE,GAC3B,OAAYA,EAAMwE,OAAOnP,KAAOA,IAMjC+F,EAAAqJ,gBAAA,SAAmCzE,GAClC,IAAI7L,EAAK,EACT,IAAK,IAAInB,EAAI,EAAGA,EAAIgN,EAAM9M,OAAQF,IAC3BgN,EAAMhN,KACXgN,EAAM7L,GAAM6L,EAAMhN,GAClBmB,GAAM,GAGR6L,EAAM9M,OAASiB,GAMhBiH,EAAAsJ,KAAA,SAAqB1E,EAAc9L,EAAcC,GAChD6L,EAAMzL,OAAOJ,EAAI,EAAG6L,EAAMzL,OAAOL,EAAM,GAAG,KAM3CkH,EAAAuJ,eAAA,SAA+BC,GAC9B,OAAQC,MAAMC,QAAQF,IAAuB,IAAfA,EAAI1R,QAQnCkI,EAAA2J,gBAAA,SAAmCH,GAClC,OAAOC,MAAMC,QAAQF,IAAQA,EAAI1R,OAAS,GAO3CkI,EAAA4J,SAAA,SAA4BhF,EAAyBiF,GACpD,IAAKA,EACJ,OAAOjF,EAAMwE,OAAO,CAACxC,EAASkD,IACtBlF,EAAM/C,QAAQ+E,KAAakD,GAIpC,MAAMC,EAAoC9K,OAAOK,OAAO,MACxD,OAAOsF,EAAMwE,OAAQzJ,IACpB,MAAME,EAAMgK,EAAMlK,GAClB,OAAIoK,EAAKlK,KAITkK,EAAKlK,IAAO,GAEL,MAITG,EAAAgK,YAAA,SAA+BpF,GAC9B,MAAMmF,EAAO,IAAIE,IACjB,OAAOrF,EAAMwE,OAAOxC,IACfmD,EAAKG,IAAItD,KAIbmD,EAAKI,IAAIvD,IACF;AAIT5G,EAAAoK,aAAA,SAAgCP,GAC/B,MAAME,EAAoC9K,OAAOK,OAAO,MAExD,OAAOsH,IACN,MAAM/G,EAAMgK,EAAMjD,GAElB,OAAImD,EAAKlK,KAITkK,EAAKlK,IAAO,GACL,KAITG,EAAAqK,UAAA,SAA6BzF,EAAyBnE,GACrD,IAAK,IAAI7I,EAAIgN,EAAM9M,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAG3C,GAAI6I,EAFYmE,EAAMhN,IAGrB,OAAOA,EAIT,OAAQ,GAKToI,EAAAsK,eAAA,SAAgD1F,EAAyB2F,GACxE,OAAO3F,EAAM9M,OAAS,EAAI8M,EAAM,GAAK2F,GAGtCvK,EAAAwK,mBAAA,SAAsCpD,EAAuBC,EAAyBF,EAAkC,EAAC7B,EAAGiC,IAAMjC,IAAMiC,IACvI,IAAI5P,EAAS,EAEb,IAAK,IAAIC,EAAI,EAAGC,EAAMoN,KAAK+D,IAAI5B,EAAItP,OAAQuP,EAAMvP,QAASF,EAAIC,GAAOsP,EAAOC,EAAIxP,GAAIyP,EAAMzP,IAAKA,IAC9FD,IAGD,OAAOA,GAGRqI,EAAAyK,QAAA,SAA2BvD,GAC1B,MAAa,GAAIwD,UAAUxD,IAK5BlH,EAAA2K,MAAA,SAAsBC,EAAa7R,GAClC,IAAID,EAAqB,iBAAPC,EAAkB6R,EAAM,EAExB,iBAAP7R,EACVD,EAAO8R,GAEP9R,EAAO,EACPC,EAAK6R,GAGN,MAAMjT,EAAmB,GAEzB,GAAImB,GAAQC,EACX,IAAK,IAAInB,EAAIkB,EAAMlB,EAAImB,EAAInB,IAC1BD,EAAOY,KAAKX,QAGb,IAAK,IAAIA,EAAIkB,EAAMlB,EAAImB,EAAInB,IAC1BD,EAAOY,KAAKX,GAId,OAAOD,GAKRqI,EAAAnD,MAAA,SAA4B+H,EAAyBiG,EAA2BC,GAC/E,OAAOlG,EAAMmG,OAAO,CAACC,EAAGC,KACvBD,EAAEH,EAAQI,IAAMH,EAASA,EAAOG,GAAKA,EAC9BD,GACL/L,OAAOK,OAAO,QAOlBU,EAAAkL,OAAA,SAA0BtG,EAAYgC,GAGrC,OAFAhC,EAAMrM,KAAKqO,GAEJ,IAAMG,EAAOnC,EAAOgC,IAM5B5G,EAAA+G,OAAAA,EAeA/G,EAAAmL,YAAA,SAA+BnS,EAAaoS,EAAqBC,GAChE,MAAMvF,EAAS9M,EAAOK,MAAM,EAAG+R,GACzBrF,EAAQ/M,EAAOK,MAAM+R,GAC3B,OAAOtF,EAAO4E,OAAOW,EAAWtF,IAMjC/F,EAAAsL,QAAA,SAA2B1G,EAAY2G,GACtC,IAAIC,EAEJ,GAAqB,iBAAVD,EAAoB,CAC9B,IAAIE,EAAOF,EAGXC,EAAO,KACN,MAAME,EAAuB,UAAnBzG,KAAK0G,IAAIF,KACnB,OAAOC,EAAIzG,KAAKC,MAAMwG,SAGvBF,EAAOvG,KAAK8C;CAGb,IAAK,IAAInQ,EAAIgN,EAAM9M,OAAS,EAAGF,EAAI,EAAGA,GAAK,EAAG,CAC7C,MAAMkP,EAAI7B,KAAKC,MAAMsG,KAAU5T,EAAI,IAC7BgU,EAAOhH,EAAMhN,GACnBgN,EAAMhN,GAAKgN,EAAMkC,GACjBlC,EAAMkC,GAAK8E,IAOb5L,EAAA6L,YAAA,SAA+B3E,EAAUhH,GACxC,MAAMrD,EAAQqK,EAAIrF,QAAQ3B,GAEtBrD,GAAS,IACZqK,EAAI/N,OAAO0D,EAAO,GAClBqK,EAAI4E,QAAQ5L,KAOdF,EAAA+L,UAAA,SAA6B7E,EAAUhH,GACtC,MAAMrD,EAAQqK,EAAIrF,QAAQ3B,GAEtBrD,GAAS,IACZqK,EAAI/N,OAAO0D,EAAO,GAClBqK,EAAI3O,KAAK2H,KAIXF,EAAAgM,cAAA,SAAoCC,EAAgBxL,GACnD,OAAOgJ,MAAMC,QAAQuC,GACpBA,EAAMnR,IAAI2F,GACVA,EAAGwL,IAKLjM,EAAAkM,QAAA,SAA2BR,GAC1B,OAAOjC,MAAMC,QAAQgC,GAAKA,EAAI,CAACA,IAGhC1L,EAAAmM,iBAAA,SAAoCjF,GACnC,OAAOA,EAAIjC,KAAKC,MAAMD,KAAK8C,SAAWb,EAAIpP,UAM3CkI,EAAAoM,QAAA,SAA8BxH,EAAoBtE,GACjD,IAAK,MAAMJ,KAAS0E,EAAO,CAC1B,MAAMyH,EAAS/L,EAAMJ,GACrB,QAAehF,IAAXmR,EACH,OAAOA,wHCjlBVrM,EAAAsM,KAAA,SAAwD7L,GACvD,MAAM8L,EAAQrL,KACd,IACIvJ,EADA6U,GAAU,EAGd,OAAO,WACN,OAAIA,EACI7U,GAGR6U,GAAU,EACV7U,EAAS8I,EAAGe,MAAM+K,EAAOE,sICX3B,SAAiBC,GAEAA,EAAAC,GAAhB,SAA4BC,GAC3B,OAAOA,GAA0B,iBAAVA,GAAwD,mBAA3BA,EAAMC,OAAOC,WAGlE,MAAMC,EAAwB9N,OAAO+N,OAAO,IAC5BN,EAAAO,MAAhB,WACC,OAAOF;EAGSL,EAAAQ,OAAjB,UAA2BtG,SACpBA,GAGS8F,EAAA5T,KAAhB,SAAwBqU,GACvB,OAAOA,GAAYJ,GAGJL,EAAAU,MAAhB,SAAyBD,GACxB,OAAOA,EAASN,OAAOC,YAAYO,OAAOnN,OAG3BwM,EAAAY,KAAhB,SAAwBH,EAAuBI,GAC9C,IAAK,MAAM3G,KAAWuG,EACrB,GAAII,EAAU3G,GACb,OAAO,EAGT,OAAO,GAGS8F,EAAAtD,OAAjB,UAA2B+D,EAAuBI,GACjD,IAAK,MAAM3G,KAAWuG,EACjBI,EAAU3G,WACPA,IAKQ8F,EAAA5R,IAAjB,UAA2BqS,EAAuB1M,GACjD,IAAK,MAAMmG,KAAWuG,QACf1M,EAAGmG,IAIM8F,EAAAhC,OAAjB,aAA8B8C,GAC7B,IAAK,MAAML,KAAYK,EACtB,IAAK,MAAM5G,KAAWuG,QACfvG,GASO8F,EAAAe,QAAhB,SAA2BN,EAAuBO,EAAiBhL,OAAOiL,mBACzE,MAAMC,EAAgB,GAEtB,GAAe,IAAXF,EACH,MAAO,CAACE,EAAUT,GAGnB,MAAML,EAAWK,EAASN,OAAOC,YAEjC,IAAK,IAAIlV,EAAI,EAAGA,EAAI8V,EAAQ9V,IAAK,CAChC,MAAMyV,EAAOP,EAASO,OAEtB,GAAIA,EAAKQ,KACR,MAAO,CAACD,EAAUlB,EAASO,SAG5BW,EAASrV,KAAK8U,EAAKnN,OAGpB,MAAO,CAAC0N,EAAU,CAAE9K,CAAC+J,OAAOC,UAAS,IAAYA,KA7EnD,CAAiB9M,EAAA0M,WAAA1M,EAAA0M,SAAQ,0DCAzB,IA0IiBoB,EA8aNC,EArXX,SAAgBC,EAAcC,EAAcC,GAAwB,GAEnE,IAAIC,EAAM,EACTtW,EAAMoW,EAAKnW,OACXoI,EAAgB,GAChBkO,EAAc,EACdtF,EAAK,GACLuF,EAAS,EAEV,SAASC,EAAcC,GACtB,IAAIC,EAAS,EACTC,EAAW,EACf,KAAOD,EAASD,GAAO,CACtB,MAAMG,EAAKT,EAAKU,WAAWR,GAC3B,GAAIO,GAAE,IAAyBA,GAAE,GAChCD,EAAsB,GAAXA,EAAgBC,EAAE,QAEzB,GAAIA,GAAE,IAAwBA,GAAE,GACpCD,EAAsB,GAAXA,EAAgBC,EAAE,GAAsB,OAE/C,CAAA,KAAIA,GAAE,IAAwBA,GAAE,KAIpC,MAHAD,EAAsB,GAAXA,EAAgBC,EAAE,GAAsB,GAKpDP,IACAK,IAKD,OAHIA,EAASD,IACZE,GAAY,GAENA,EAmIR,SAASG,IAOR,GALA1O,EAAQ,GACRmO,EAAS,EAETD,EAAcD,EAEVA,GAAOtW,EAGV,OADAuW,EAAcvW,EACPiR,EAAK,GAGb,IAAI1N,EAAO6S,EAAKU,WAAWR;CAE3B,GAAIU,EAAazT,GAAO,CACvB,GACC+S,IACAjO,GAASqE,OAAOuK,aAAa1T,GAC7BA,EAAO6S,EAAKU,WAAWR,SACfU,EAAazT,IAEtB,OAAO0N,EAAK,GAIb,GAAIiG,EAAY3T,GAOf,OANA+S,IACAjO,GAASqE,OAAOuK,aAAa1T,GACrB,KAAJA,GAA8D,KAApB6S,EAAKU,WAAWR,KAC7DA,IACAjO,GAAS,MAEH4I,EAAK,GAGb,OAAQ1N,GAEP,KAAA,IAEC,OADA+S,IACOrF,EAAK,EACb,KAAA,IAEC,OADAqF,IACOrF,EAAK,EACb,KAAA,GAEC,OADAqF,IACOrF,EAAK,EACb,KAAA,GAEC,OADAqF,IACOrF,EAAK,EACb,KAAA,GAEC,OADAqF,IACOrF,EAAK,EACb,KAAA,GAEC,OADAqF,IACOrF,EAAK,EAGb,KAAA,GAGC,OAFAqF,IACAjO,EA3IH,WAEC,IAAIvI,EAAS,GACZsO,EAAQkI,EAET,OAAa,CACZ,GAAIA,GAAOtW,EAAK,CACfF,GAAUsW,EAAKlR,UAAUkJ,EAAOkI,GAChCE,EAAS,EACT,MAED,MAAMK,EAAKT,EAAKU,WAAWR,GAC3B,GAAM,KAAFO,EAAmC,CACtC/W,GAAUsW,EAAKlR,UAAUkJ,EAAOkI,GAChCA,IACA,MAED,GAAM,KAAFO,EAAJ,CA+CA,GAAIA,GAAM,GAAKA,GAAM,GAAM,CAC1B,GAAIK,EAAYL,GAAK,CACpB/W,GAAUsW,EAAKlR,UAAUkJ,EAAOkI,GAChCE,EAAS,EACT,MAEAA,EAAS,EAIXF,QAzDA,CAGC,GAFAxW,GAAUsW,EAAKlR,UAAUkJ,EAAOkI,KAChCA,GACWtW,EAAK,CACfwW,EAAS,EACT,MAGD,OADYJ,EAAKU,WAAWR,MAE3B,KAAA,GACCxW,GAAU,IACV,MACD,KAAA,GACCA,GAAU,KACV,MACD,KAAA,GACCA,GAAU,IACV,MACD,KAAA,GACCA,GAAU,KACV,MACD,KAAA,IACCA,GAAU,KACV,MACD,KAAA,IACCA,GAAU,KACV,MACD,KAAA,IACCA,GAAU,KACV,MACD,KAAA,IACCA,GAAU,KACV,MACD,KAAA,IACC,MAAMqX,EAAMV,EAAc,GACtBU,GAAO,EACVrX,GAAU4M,OAAOuK,aAAaE,GAE9BX,EAAS,EAEV,MACD,QACCA,EAAS,EAEXpI,EAAQkI,GAeV,OAAOxW,EA+DGsX,GACDnG,EAAK,GAGb,KAAA,GACC,MAAM7C,EAAQkI,EAAM,EAEpB,GAA4B,KAAxBF,EAAKU,WAAWR,EAAM,GAA6B,CAGtD,IAFAA,GAAO,EAEAA,EAAMtW,IACRkX,EAAYd,EAAKU,WAAWR,KAGhCA,IAID,OADAjO,EAAQ+N,EAAKlR,UAAUkJ,EAAOkI,GACvBrF,EAAK;AAIb,GAA4B,KAAxBmF,EAAKU,WAAWR,EAAM,GAAgC,CACzDA,GAAO,EAEP,MAAMe,EAAarX,EAAM,EACzB,IAAIsX,GAAgB,EACpB,KAAOhB,EAAMe,GAAY,CAGxB,GAAM,KAFKjB,EAAKU,WAAWR,IAEmC,KAAxBF,EAAKU,WAAWR,EAAM,GAA6B,CACxFA,GAAO,EACPgB,GAAgB,EAChB,MAEDhB,IASD,OANKgB,IACJhB,IACAE,EAAS,GAGVnO,EAAQ+N,EAAKlR,UAAUkJ,EAAOkI,GACvBrF,EAAK,GAKb,OAFA5I,GAASqE,OAAOuK,aAAa1T,GAC7B+S,IACOrF,EAAK,GAGb,KAAA,GAGC,GAFA5I,GAASqE,OAAOuK,aAAa1T,KAC7B+S,IACYtW,IAAQuX,EAAQnB,EAAKU,WAAWR,IAC3C,OAAOrF,EAAK,GAKd,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GAEC,OADA5I,GA3PH,WACC,MAAM+F,EAAQkI,EACd,GAAwB,KAApBF,EAAKU,WAAWR,GACnBA,SAGA,IADAA,IACOA,EAAMF,EAAKnW,QAAUsX,EAAQnB,EAAKU,WAAWR,KACnDA,IAGF,GAAIA,EAAMF,EAAKnW,QAA8B,KAApBmW,EAAKU,WAAWR,GAA6B,CAErE,OADAA,EACUF,EAAKnW,QAAUsX,EAAQnB,EAAKU,WAAWR,KAOhD,OADAE,EAAS,EACFJ,EAAKlR,UAAUkJ,EAAOkI,GAL7B,IADAA,IACOA,EAAMF,EAAKnW,QAAUsX,EAAQnB,EAAKU,WAAWR,KACnDA,IAOH,IAAIkB,EAAMlB,EACV,GAAIA,EAAMF,EAAKnW,SAA+B,KAApBmW,EAAKU,WAAWR,IAAiD,MAApBF,EAAKU,WAAWR,IAKtF,MAJAA,EACUF,EAAKnW,QAA8B,KAApBmW,EAAKU,WAAWR,IAAoD,KAApBF,EAAKU,WAAWR,KACxFA,IAEGA,EAAMF,EAAKnW,QAAUsX,EAAQnB,EAAKU,WAAWR,IAAO,CAEvD,IADAA,IACOA,EAAMF,EAAKnW,QAAUsX,EAAQnB,EAAKU,WAAWR,KACnDA,IAEDkB,EAAMlB,OAENE,EAAS,EAGX,OAAOJ,EAAKlR,UAAUkJ,EAAOoJ,GAqNlBC,GACFxG,EAAK,GAEb,QAEC,KAAOqF,EAAMtW,GAAO0X,EAA0BnU,IAC7C+S,IACA/S,EAAO6S,EAAKU,WAAWR,GAExB,GAAIC,IAAgBD,EAAK,CAGxB,OAFAjO,EAAQ+N,EAAKlR,UAAUqR,EAAaD,IAGnC,IAAK,OAAQ,OAAOrF,EAAK,EACzB,IAAK,QAAS,OAAOA,EAAK;CAC1B,IAAK,OAAQ,OAAOA,EAAK,EAE1B,OAAOA,EAAK,GAKb,OAFA5I,GAASqE,OAAOuK,aAAa1T,GAC7B+S,IACOrF,EAAK,IAIf,SAASyG,EAA0BnU,GAClC,GAAIyT,EAAazT,IAAS2T,EAAY3T,GACrC,OAAO,EAER,OAAQA,GACP,KAAA,IACA,KAAA,GACA,KAAA,IACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACC,OAAO,EAET,OAAO,EAYR,MAAO,CACNoU,YAzTD,SAAqBC,GACpBtB,EAAMsB,EACNvP,EAAQ,GACRkO,EAAc,EACdtF,EAAK,GACLuF,EAAS,GAqTTqB,YAAa,IAAMvB,EACnBwB,KAAMzB,EAXP,WACC,IAAIvW,EACJ,GACCA,EAASiX,UACDjX,GAAM,IAAoCA,GAAM,IACzD,OAAOA,GAMkCiX,EACzCgB,SAAU,IAAM9G,EAChB+G,cAAe,IAAM3P,EACrB4P,eAAgB,IAAM1B,EACtB2B,eAAgB,IAAM5B,EAAMC,EAC5B4B,cAAe,IAAM3B,GAIvB,SAASQ,EAAaH,GACrB,OAAS,KAAFA,GAAiC,IAAFA,GAA+B,KAAFA,GAAuC,KAAFA,GACrG,MAAFA,GAA4C,OAAFA,GAA+BA,GAAE,MAA6BA,GAAE,MACxG,OAAFA,GAA8C,OAAFA,GAA6C,QAAFA,GAA4C,QAAFA,EAGnI,SAASK,EAAYL,GACpB,OAAS,KAAFA,GAAoC,KAAFA,GAA0C,OAAFA,GAAyC,OAAFA,EAGzH,SAASU,EAAQV,GAChB,OAAOA,GAAE,IAAyBA,GAAE,GAodrC,SAAgBuB,EAASC,EAAYC,EAAgBC,GAAoB,GACxE,OAAQD,GAAUD,EAAKC,QAAUA,EAAUD,EAAKC,OAASD,EAAKpY,QAAYsY,GAAsBD,IAAYD,EAAKC,OAASD,EAAKpY,OA2BhI,SAAgBuY,EAAMpC,EAAcqC,EAAsBC,EAAwBzC,EAAa0C,SAE9F,MAAMC,EAAWzC,EAAcC,GAAM,GAErC,SAASyC,EAAaC,GACrB,OAAOA,EAAgB,IAAMA,EAAcF,EAASX,iBAAkBW,EAASV,kBAAoB,KAAM,EAE1G,SAASa,EAAiBD,GACzB,OAAOA,EAAiB/F,GAAW+F,EAAc/F,EAAK6F,EAASX,iBAAkBW,EAASV,kBAAoB,KAAM;AAGrH,MAAMc,EAAgBH,EAAaJ,EAAQO,eAC1CC,EAAmBF,EAAcN,EAAQQ,kBACzCC,EAAcL,EAAaJ,EAAQS,aACnCC,EAAeN,EAAaJ,EAAQU,cACpCC,EAAaP,EAAaJ,EAAQW,YAClCC,EAAiBN,EAAcN,EAAQY,gBACvCC,EAAcP,EAAcN,EAAQa,aACpCC,EAAYV,EAAaJ,EAAQc,WACjCC,EAAUT,EAAcN,EAAQe,SAE3BC,EAAmBf,GAAWA,EAAQe,iBACtCC,EAAqBhB,GAAWA,EAAQgB,mBAC9C,SAAS3C,IACR,OAAa,CACZ,MAAM9F,EAAQ2H,EAASd,OACvB,OAAQc,EAAST,iBAChB,KAAA,EACCwB,EAAW,IACX,MACD,KAAA,EACCA,EAAW,IACX,MACD,KAAA,EACCA,EAAW,IACX,MACD,KAAA,EACMF,GACJE,EAAW,IAEZ,MACD,KAAA,EACCA,EAAW,IACX,MACD,KAAA,EACCA,EAAW,IAGb,OAAQ1I,GACP,KAAA,GACA,KAAA,GACKwI,EACHE,EAAW,IAEXJ,IAED,MACD,KAAA,GACCI,EAAW,GACX,MACD,KAAA,GACA,KAAA,GACC,MACD,QACC,OAAO1I,IAKX,SAAS0I,EAAYvU,EAAuBwU,EAA+B,GAAIC,EAA0B,IAExG,GADAL,EAAQpU,GACJwU,EAAe3Z,OAAS4Z,EAAU5Z,OAAS,EAAG,CACjD,IAAIgR,EAAQ2H,EAASb,WACrB,KAAY,KAAL9G,GAA0B,CAChC,IAAuC,IAAnC2I,EAAe5P,QAAQiH,GAAe,CACzC8F,IACA,MACM,IAAkC,IAA9B8C,EAAU7P,QAAQiH,GAC5B,MAEDA,EAAQ8F,MAKX,SAAS+C,EAAYC,GACpB,MAAM1R,EAAQuQ,EAASZ,gBAOvB,OANI+B,EACHV,EAAehR,GAEf4Q,EAAiB5Q,GAElB0O,KACO,EAqHR,SAASiD,IACR,OAAQpB,EAASb,YAChB,KAAA,EACC,OAnCH,WACCoB,IACApC,IAEA,IAAIkD,GAAa,EACjB,KAA0B,IAAnBrB,EAASb,YAAkE,KAAnBa,EAASb,YAA+B,CACtG,GAAuB,IAAnBa,EAASb,YAMZ,GALKkC,GACJN,EAAW,EAA+B,GAAI,IAE/CL,EAAY,KACZvC,IACuB,IAAnB6B,EAASb,YAA+C2B,EAC3D,WAESO,GACVN,EAAW,EAA+B,GAAI,IAE1CK,KACJL,EAAW,EAA+B,GAAI,CAAA,EAAA,IAE/CM,GAAa,EAQd,OANAb,IACuB,IAAnBR,EAASb,WACZ4B,EAAW,EAAsC,CAAA,GAAgC,IAEjF5C,KAEM,EAMEmD,GACR,KAAA;AACC,OArEH,WACClB,IACAjC,IAEA,IAAIkD,GAAa,EACjB,KAA0B,IAAnBrB,EAASb,YAAgE,KAAnBa,EAASb,YAA+B,CACpG,GAAuB,IAAnBa,EAASb,YAMZ,GALKkC,GACJN,EAAW,EAA+B,GAAI,IAE/CL,EAAY,KACZvC,IACuB,IAAnB6B,EAASb,YAA6C2B,EACzD,WAESO,GACVN,EAAW,EAA+B,GAAI,KAlCzB,KAAnBf,EAASb,YACZ4B,EAAW,EAAsC,GAAI,CAAA,EAAA,IAC9C,IAERG,GAAY,GACW,IAAnBlB,EAASb,YACZuB,EAAY,KACZvC,IAEKiD,KACJL,EAAW,EAA+B,GAAI,CAAA,EAAA,KAG/CA,EAAW,EAA+B,GAAI,CAAA,EAAA,IAExC,KAsBLA,EAAW,EAA+B,GAAI,CAAA,EAAA,IAE/CM,GAAa,EAQd,OANAf,IACuB,IAAnBN,EAASb,WACZ4B,EAAW,EAAoC,CAAA,GAA8B,IAE7E5C,KAEM,EAwCEoD,GACR,KAAA,GACC,OAAOL,GAAY,GACpB,QACC,OA3HH,WACC,OAAQlB,EAASb,YAChB,KAAA,GACC,IAAI1P,EAAQ,EACZ,IAEsB,iBADrBA,EAAQ1D,KAAKC,MAAMgU,EAASZ,oBAE3B2B,EAAW,GACXtR,EAAQ,GAER,MAAOjG,GACRuX,EAAW,GAEZN,EAAehR,GACf,MACD,KAAA,EACCgR,EAAe,MACf,MACD,KAAA,EACCA,GAAe,GACf,MACD,KAAA,EACCA,GAAe,GACf,MACD,QACC,OAAO,EAGT,OADAtC,KACO,EA+FEqD,IAKV,OADArD,IACuB,KAAnB6B,EAASb,aACRW,EAAQ2B,oBAGZV,EAAW,EAA+B,GAAI,KACvC,GAEHK,KAIkB,KAAnBpB,EAASb,YACZ4B,EAAW,EAAmC,GAAI,KAE5C,IANNA,EAAW,EAA+B,GAAI,KACvC,GA0CT,SAAgBW,EAAYjS,GAC3B,cAAeA,GACd,IAAK,UAAW,MAAO,UACvB,IAAK,SAAU,MAAO,SACtB,IAAK,SAAU,MAAO,SACtB,IAAK,SACJ,OAAKA,EAEMuJ,MAAMC,QAAQxJ,GACjB,QAED,SAJC,OAMT,QAAS,MAAO;wOAr0ClB,SAAkBkS,GACjBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,sBAAA,GAAA,wBACAA,EAAAA,EAAA,sBAAA,GAAA,wBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,iBAAA,GAAA,mBAPD,CAAkBpS,EAAAoS,YAAApS,EAAAoS,UAAS,KAU3B,SAAkBC,GACjBA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,eAAA,IAAA;AACAA,EAAAA,EAAA,kBAAA,IAAA,oBACAA,EAAAA,EAAA,mBAAA,IAAA,qBACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,IAAA,IAAA,MAjBD,CAAkBrS,EAAAqS,aAAArS,EAAAqS,WAAU,KAkE5B,SAAkBC,GACjBA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,oBAAA,GAAA,sBACAA,EAAAA,EAAA,qBAAA,GAAA,uBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,qBAAA,GAAA,uBACAA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,oBAAA,IAAA,sBACAA,EAAAA,EAAA,uBAAA,IAAA,yBACAA,EAAAA,EAAA,sBAAA,IAAA,wBACAA,EAAAA,EAAA,sBAAA,IAAA,wBACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,uBAAA,IAAA,yBACAA,EAAAA,EAAA,iBAAA,IAAA;CAhBD,CAAkBtS,EAAAsS,iBAAAtS,EAAAsS,eAAc,KA8DhC,SAAiBxE,GACHA,EAAA0C,QAAU,CACtBe,oBAAoB,GAFtB,CAAiBzD,EAAA9N,EAAA8N,eAAA9N,EAAA8N,aAAY,KAyD7B9N,EAAAgO,cAAAA,EAqXA,SAAWD,GACVA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,kBAAA,KAAA,oBAEAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,cAAA,MAAA,gBACAA,EAAAA,EAAA,mBAAA,MAAA,qBAIAA,EAAAA,EAAA,SAAA,KAAA,WAGAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,OAAA,MAAA,SACAA,EAAAA,EAAA,OAAA,MAAA,SACAA,EAAAA,EAAA,QAAA,MAAA,UACAA,EAAAA,EAAA,QAAA,MAAA,UACAA,EAAAA,EAAA,gBAAA,MAAA,kBACAA,EAAAA,EAAA,eAAA,MAAA,iBACAA,EAAAA,EAAA,cAAA,MAAA,gBACAA,EAAAA,EAAA,YAAA,MAAA,cACAA,EAAAA,EAAA,iBAAA,MAAA,mBACAA,EAAAA,EAAA,UAAA,MAAA,YACAA,EAAAA,EAAA,UAAA,MAAA,YACAA,EAAAA,EAAA,eAAA,MAAA,iBACAA,EAAAA,EAAA,mBAAA,MAAA,qBACAA,EAAAA,EAAA,iBAAA,OAAA;AACAA,EAAAA,EAAA,kBAAA,MAAA,oBACAA,EAAAA,EAAA,MAAA,MAAA,QAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IAEAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,I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","file":"entry.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\nfunction _factory(sharedObj) {\n\n\tsharedObj.MonacoPerformanceMarks = sharedObj.MonacoPerformanceMarks || [];\n\n\tconst _dataLen = 2;\n\tconst _nativeMark = typeof performance === 'object' && typeof performance.mark === 'function' ? performance.mark.bind(performance) : () => { };\n\n\tfunction importEntries(entries) {\n\t\tsharedObj.MonacoPerformanceMarks.splice(0, 0, ...entries);\n\t}\n\n\tfunction exportEntries() {\n\t\treturn sharedObj.MonacoPerformanceMarks.slice(0);\n\t}\n\n\tfunction getEntries() {\n\t\tconst result = [];\n\t\tconst entries = sharedObj.MonacoPerformanceMarks;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tresult.push({\n\t\t\t\tname: entries[i],\n\t\t\t\tstartTime: entries[i + 1],\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getDuration(from, to) {\n\t\tconst entries = sharedObj.MonacoPerformanceMarks;\n\t\tlet target = to;\n\t\tlet endIndex = 0;\n\t\tfor (let i = entries.length - _dataLen; i >= 0; i -= _dataLen) {\n\t\t\tif (entries[i] === target) {\n\t\t\t\tif (target === to) {\n\t\t\t\t\t// found `to` (end of interval)\n\t\t\t\t\tendIndex = i;\n\t\t\t\t\ttarget = from;\n\t\t\t\t} else {\n\t\t\t\t\t// found `from` (start of interval)\n\t\t\t\t\treturn entries[endIndex + 1] - entries[i + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction mark(name) {\n\t\tsharedObj.MonacoPerformanceMarks.push(name, Date.now());\n\t\t_nativeMark(name);\n\t}\n\n\tconst exports = {\n\t\tmark: mark,\n\t\tgetEntries: getEntries,\n\t\tgetDuration: getDuration,\n\t\timportEntries: importEntries,\n\t\texportEntries: exportEntries\n\t};\n\n\treturn exports;\n}\n\n// This module can be loaded in an amd and commonjs-context.\n// Because we want both instances to use the same perf-data\n// we store them globally\n\n// eslint-disable-next-line no-var\nvar sharedObj;\nif (typeof global === 'object') {\n\t// nodejs\n\tsharedObj = global;\n} else if (typeof self === 'object') {\n\t// browser\n\tsharedObj = self;\n} else {\n\tsharedObj = {};\n}\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t// commonjs\n\tmodule.exports = _factory(sharedObj);\n} else {\n\tsharedObj.perf = _factory(sharedObj);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n//@ts-check\n\n/**\n * @param {NodeRequire} nodeRequire\n * @param {typeof import('path')} path\n * @param {typeof import('fs')} fs\n * @param {typeof import('../common/performance')} perf\n */\nfunction factory(nodeRequire, path, fs, perf) {\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<boolean>}\n\t */\n\tfunction exists(file) {\n\t\treturn new Promise(c => fs.exists(file, c));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction touch(file) {\n\t\treturn new Promise((c, e) => { const d = new Date(); fs.utimes(file, d, d, err => err ? e(err) : c()); });\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<object>}\n\t */\n\tfunction lstat(file) {\n\t\treturn new Promise((c, e) => fs.lstat(file, (err, stats) => err ? e(err) : c(stats)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string[]>}\n\t */\n\tfunction readdir(dir) {\n\t\treturn new Promise((c, e) => fs.readdir(dir, (err, files) => err ? e(err) : c(files)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string>}\n\t */\n\tfunction mkdirp(dir) {\n\t\treturn new Promise((c, e) => fs.mkdir(dir, { recursive: true }, err => (err && err.code !== 'EEXIST') ? e(err) : c(dir)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<void>}\n\t */\n\tfunction rmdir(dir) {\n\t\treturn new Promise((c, e) => fs.rmdir(dir, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction unlink(file) {\n\t\treturn new Promise((c, e) => fs.unlink(file, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} location\n\t * @returns {Promise<void>}\n\t */\n\tfunction rimraf(location) {\n\t\treturn lstat(location).then(stat => {\n\t\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\t\treturn readdir(location)\n\t\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(path.join(location, child)))))\n\t\t\t\t\t.then(() => rmdir(location));\n\t\t\t} else {\n\t\t\t\treturn unlink(location);\n\t\t\t}\n\t\t}, err => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tfunction readFile(file) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.readFile(file, 'utf8', function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @param {string} content\n\t * @returns {Promise<void>}\n\t */\n\tfunction writeFile(file, content) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.writeFile(file, content, 'utf8', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * @param {string} userDataPath\n\t * @returns {object}\n\t */\n\tfunction getLanguagePackConfigurations(userDataPath) {\n\t\tconst configFile = path.join(userDataPath, 'languagepacks.json');\n\t\ttry {\n\t\t\t// NOTE@coder: Swapped require with readFile since require is cached and\n\t\t\t// we don't restart the server-side portion of code-server when the\n\t\t\t// language changes.\n\t\t\treturn JSON.parse(fs.readFileSync(configFile, 'utf8'));\n\t\t} catch (err) {\n\t\t\t// Do nothing. If we can't read the file we have no\n\t\t\t// language pack config.\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {object} config\n\t * @param {string} locale\n\t */\n\tfunction resolveLanguagePackLocale(config, locale) {\n\t\ttry {\n\t\t\twhile (locale) {\n\t\t\t\tif (config[locale]) {\n\t\t\t\t\treturn locale;\n\t\t\t\t} else {\n\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Resolving language pack configuration failed.', err);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {string} commit\n\t * @param {string} userDataPath\n\t * @param {string} metaDataFile\n\t * @param {string} locale\n\t */\n\tfunction getNLSConfiguration(commit, userDataPath, metaDataFile, locale) {\n\t\tif (locale === 'pseudo') {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {}, pseudo: true });\n\t\t}\n\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\t// We have a built version so we have extracted nls file. Try to find\n\t\t// the right file to use.\n\n\t\t// Check if we have an English or English US locale. If so fall to default since that is our\n\t\t// English translation (we don't ship *.nls.en.json files)\n\t\tif (locale && (locale === 'en' || locale === 'en-us')) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\tconst initialLocale = locale;\n\n\t\tperf.mark('nlsGeneration:start');\n\n\t\tconst defaultResult = function (locale) {\n\t\t\tperf.mark('nlsGeneration:end');\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t};\n\t\ttry {\n\t\t\tif (!commit) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst configs = getLanguagePackConfigurations(userDataPath);\n\t\t\tif (!configs) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tlocale = resolveLanguagePackLocale(configs, locale);\n\t\t\tif (!locale) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst packConfig = configs[locale];\n\t\t\tlet mainPack;\n\t\t\tif (!packConfig || typeof packConfig.hash !== 'string' || !packConfig.translations || typeof (mainPack = packConfig.translations['vscode']) !== 'string') {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\treturn exists(mainPack).then(fileExists => {\n\t\t\t\tif (!fileExists) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst packId = packConfig.hash + '.' + locale;\n\t\t\t\tconst cacheRoot = path.join(userDataPath, 'clp', packId);\n\t\t\t\tconst coreLocation = path.join(cacheRoot, commit);\n\t\t\t\tconst translationsConfigFile = path.join(cacheRoot, 'tcf.json');\n\t\t\t\tconst corruptedFile = path.join(cacheRoot, 'corrupted.info');\n\t\t\t\tconst result = {\n\t\t\t\t\tlocale: initialLocale,\n\t\t\t\t\tavailableLanguages: { '*': locale },\n\t\t\t\t\t_languagePackId: packId,\n\t\t\t\t\t_translationsConfigFile: translationsConfigFile,\n\t\t\t\t\t_cacheRoot: cacheRoot,\n\t\t\t\t\t_resolvedLanguagePackCoreLocation: coreLocation,\n\t\t\t\t\t_corruptedFile: corruptedFile\n\t\t\t\t};\n\t\t\t\treturn exists(corruptedFile).then(corrupted => {\n\t\t\t\t\t// The nls cache directory is corrupted.\n\t\t\t\t\tlet toDelete;\n\t\t\t\t\tif (corrupted) {\n\t\t\t\t\t\ttoDelete = rimraf(cacheRoot);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoDelete = Promise.resolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t\treturn toDelete.then(() => {\n\t\t\t\t\t\treturn exists(coreLocation).then(fileExists => {\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\t// We don't wait for this. No big harm if we can't touch\n\t\t\t\t\t\t\t\ttouch(coreLocation).catch(() => { });\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn mkdirp(coreLocation).then(() => {\n\t\t\t\t\t\t\t\treturn Promise.all([readFile(metaDataFile), readFile(mainPack)]);\n\t\t\t\t\t\t\t}).then(values => {\n\t\t\t\t\t\t\t\tconst metadata = JSON.parse(values[0]);\n\t\t\t\t\t\t\t\tconst packData = JSON.parse(values[1]).contents;\n\t\t\t\t\t\t\t\tconst bundles = Object.keys(metadata.bundles);\n\t\t\t\t\t\t\t\tconst writes = [];\n\t\t\t\t\t\t\t\tfor (const bundle of bundles) {\n\t\t\t\t\t\t\t\t\tconst modules = metadata.bundles[bundle];\n\t\t\t\t\t\t\t\t\tconst target = Object.create(null);\n\t\t\t\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t\t\t\tconst keys = metadata.keys[module];\n\t\t\t\t\t\t\t\t\t\tconst defaultMessages = metadata.messages[module];\n\t\t\t\t\t\t\t\t\t\tconst translations = packData[module];\n\t\t\t\t\t\t\t\t\t\tlet targetStrings;\n\t\t\t\t\t\t\t\t\t\tif (translations) {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = [];\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst elem = keys[i];\n\t\t\t\t\t\t\t\t\t\t\t\tconst key = typeof elem === 'string' ? elem : elem.key;\n\t\t\t\t\t\t\t\t\t\t\t\tlet translatedMessage = translations[key];\n\t\t\t\t\t\t\t\t\t\t\t\tif (translatedMessage === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslatedMessage = defaultMessages[i];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings.push(translatedMessage);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = defaultMessages;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttarget[module] = targetStrings;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twrites.push(writeFile(path.join(coreLocation, bundle.replace(/\\//g, '!') + '.nls.json'), JSON.stringify(target)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twrites.push(writeFile(translationsConfigFile, JSON.stringify(packConfig.translations)));\n\t\t\t\t\t\t\t\treturn Promise.all(writes);\n\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\t\t\t\t\treturn defaultResult(locale);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\treturn defaultResult(locale);\n\t\t}\n\t}\n\n\treturn {\n\t\tgetNLSConfiguration\n\t};\n}\n\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(__m[102/*vs/base/node/languagePacks*/], __M([44/*path*/,21/*fs*/,199/*vs/base/common/performance*/]), function (path, fs, perf) { return factory(require.__$__nodeRequire, path, fs, perf); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\tconst path = require('path');\n\tconst fs = require('fs');\n\tconst perf = require('../common/performance');\n\tmodule.exports = factory(require, path, fs, perf);\n} else {\n\tthrow new Error('Unknown context');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nlet memoizeId = 0;\nexport function createMemoizer() {\n\tconst memoizeKeyPrefix = `$memoize${memoizeId++}`;\n\tlet self: any = undefined;\n\n\tconst result = function memoize(target: any, key: string, descriptor: any) {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\n\t\t\tif (fn!.length !== 0) {\n\t\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t\t}\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tconst memoizeKey = `${memoizeKeyPrefix}:${key}`;\n\t\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\t\tself = this;\n\n\t\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this[memoizeKey];\n\t\t};\n\t};\n\n\tresult.clear = () => {\n\t\tif (typeof self === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tObject.getOwnPropertyNames(self).forEach(property => {\n\t\t\tif (property.indexOf(memoizeKeyPrefix) === 0) {\n\t\t\t\tdelete self[property];\n\t\t\t}\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\treturn createMemoizer()(target, key, descriptor);\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tlet pivotValue = data[Math.floor(data.length * Math.random())];\n\tlet lower: T[] = [];\n\tlet higher: T[] = [];\n\tlet pivots: T[] = [];\n\n\tfor (let value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind<T, R>(array: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of array) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequence of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createScanner, SyntaxKind, ScanError } from './json';\n\nexport interface FormattingOptions {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize?: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * The default 'end of line' character. If not set, '\\n' is used as default.\n\t */\n\teol?: string;\n}\n\n/**\n * Represents a text modification\n */\nexport interface Edit {\n\t/**\n\t * The start offset of the modification.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the modification. Must not be negative. Empty length represents an *insert*.\n\t */\n\tlength: number;\n\t/**\n\t * The new content. Empty content represents a *remove*.\n\t */\n\tcontent: string;\n}\n\n/**\n * A text range in the document\n*/\nexport interface Range {\n\t/**\n\t * The start offset of the range.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the range. Must not be negative.\n\t */\n\tlength: number;\n}\n\n\nexport function format(documentText: string, range: Range | undefined, options: FormattingOptions): Edit[] {\n\tlet initialIndentLevel: number;\n\tlet formatText: string;\n\tlet formatTextStart: number;\n\tlet rangeStart: number;\n\tlet rangeEnd: number;\n\tif (range) {\n\t\trangeStart = range.offset;\n\t\trangeEnd = rangeStart + range.length;\n\n\t\tformatTextStart = rangeStart;\n\t\twhile (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n\t\t\tformatTextStart--;\n\t\t}\n\t\tlet endOffset = rangeEnd;\n\t\twhile (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n\t\t\tendOffset++;\n\t\t}\n\t\tformatText = documentText.substring(formatTextStart, endOffset);\n\t\tinitialIndentLevel = computeIndentLevel(formatText, options);\n\t} else {\n\t\tformatText = documentText;\n\t\tinitialIndentLevel = 0;\n\t\tformatTextStart = 0;\n\t\trangeStart = 0;\n\t\trangeEnd = documentText.length;\n\t}\n\tconst eol = getEOL(options, documentText);\n\n\tlet lineBreak = false;\n\tlet indentLevel = 0;\n\tlet indentValue: string;\n\tif (options.insertSpaces) {\n\t\tindentValue = repeat(' ', options.tabSize || 4);\n\t} else {\n\t\tindentValue = '\\t';\n\t}\n\n\tconst scanner = createScanner(formatText, false);\n\tlet hasError = false;\n\n\tfunction newLineAndIndent(): string {\n\t\treturn eol + repeat(indentValue, initialIndentLevel + indentLevel);\n\t}\n\tfunction scanNext(): SyntaxKind {\n\t\tlet token = scanner.scan();\n\t\tlineBreak = false;\n\t\twhile (token === SyntaxKind.Trivia || token === SyntaxKind.LineBreakTrivia) {\n\t\t\tlineBreak = lineBreak || (token === SyntaxKind.LineBreakTrivia);\n\t\t\ttoken = scanner.scan();\n\t\t}\n\t\thasError = token === SyntaxKind.Unknown || scanner.getTokenError() !== ScanError.None;\n\t\treturn token;\n\t}\n\tconst editOperations: Edit[] = [];\n\tfunction addEdit(text: string, startOffset: number, endOffset: number) {\n\t\tif (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n\t\t\teditOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n\t\t}\n\t}\n\n\tlet firstToken = scanNext();\n\n\tif (firstToken !== SyntaxKind.EOF) {\n\t\tconst firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\tconst initialIndent = repeat(indentValue, initialIndentLevel);\n\t\taddEdit(initialIndent, formatTextStart, firstTokenStart);\n\t}\n\n\twhile (firstToken !== SyntaxKind.EOF) {\n\t\tlet firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\tlet secondToken = scanNext();\n\n\t\tlet replaceContent = '';\n\t\twhile (!lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t// comments on the same line: keep them on the same line, but ignore them otherwise\n\t\t\tconst commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\t\taddEdit(' ', firstTokenEnd, commentTokenStart);\n\t\t\tfirstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\t\treplaceContent = secondToken === SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n\t\t\tsecondToken = scanNext();\n\t\t}\n\n\t\tif (secondToken === SyntaxKind.CloseBraceToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBraceToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken === SyntaxKind.CloseBracketToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBracketToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (firstToken) {\n\t\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\t\tindentLevel++;\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.CommaToken:\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (lineBreak) {\n\t\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// symbol following comment on the same line: keep on same line, separate with ' '\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.ColonToken:\n\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\t\tif (secondToken === SyntaxKind.ColonToken) {\n\t\t\t\t\t\treplaceContent = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t// fall through\n\t\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tcase SyntaxKind.CloseBraceToken:\n\t\t\t\tcase SyntaxKind.CloseBracketToken:\n\t\t\t\t\tif (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia) {\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t} else if (secondToken !== SyntaxKind.CommaToken && secondToken !== SyntaxKind.EOF) {\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thasError = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\n\t\t}\n\t\tconst secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\taddEdit(replaceContent, firstTokenEnd, secondTokenStart);\n\t\tfirstToken = secondToken;\n\t}\n\treturn editOperations;\n}\n\nfunction repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\nfunction computeIndentLevel(content: string, options: FormattingOptions): number {\n\tlet i = 0;\n\tlet nChars = 0;\n\tconst tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tconst ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nexport function getEOL(options: FormattingOptions, text: string): string {\n\tfor (let i = 0; i < text.length; i++) {\n\t\tconst ch = text.charAt(i);\n\t\tif (ch === '\\r') {\n\t\t\tif (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n\t\t\t\treturn '\\r\\n';\n\t\t\t}\n\t\t\treturn '\\r';\n\t\t} else if (ch === '\\n') {\n\t\t\treturn '\\n';\n\t\t}\n\t}\n\treturn (options && options.eol) || '\\n';\n}\n\nexport function isEOL(text: string, offset: number) {\n\treturn '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ParseError, Node, JSONPath, Segment, parseTree, findNodeAtLocation } from './json';\nimport { Edit, format, isEOL, FormattingOptions } from './jsonFormatter';\nimport { mergeSort } from 'vs/base/common/arrays';\n\n\nexport function removeProperty(text: string, path: JSONPath, formattingOptions: FormattingOptions): Edit[] {\n\treturn setProperty(text, path, undefined, formattingOptions);\n}\n\nexport function setProperty(text: string, originalPath: JSONPath, value: any, formattingOptions: FormattingOptions, getInsertionIndex?: (properties: string[]) => number): Edit[] {\n\tconst path = originalPath.slice();\n\tconst errors: ParseError[] = [];\n\tconst root = parseTree(text, errors);\n\tlet parent: Node | undefined = undefined;\n\n\tlet lastSegment: Segment | undefined = undefined;\n\twhile (path.length > 0) {\n\t\tlastSegment = path.pop();\n\t\tparent = findNodeAtLocation(root, path);\n\t\tif (parent === undefined && value !== undefined) {\n\t\t\tif (typeof lastSegment === 'string') {\n\t\t\t\tvalue = { [lastSegment]: value };\n\t\t\t} else {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!parent) {\n\t\t// empty document\n\t\tif (value === undefined) { // delete\n\t\t\tthrow new Error('Can not delete in empty document');\n\t\t}\n\t\treturn withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n\t} else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n\t\tconst existing = findNodeAtLocation(parent, [lastSegment]);\n\t\tif (existing !== undefined) {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\tif (!existing.parent) {\n\t\t\t\t\tthrow new Error('Malformed AST');\n\t\t\t\t}\n\t\t\t\tconst propertyIndex = parent.children.indexOf(existing.parent);\n\t\t\t\tlet removeBegin: number;\n\t\t\t\tlet removeEnd = existing.parent.offset + existing.parent.length;\n\t\t\t\tif (propertyIndex > 0) {\n\t\t\t\t\t// remove the comma of the previous node\n\t\t\t\t\tconst previous = parent.children[propertyIndex - 1];\n\t\t\t\t\tremoveBegin = previous.offset + previous.length;\n\t\t\t\t} else {\n\t\t\t\t\tremoveBegin = parent.offset + 1;\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\t// remove the comma of the next node\n\t\t\t\t\t\tconst next = parent.children[1];\n\t\t\t\t\t\tremoveEnd = next.offset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n\t\t\t} else {\n\t\t\t\t// set value of existing property\n\t\t\t\treturn withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\treturn []; // property does not exist, nothing to do\n\t\t\t}\n\t\t\tconst newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n\t\t\tconst index = getInsertionIndex ? getInsertionIndex(parent.children.map(p => p.children![0].value)) : parent.children.length;\n\t\t\tlet edit: Edit;\n\t\t\tif (index > 0) {\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t} else if (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n\t\tif (value !== undefined) {\n\t\t\t// Insert\n\t\t\tconst newProperty = `${JSON.stringify(value)}`;\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 0 || lastSegment === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: parent.children.length === 0 ? newProperty : newProperty + ',' };\n\t\t\t} else {\n\t\t\t\tconst index = lastSegment === -1 || lastSegment > parent.children.length ? parent.children.length : lastSegment;\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t} else {\n\t\t\t//Removal\n\t\t\tconst removalIndex = lastSegment;\n\t\t\tconst toRemove = parent.children[removalIndex];\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 1) {\n\t\t\t\t// only item\n\t\t\t\tedit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n\t\t\t} else if (parent.children.length - 1 === removalIndex) {\n\t\t\t\t// last item\n\t\t\t\tconst previous = parent.children[removalIndex - 1];\n\t\t\t\tconst offset = previous.offset + previous.length;\n\t\t\t\tconst parentEndOffset = parent.offset + parent.length;\n\t\t\t\tedit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n\t\t\t} else {\n\t\t\t\tedit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else {\n\t\tthrow new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n\t}\n}\n\nexport function withFormatting(text: string, edit: Edit, formattingOptions: FormattingOptions): Edit[] {\n\t// apply the edit\n\tlet newText = applyEdit(text, edit);\n\n\t// format the new text\n\tlet begin = edit.offset;\n\tlet end = edit.offset + edit.content.length;\n\tif (edit.length === 0 || edit.content.length === 0) { // insert or remove\n\t\twhile (begin > 0 && !isEOL(newText, begin - 1)) {\n\t\t\tbegin--;\n\t\t}\n\t\twhile (end < newText.length && !isEOL(newText, end)) {\n\t\t\tend++;\n\t\t}\n\t}\n\n\tconst edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n\n\t// apply the formatting edits and track the begin and end offsets of the changes\n\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\tconst curr = edits[i];\n\t\tnewText = applyEdit(newText, curr);\n\t\tbegin = Math.min(begin, curr.offset);\n\t\tend = Math.max(end, curr.offset + curr.length);\n\t\tend += curr.content.length - curr.length;\n\t}\n\t// create a single edit with all changes\n\tconst editLength = text.length - (newText.length - end) - begin;\n\treturn [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\n\nexport function applyEdit(text: string, edit: Edit): string {\n\treturn text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\n\nexport function applyEdits(text: string, edits: Edit[]): string {\n\tlet sortedEdits = mergeSort(edits, (a, b) => {\n\t\tconst diff = a.offset - b.offset;\n\t\tif (diff === 0) {\n\t\t\treturn a.length - b.length;\n\t\t}\n\t\treturn diff;\n\t});\n\tlet lastModifiedOffset = text.length;\n\tfor (let i = sortedEdits.length - 1; i >= 0; i--) {\n\t\tlet e = sortedEdits[i];\n\t\tif (e.offset + e.length <= lastModifiedOffset) {\n\t\t\ttext = applyEdit(text, e);\n\t\t} else {\n\t\t\tthrow new Error('Overlapping edit');\n\t\t}\n\t\tlastModifiedOffset = e.offset;\n\t}\n\treturn text;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encounter errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\tmarkTracked(arg);\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn Promise.race([promise, new Promise<T | undefined>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<any>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number) { }\n\n\tincrement(): number {\n\t\tconst now = Date.now();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\nexport interface INodeProcess {\n\tplatform: 'win32' | 'linux' | 'darwin';\n\tenv: IProcessEnvironment;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\tsandboxed?: boolean; // Electron\n\ttype?: string;\n\tcwd(): string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n} else if (typeof _globals.vscode !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = _globals.vscode.process;\n}\n\nconst isElectronRenderer = typeof nodeProcess?.versions?.electron === 'string' && nodeProcess.type === 'renderer';\nexport const isElectronSandboxed = isElectronRenderer && nodeProcess?.sandboxed;\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (nodeProcess) {\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, globals, INodeProcess } from 'vs/base/common/platform';\n\ndeclare const process: INodeProcess;\n\nlet safeProcess: INodeProcess;\n\n// Native node.js environment\nif (typeof process !== 'undefined') {\n\tsafeProcess = process;\n}\n\n// Native sandbox environment\nelse if (typeof globals.vscode !== 'undefined') {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform(): 'win32' | 'linux' | 'darwin' { return globals.vscode.process.platform; },\n\t\tget env() { return globals.vscode.process.env; },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\n\n\t\t// Unsupported\n\t\tcwd(): string { return globals.vscode.process.env['VSCODE_CWD'] || globals.vscode.process.execPath.substr(0, globals.vscode.process.execPath.lastIndexOf(globals.vscode.process.platform === 'win32' ? '\\\\' : '/')); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform(): 'win32' | 'linux' | 'darwin' { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\n\n\t\t// Unsupported\n\t\tget env() { return Object.create(null); },\n\t\tcwd(): string { return '/'; }\n\t};\n}\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string; };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {} as Record<string, boolean>);\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^GOOGLE_API_KEY$/,\n\t\t/^VSCODE_.+$/,\n\t\t/^SNAP(|_.*)$/,\n\t\t/^GDK_PIXBUF_.+$/,\n\t\t/^CODE_SERVER_.+$/,\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n","/**\n * Semver UMD module\n * Copyright (c) Isaac Z. Schlueter and Contributors\n * https://github.com/npm/node-semver\n */\n\n/**\n * DO NOT EDIT THIS FILE\n */\n\n!function(e,r){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=r();else if(\"function\"==typeof define&&define.amd)define(\"vs/base/common/semver/semver\", [],r);else{var t=r();for(var n in t)(\"object\"==typeof exports?exports:e)[n]=t[n]}}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\"\",t(t.s=0)}([function(e,r,t){(function(t){var n;r=e.exports=H,n=\"object\"==typeof t&&t.env&&t.env.NODE_DEBUG&&/\\bsemver\\b/i.test(t.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:function(){},r.SEMVER_SPEC_VERSION=\"2.0.0\";var o=256,i=Number.MAX_SAFE_INTEGER||9007199254740991,s=r.re=[],a=r.src=[],u=0,c=u++;a[c]=\"0|[1-9]\\\\d*\";var p=u++;a[p]=\"[0-9]+\";var f=u++;a[f]=\"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\";var l=u++;a[l]=\"(\"+a[c]+\")\\\\.(\"+a[c]+\")\\\\.(\"+a[c]+\")\";var h=u++;a[h]=\"(\"+a[p]+\")\\\\.(\"+a[p]+\")\\\\.(\"+a[p]+\")\";var v=u++;a[v]=\"(?:\"+a[c]+\"|\"+a[f]+\")\";var m=u++;a[m]=\"(?:\"+a[p]+\"|\"+a[f]+\")\";var w=u++;a[w]=\"(?:-(\"+a[v]+\"(?:\\\\.\"+a[v]+\")*))\";var g=u++;a[g]=\"(?:-?(\"+a[m]+\"(?:\\\\.\"+a[m]+\")*))\";var y=u++;a[y]=\"[0-9A-Za-z-]+\";var d=u++;a[d]=\"(?:\\\\+(\"+a[y]+\"(?:\\\\.\"+a[y]+\")*))\";var b=u++,j=\"v?\"+a[l]+a[w]+\"?\"+a[d]+\"?\";a[b]=\"^\"+j+\"$\";var E=\"[v=\\\\s]*\"+a[h]+a[g]+\"?\"+a[d]+\"?\",T=u++;a[T]=\"^\"+E+\"$\";var x=u++;a[x]=\"((?:<|>)?=?)\";var $=u++;a[$]=a[p]+\"|x|X|\\\\*\";var k=u++;a[k]=a[c]+\"|x|X|\\\\*\";var S=u++;a[S]=\"[v=\\\\s]*(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\"+a[w]+\")?\"+a[d]+\"?)?)?\";var R=u++;a[R]=\"[v=\\\\s]*(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\"+a[g]+\")?\"+a[d]+\"?)?)?\";var I=u++;a[I]=\"^\"+a[x]+\"\\\\s*\"+a[S]+\"$\";var _=u++;a[_]=\"^\"+a[x]+\"\\\\s*\"+a[R]+\"$\";var O=u++;a[O]=\"(?:^|[^\\\\d])(\\\\d{1,16})(?:\\\\.(\\\\d{1,16}))?(?:\\\\.(\\\\d{1,16}))?(?:$|[^\\\\d])\";var A=u++;a[A]=\"(?:~>?)\";var M=u++;a[M]=\"(\\\\s*)\"+a[A]+\"\\\\s+\",s[M]=new RegExp(a[M],\"g\");var V=u++;a[V]=\"^\"+a[A]+a[S]+\"$\";var P=u++;a[P]=\"^\"+a[A]+a[R]+\"$\";var C=u++;a[C]=\"(?:\\\\^)\";var L=u++;a[L]=\"(\\\\s*)\"+a[C]+\"\\\\s+\",s[L]=new RegExp(a[L],\"g\");var N=u++;a[N]=\"^\"+a[C]+a[S]+\"$\";var q=u++;a[q]=\"^\"+a[C]+a[R]+\"$\";var D=u++;a[D]=\"^\"+a[x]+\"\\\\s*(\"+E+\")$|^$\";var X=u++;a[X]=\"^\"+a[x]+\"\\\\s*(\"+j+\")$|^$\";var z=u++;a[z]=\"(\\\\s*)\"+a[x]+\"\\\\s*(\"+E+\"|\"+a[S]+\")\",s[z]=new RegExp(a[z],\"g\");var G=u++;a[G]=\"^\\\\s*(\"+a[S]+\")\\\\s+-\\\\s+(\"+a[S]+\")\\\\s*$\";var Z=u++;a[Z]=\"^\\\\s*(\"+a[R]+\")\\\\s+-\\\\s+(\"+a[R]+\")\\\\s*$\";var B=u++;a[B]=\"(<|>)?=?\\\\s*\\\\*\";for(var U=0;U<35;U++)n(U,a[U]),s[U]||(s[U]=new RegExp(a[U]));function F(e,r){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;if(e.length>o)return null;if(!(r?s[T]:s[b]).test(e))return null;try{return new H(e,r)}catch(e){return null}}function H(e,r){if(e instanceof H){if(e.loose===r)return e;e=e.version}else if(\"string\"!=typeof e)throw new TypeError(\"Invalid Version: \"+e);if(e.length>o)throw new TypeError(\"version is longer than \"+o+\" characters\");if(!(this instanceof H))return new H(e,r);n(\"SemVer\",e,r),this.loose=r;var t=e.trim().match(r?s[T]:s[b]);if(!t)throw new TypeError(\"Invalid Version: \"+e);if(this.raw=e,this.major=+t[1],this.minor=+t[2],this.patch=+t[3],this.major>i||this.major<0)throw new TypeError(\"Invalid major version\");if(this.minor>i||this.minor<0)throw new TypeError(\"Invalid minor version\");if(this.patch>i||this.patch<0)throw new TypeError(\"Invalid patch version\");t[4]?this.prerelease=t[4].split(\".\").map((function(e){if(/^[0-9]+$/.test(e)){var r=+e;if(r>=0&&r<i)return r}return e})):this.prerelease=[],this.build=t[5]?t[5].split(\".\"):[],this.format()}r.parse=F,r.valid=function(e,r){var t=F(e,r);return t?t.version:null},r.clean=function(e,r){var t=F(e.trim().replace(/^[=v]+/,\"\"),r);return t?t.version:null},r.SemVer=H,H.prototype.format=function(){return this.version=this.major+\".\"+this.minor+\".\"+this.patch,this.prerelease.length&&(this.version+=\"-\"+this.prerelease.join(\".\")),this.version},H.prototype.toString=function(){return this.version},H.prototype.compare=function(e){return n(\"SemVer.compare\",this.version,this.loose,e),e instanceof H||(e=new H(e,this.loose)),this.compareMain(e)||this.comparePre(e)},H.prototype.compareMain=function(e){return e instanceof H||(e=new H(e,this.loose)),K(this.major,e.major)||K(this.minor,e.minor)||K(this.patch,e.patch)},H.prototype.comparePre=function(e){if(e instanceof H||(e=new H(e,this.loose)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var r=0;do{var t=this.prerelease[r],o=e.prerelease[r];if(n(\"prerelease compare\",r,t,o),void 0===t&&void 0===o)return 0;if(void 0===o)return 1;if(void 0===t)return-1;if(t!==o)return K(t,o)}while(++r)},H.prototype.inc=function(e,r){switch(e){case\"premajor\":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc(\"pre\",r);break;case\"preminor\":this.prerelease.length=0,this.patch=0,this.minor++,this.inc(\"pre\",r);break;case\"prepatch\":this.prerelease.length=0,this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"prerelease\":0===this.prerelease.length&&this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"major\":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case\"minor\":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case\"patch\":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case\"pre\":if(0===this.prerelease.length)this.prerelease=[0];else{for(var t=this.prerelease.length;--t>=0;)\"number\"==typeof this.prerelease[t]&&(this.prerelease[t]++,t=-2);-1===t&&this.prerelease.push(0)}r&&(this.prerelease[0]===r?isNaN(this.prerelease[1])&&(this.prerelease=[r,0]):this.prerelease=[r,0]);break;default:throw new Error(\"invalid increment argument: \"+e)}return this.format(),this.raw=this.version,this},r.inc=function(e,r,t,n){\"string\"==typeof t&&(n=t,t=void 0);try{return new H(e,t).inc(r,n).version}catch(e){return null}},r.diff=function(e,r){if(ee(e,r))return null;var t=F(e),n=F(r);if(t.prerelease.length||n.prerelease.length){for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return\"pre\"+o;return\"prerelease\"}for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return o},r.compareIdentifiers=K;var J=/^[0-9]+$/;function K(e,r){var t=J.test(e),n=J.test(r);return t&&n&&(e=+e,r=+r),t&&!n?-1:n&&!t?1:e<r?-1:e>r?1:0}function Q(e,r,t){return new H(e,t).compare(new H(r,t))}function W(e,r,t){return Q(e,r,t)>0}function Y(e,r,t){return Q(e,r,t)<0}function ee(e,r,t){return 0===Q(e,r,t)}function re(e,r,t){return 0!==Q(e,r,t)}function te(e,r,t){return Q(e,r,t)>=0}function ne(e,r,t){return Q(e,r,t)<=0}function oe(e,r,t,n){var o;switch(r){case\"===\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e===t;break;case\"!==\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e!==t;break;case\"\":case\"=\":case\"==\":o=ee(e,t,n);break;case\"!=\":o=re(e,t,n);break;case\">\":o=W(e,t,n);break;case\">=\":o=te(e,t,n);break;case\"<\":o=Y(e,t,n);break;case\"<=\":o=ne(e,t,n);break;default:throw new TypeError(\"Invalid operator: \"+r)}return o}function ie(e,r){if(e instanceof ie){if(e.loose===r)return e;e=e.value}if(!(this instanceof ie))return new ie(e,r);n(\"comparator\",e,r),this.loose=r,this.parse(e),this.semver===se?this.value=\"\":this.value=this.operator+this.semver.version,n(\"comp\",this)}r.rcompareIdentifiers=function(e,r){return K(r,e)},r.major=function(e,r){return new H(e,r).major},r.minor=function(e,r){return new H(e,r).minor},r.patch=function(e,r){return new H(e,r).patch},r.compare=Q,r.compareLoose=function(e,r){return Q(e,r,!0)},r.rcompare=function(e,r,t){return Q(r,e,t)},r.sort=function(e,t){return e.sort((function(e,n){return r.compare(e,n,t)}))},r.rsort=function(e,t){return e.sort((function(e,n){return r.rcompare(e,n,t)}))},r.gt=W,r.lt=Y,r.eq=ee,r.neq=re,r.gte=te,r.lte=ne,r.cmp=oe,r.Comparator=ie;var se={};function ae(e,r){if(e instanceof ae)return e.loose===r?e:new ae(e.raw,r);if(e instanceof ie)return new ae(e.value,r);if(!(this instanceof ae))return new ae(e,r);if(this.loose=r,this.raw=e,this.set=e.split(/\\s*\\|\\|\\s*/).map((function(e){return this.parseRange(e.trim())}),this).filter((function(e){return e.length})),!this.set.length)throw new TypeError(\"Invalid SemVer Range: \"+e);this.format()}function ue(e){return!e||\"x\"===e.toLowerCase()||\"*\"===e}function ce(e,r,t,n,o,i,s,a,u,c,p,f,l){return((r=ue(t)?\"\":ue(n)?\">=\"+t+\".0.0\":ue(o)?\">=\"+t+\".\"+n+\".0\":\">=\"+r)+\" \"+(a=ue(u)?\"\":ue(c)?\"<\"+(+u+1)+\".0.0\":ue(p)?\"<\"+u+\".\"+(+c+1)+\".0\":f?\"<=\"+u+\".\"+c+\".\"+p+\"-\"+f:\"<=\"+a)).trim()}function pe(e,r){for(var t=0;t<e.length;t++)if(!e[t].test(r))return!1;if(r.prerelease.length){for(t=0;t<e.length;t++)if(n(e[t].semver),e[t].semver!==se&&e[t].semver.prerelease.length>0){var o=e[t].semver;if(o.major===r.major&&o.minor===r.minor&&o.patch===r.patch)return!0}return!1}return!0}function fe(e,r,t){try{r=new ae(r,t)}catch(e){return!1}return r.test(e)}function le(e,r,t,n){var o,i,s,a,u;switch(e=new H(e,n),r=new ae(r,n),t){case\">\":o=W,i=ne,s=Y,a=\">\",u=\">=\";break;case\"<\":o=Y,i=te,s=W,a=\"<\",u=\"<=\";break;default:throw new TypeError('Must provide a hilo val of \"<\" or \">\"')}if(fe(e,r,n))return!1;for(var c=0;c<r.set.length;++c){var p=r.set[c],f=null,l=null;if(p.forEach((function(e){e.semver===se&&(e=new ie(\">=0.0.0\")),f=f||e,l=l||e,o(e.semver,f.semver,n)?f=e:s(e.semver,l.semver,n)&&(l=e)})),f.operator===a||f.operator===u)return!1;if((!l.operator||l.operator===a)&&i(e,l.semver))return!1;if(l.operator===u&&s(e,l.semver))return!1}return!0}ie.prototype.parse=function(e){var r=this.loose?s[D]:s[X],t=e.match(r);if(!t)throw new TypeError(\"Invalid comparator: \"+e);this.operator=t[1],\"=\"===this.operator&&(this.operator=\"\"),t[2]?this.semver=new H(t[2],this.loose):this.semver=se},ie.prototype.toString=function(){return this.value},ie.prototype.test=function(e){return n(\"Comparator.test\",e,this.loose),this.semver===se||(\"string\"==typeof e&&(e=new H(e,this.loose)),oe(e,this.operator,this.semver,this.loose))},ie.prototype.intersects=function(e,r){if(!(e instanceof ie))throw new TypeError(\"a Comparator is required\");var t;if(\"\"===this.operator)return t=new ae(e.value,r),fe(this.value,t,r);if(\"\"===e.operator)return t=new ae(this.value,r),fe(e.semver,t,r);var n=!(\">=\"!==this.operator&&\">\"!==this.operator||\">=\"!==e.operator&&\">\"!==e.operator),o=!(\"<=\"!==this.operator&&\"<\"!==this.operator||\"<=\"!==e.operator&&\"<\"!==e.operator),i=this.semver.version===e.semver.version,s=!(\">=\"!==this.operator&&\"<=\"!==this.operator||\">=\"!==e.operator&&\"<=\"!==e.operator),a=oe(this.semver,\"<\",e.semver,r)&&(\">=\"===this.operator||\">\"===this.operator)&&(\"<=\"===e.operator||\"<\"===e.operator),u=oe(this.semver,\">\",e.semver,r)&&(\"<=\"===this.operator||\"<\"===this.operator)&&(\">=\"===e.operator||\">\"===e.operator);return n||o||i&&s||a||u},r.Range=ae,ae.prototype.format=function(){return this.range=this.set.map((function(e){return e.join(\" \").trim()})).join(\"||\").trim(),this.range},ae.prototype.toString=function(){return this.range},ae.prototype.parseRange=function(e){var r=this.loose;e=e.trim(),n(\"range\",e,r);var t=r?s[Z]:s[G];e=e.replace(t,ce),n(\"hyphen replace\",e),e=e.replace(s[z],\"$1$2$3\"),n(\"comparator trim\",e,s[z]),e=(e=(e=e.replace(s[M],\"$1~\")).replace(s[L],\"$1^\")).split(/\\s+/).join(\" \");var o=r?s[D]:s[X],i=e.split(\" \").map((function(e){return function(e,r){return n(\"comp\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){n(\"caret\",e,r);var t=r?s[q]:s[N];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"caret\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\"0\"===t?\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".0 <\"+(+t+1)+\".0.0\":s?(n(\"replaceCaret pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+(+t+1)+\".0.0\"):(n(\"no pr\"),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+\" <\"+(+t+1)+\".0.0\"),n(\"caret return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"caret\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){var t=r?s[P]:s[V];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"tilde\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":s?(n(\"replaceTilde pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\"):a=\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\",n(\"tilde return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"tildes\",e),e=function(e,r){return n(\"replaceXRanges\",e,r),e.split(/\\s+/).map((function(e){return function(e,r){e=e.trim();var t=r?s[_]:s[I];return e.replace(t,(function(r,t,o,i,s,a){n(\"xRange\",e,r,t,o,i,s,a);var u=ue(o),c=u||ue(i),p=c||ue(s);return\"=\"===t&&p&&(t=\"\"),u?r=\">\"===t||\"<\"===t?\"<0.0.0\":\"*\":t&&p?(c&&(i=0),p&&(s=0),\">\"===t?(t=\">=\",c?(o=+o+1,i=0,s=0):p&&(i=+i+1,s=0)):\"<=\"===t&&(t=\"<\",c?o=+o+1:i=+i+1),r=t+o+\".\"+i+\".\"+s):c?r=\">=\"+o+\".0.0 <\"+(+o+1)+\".0.0\":p&&(r=\">=\"+o+\".\"+i+\".0 <\"+o+\".\"+(+i+1)+\".0\"),n(\"xRange return\",r),r}))}(e,r)})).join(\" \")}(e,r),n(\"xrange\",e),e=function(e,r){return n(\"replaceStars\",e,r),e.trim().replace(s[B],\"\")}(e,r),n(\"stars\",e),e}(e,r)})).join(\" \").split(/\\s+/);return this.loose&&(i=i.filter((function(e){return!!e.match(o)}))),i=i.map((function(e){return new ie(e,r)}))},ae.prototype.intersects=function(e,r){if(!(e instanceof ae))throw new TypeError(\"a Range is required\");return this.set.some((function(t){return t.every((function(t){return e.set.some((function(e){return e.every((function(e){return t.intersects(e,r)}))}))}))}))},r.toComparators=function(e,r){return new ae(e,r).set.map((function(e){return e.map((function(e){return e.value})).join(\" \").trim().split(\" \")}))},ae.prototype.test=function(e){if(!e)return!1;\"string\"==typeof e&&(e=new H(e,this.loose));for(var r=0;r<this.set.length;r++)if(pe(this.set[r],e))return!0;return!1},r.satisfies=fe,r.maxSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&-1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.minSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.validRange=function(e,r){try{return new ae(e,r).range||\"*\"}catch(e){return null}},r.ltr=function(e,r,t){return le(e,r,\"<\",t)},r.gtr=function(e,r,t){return le(e,r,\">\",t)},r.outside=le,r.prerelease=function(e,r){var t=F(e,r);return t&&t.prerelease.length?t.prerelease:null},r.intersects=function(e,r,t){return e=new ae(e,t),r=new ae(r,t),e.intersects(r)},r.coerce=function(e){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;var r=e.match(s[O]);return null==r?null:F((r[1]||\"0\")+\".\"+(r[2]||\"0\")+\".\"+(r[3]||\"0\"))}}).call(this,t(1))},function(e,r){var t,n,o=e.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function s(){throw new Error(\"clearTimeout has not been defined\")}function a(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t=\"function\"==typeof setTimeout?setTimeout:i}catch(e){t=i}try{n=\"function\"==typeof clearTimeout?clearTimeout:s}catch(e){n=s}}();var u,c=[],p=!1,f=-1;function l(){p&&u&&(p=!1,u.length?c=u.concat(c):f=-1,c.length&&h())}function h(){if(!p){var e=a(l);p=!0;for(var r=c.length;r;){for(u=c,c=[];++f<r;)u&&u[f].run();f=-1,r=c.length}u=null,p=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===s||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(r){try{return n.call(null,e)}catch(r){return n.call(this,e)}}}(e)}}function v(e,r){this.fun=e,this.array=r}function m(){}o.nextTick=function(e){var r=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)r[t-1]=arguments[t];c.push(new v(e,r)),1!==c.length||p||a(h)},v.prototype.run=function(){this.fun.apply(null,this.array)},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return\"/\"},o.chdir=function(e){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0}}])}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T>;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T>;\n\n\treturn candidate && isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\n\t\t// Data Listener\n\t\tconst buffer: T[] = [];\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray<T>(array: T | {}): array is T extends readonly any[] ? (unknown extends T ? never : readonly any[]) : any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends object\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mergeSort } from 'vs/base/common/arrays';\nimport { URI } from 'vs/base/common/uri';\n\n/**\n * @deprecated use `FileAccess.asFileUri(relativePath, requireFn).fsPath`\n */\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\n/**\n * @deprecated use `FileAccess.asFileUri()` for node.js contexts or `FileAccess.asBrowserUri` for browser contexts.\n */\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n\nexport abstract class LoaderStats {\n\tabstract get amdLoad(): [string, number][];\n\tabstract get amdInvoke(): [string, number][];\n\tabstract get nodeRequire(): [string, number][];\n\tabstract get nodeEval(): [string, number][];\n\tabstract get nodeRequireTotal(): number;\n\n\n\tstatic get(): LoaderStats {\n\n\n\t\tconst amdLoadScript = new Map<string, number>();\n\t\tconst amdInvokeFactory = new Map<string, number>();\n\t\tconst nodeRequire = new Map<string, number>();\n\t\tconst nodeEval = new Map<string, number>();\n\n\t\tfunction mark(map: Map<string, number>, stat: LoaderEvent) {\n\t\t\tif (map.has(stat.detail)) {\n\t\t\t\t// console.warn('BAD events, DOUBLE start', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmap.set(stat.detail, -stat.timestamp);\n\t\t}\n\n\t\tfunction diff(map: Map<string, number>, stat: LoaderEvent) {\n\t\t\tlet duration = map.get(stat.detail);\n\t\t\tif (!duration) {\n\t\t\t\t// console.warn('BAD events, end WITHOUT start', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (duration >= 0) {\n\t\t\t\t// console.warn('BAD events, DOUBLE end', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmap.set(stat.detail, duration + stat.timestamp);\n\t\t}\n\n\t\tconst stats = mergeSort(require.getStats().slice(0), (a, b) => a.timestamp - b.timestamp);\n\n\t\tfor (const stat of stats) {\n\t\t\tswitch (stat.type) {\n\t\t\t\tcase LoaderEventType.BeginLoadingScript:\n\t\t\t\t\tmark(amdLoadScript, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.EndLoadingScriptOK:\n\t\t\t\tcase LoaderEventType.EndLoadingScriptError:\n\t\t\t\t\tdiff(amdLoadScript, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.BeginInvokeFactory:\n\t\t\t\t\tmark(amdInvokeFactory, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.EndInvokeFactory:\n\t\t\t\t\tdiff(amdInvokeFactory, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.NodeBeginNativeRequire:\n\t\t\t\t\tmark(nodeRequire, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.NodeEndNativeRequire:\n\t\t\t\t\tdiff(nodeRequire, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.NodeBeginEvaluatingScript:\n\t\t\t\t\tmark(nodeEval, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.NodeEndEvaluatingScript:\n\t\t\t\t\tdiff(nodeEval, stat);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet nodeRequireTotal = 0;\n\t\tnodeRequire.forEach(value => nodeRequireTotal += value);\n\n\t\tfunction to2dArray(map: Map<string, number>): [string, number][] {\n\t\t\tlet res: [string, number][] = [];\n\t\t\tmap.forEach((value, index) => res.push([index, value]));\n\t\t\treturn res;\n\t\t}\n\n\t\treturn {\n\t\t\tamdLoad: to2dArray(amdLoadScript),\n\t\t\tamdInvoke: to2dArray(amdInvokeFactory),\n\t\t\tnodeRequire: to2dArray(nodeRequire),\n\t\t\tnodeEval: to2dArray(nodeEval),\n\t\t\tnodeRequireTotal\n\t\t};\n\t}\n\n\tstatic toMarkdownTable(header: string[], rows: Array<Array<{ toString(): string } | undefined>>): string {\n\t\tlet result = '';\n\n\t\tlet lengths: number[] = [];\n\t\theader.forEach((cell, ci) => {\n\t\t\tlengths[ci] = cell.length;\n\t\t});\n\t\trows.forEach(row => {\n\t\t\trow.forEach((cell, ci) => {\n\t\t\t\tif (typeof cell === 'undefined') {\n\t\t\t\t\tcell = row[ci] = '-';\n\t\t\t\t}\n\t\t\t\tconst len = cell.toString().length;\n\t\t\t\tlengths[ci] = Math.max(len, lengths[ci]);\n\t\t\t});\n\t\t});\n\n\t\t// header\n\t\theader.forEach((cell, ci) => { result += `| ${cell + ' '.repeat(lengths[ci] - cell.toString().length)} `; });\n\t\tresult += '|\\n';\n\t\theader.forEach((_cell, ci) => { result += `| ${'-'.repeat(lengths[ci])} `; });\n\t\tresult += '|\\n';\n\n\t\t// cells\n\t\trows.forEach(row => {\n\t\t\trow.forEach((cell, ci) => {\n\t\t\t\tif (typeof cell !== 'undefined') {\n\t\t\t\t\tresult += `| ${cell + ' '.repeat(lengths[ci] - cell.toString().length)} `;\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult += '|\\n';\n\t\t});\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring, compareIgnoreCase } from 'vs/base/common/strings';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(private readonly _ignorePathCasing: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing));\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tif (superStr) {\n\t\t\t\t\t// remove children\n\t\t\t\t\tnode.left = undefined;\n\t\t\t\t\tnode.mid = undefined;\n\t\t\t\t\tnode.right = undefined;\n\t\t\t\t} else {\n\t\t\t\t\t// remove element\n\t\t\t\t\tnode.value = undefined;\n\t\t\t\t}\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate *_entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tyield* this._entries(node.left);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tyield [node.key, node.value];\n\t\t\t}\n\t\t\t// mid\n\t\t\tyield* this._entries(node.mid);\n\n\t\t\t// right\n\t\t\tyield* this._entries(node.right);\n\t\t}\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, T>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return <any>URI.revive(obj);\n\t\t\tcase 2: return <any>new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for loading resources inside of webviews.\n\t */\n\texport const vscodeWebviewResource = 'vscode-webview-resource';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\tprivate readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Only convert the URI if we are in a native context and it has `file:` scheme\n\t\tif (platform.isElectronSandboxed && platform.isNative && uri.scheme === Schemas.file) {\n\t\t\treturn this.toCodeFileUri(uri);\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * TODO@bpasero remove me eventually when vscode-file is adopted everywhere\n\t */\n\t_asCodeFileUri(uri: URI): URI;\n\t_asCodeFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\t_asCodeFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\treturn this.toCodeFileUri(uri);\n\t}\n\n\tprivate toCodeFileUri(uri: URI): URI {\n\t\treturn uri.with({\n\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t// add our own\n\t\t\tauthority: uri.authority || this.FALLBACK_AUTHORITY,\n\t\t\tquery: null,\n\t\t\tfragment: null\n\t\t});\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== this.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase, compare as strCompare } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\"\n\t * @param parentCandidate A uri which is \"shorter\" then `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see ResourceMap\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\t\tpath = extpath.toSlashes(path);\n\t\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\t\tpath = '/' + path;\n\t\t\t}\n\t\t}\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string, a2: string) {\n\t\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { posix, normalize, win32, sep } from 'vs/base/common/path';\nimport { startsWithIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename, relativePath } from 'vs/base/common/resources';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome?: URI;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider?.userHome) {\n\t\tres = tildify(res, userHomeProvider.userHome.fsPath);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function extractDriveLetter(path: string): string | undefined {\n\treturn hasDriveLetter(path) ? path[0] : undefined;\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? path.startsWith(normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\tpath = path.substr(path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\nimport { Schemas } from './network';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tconstructor(private readonly remoteAuthority: string) {\n\t}\n\n\t// NOTE@coder: Coming in from the browser it'll be vscode-remote so it needs\n\t// to be transformed into file.\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.vscodeRemote\n\t\t\t? toJSON(URI.file(uri.path))\n\t\t\t: uri;\n\t}\n\n\t// NOTE@coder: Going out to the browser it'll be file so it needs to be\n\t// transformed into vscode-remote.\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? toJSON(URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path: uri.path }))\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path:uri.path })\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn scheme === Schemas.file\n\t\t\t? Schemas.vscodeRemote\n\t\t\t: scheme;\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@jrieken\n// 1. node nodejs use`crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// 2. use browser-crypto\nconst _fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\tfor (let i = 0; i < bucket.length; i++) {\n\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t}\n\treturn bucket;\n};\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\tconst timeout = setTimeout(() => reject('Unable to retrieve mac address (timeout after 10s)'), 10000);\n\n\t\ttry {\n\t\t\tresolve(await doGetMac());\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t} finally {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t});\n}\n\nfunction doGetMac(): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tconst ifaces = networkInterfaces();\n\t\t\tfor (const [, infos] of Object.entries(ifaces)) {\n\t\t\t\tfor (const info of infos) {\n\t\t\t\t\tif (validateMacAddress(info.mac)) {\n\t\t\t\t\t\treturn resolve(info.mac);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treject('Unable to retrieve mac address (unexpected format)');\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as uuid from 'vs/base/common/uuid';\nimport { networkInterfaces } from 'os';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<string, boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAdress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(interfaces, name)) {\n\t\t\t\t\tfor (const { mac, internal } of interfaces[name]) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAdress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = await getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\n\nconst pathsPath = FileAccess.asFileUri('paths', require).fsPath;\nconst paths = require.__$__nodeRequire<{ getDefaultUserDataPath(): string }>(pathsPath);\n\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\n\n// See https://github.com/microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\n\t// The stats of the file. If the file is a symbolic\n\t// link, the stats will be of that target file and\n\t// not the link itself.\n\t// If the file is a symbolic link pointing to a non\n\t// existing file, the stat will be of the link and\n\t// the `dangling` flag will indicate this.\n\tstat: fs.Stats;\n\n\t// Will be provided if the resource is a symbolic link\n\t// on disk. Use the `dangling` flag to find out if it\n\t// points to a resource that does not exist on disk.\n\tsymbolicLink?: { dangling: boolean };\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet lstats: fs.Stats | undefined;\n\ttry {\n\t\tlstats = await lstat(path);\n\n\t\t// Return early if the stat is not a symbolic link at all\n\t\tif (!lstats.isSymbolicLink()) {\n\t\t\treturn { stat: lstats };\n\t\t}\n\t} catch (error) {\n\t\t/* ignore - use stat() instead */\n\t}\n\n\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t// which for symbolic links will stat the target they point to\n\ttry {\n\t\tconst stats = await stat(path);\n\n\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t} catch (error) {\n\n\t\t// If the link points to a non-existing file we still want\n\t\t// to return it as result while setting dangling: true flag\n\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => fs.rename(oldPath, newPath, () => resolve()));\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accommodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","import { logger } from \"@coder/logger\"\nimport * as http from \"http\"\nimport * as proxyAgent from \"proxy-agent\"\nimport * as proxyFromEnv from \"proxy-from-env\"\n\n/**\n * This file has nothing to do with the code-server proxy.\n * It is to support $HTTP_PROXY, $HTTPS_PROXY and $NO_PROXY.\n *\n * - https://github.com/cdr/code-server/issues/124\n * - https://www.npmjs.com/package/proxy-agent\n * - https://www.npmjs.com/package/proxy-from-env\n *\n * This file exists in two locations:\n * - src/node/proxy_agent.ts\n * - lib/vscode/src/vs/base/node/proxy_agent.ts\n * The second is a symlink to the first.\n */\n\n/**\n * monkeyPatch patches the node http,https modules to route all requests through the\n * agent we get from the proxy-agent package.\n *\n * This approach only works if there is no code specifying an explicit agent when making\n * a request.\n *\n * None of our code ever passes in a explicit agent to the http,https modules.\n * VS Code's does sometimes but only when a user sets the http.proxy configuration.\n * See https://code.visualstudio.com/docs/setup/network#_legacy-proxy-server-support\n *\n * Even if they do, it's probably the same proxy so we should be fine! And those knobs\n * are deprecated anyway.\n */\nexport function monkeyPatch(inVSCode: boolean): void {\n  if (shouldEnableProxy()) {\n    const http = require(\"http\")\n    const https = require(\"https\")\n\n    // If we do not pass in a proxy URL, proxy-agent will get the URL from the environment.\n    // See https://www.npmjs.com/package/proxy-from-env.\n    // Also see shouldEnableProxy.\n    const pa = newProxyAgent(inVSCode)\n    http.globalAgent = pa\n    https.globalAgent = pa\n  }\n}\n\nfunction newProxyAgent(inVSCode: boolean): http.Agent {\n  // The reasoning for this split is that VS Code's build process does not have\n  // esModuleInterop enabled but the code-server one does. As a result depending on where\n  // we execute, we either have a default attribute or we don't.\n  //\n  // I can't enable esModuleInterop in VS Code's build process as it breaks and spits out\n  // a huge number of errors. And we can't use require as otherwise the modules won't be\n  // included in the final product.\n  if (inVSCode) {\n    return new (proxyAgent as any)()\n  } else {\n    return new (proxyAgent as any).default()\n  }\n}\n\n// If they have $NO_PROXY set to example.com then this check won't work!\n// But that's drastically unlikely.\nfunction shouldEnableProxy(): boolean {\n  let shouldEnable = false\n\n  const httpProxy = proxyFromEnv.getProxyForUrl(`http://example.com`)\n  if (httpProxy) {\n    shouldEnable = true\n    logger.debug(`using $HTTP_PROXY ${httpProxy}`)\n  }\n\n  const httpsProxy = proxyFromEnv.getProxyForUrl(`https://example.com`)\n  if (httpsProxy) {\n    shouldEnable = true\n    logger.debug(`using $HTTPS_PROXY ${httpsProxy}`)\n  }\n\n  return shouldEnable\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join, basename } from 'vs/base/common/path';\nimport { watch } from 'fs';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { exists, readdir } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\treaddir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\texists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n\n//#region createChannelReceiver / createChannelSender\n\n/**\n * Use both `createChannelReceiver` and `createChannelSender`\n * for automated process <=> process communication over methods\n * and events. You do not need to spell out each method on both\n * sides, a proxy will take care of this.\n *\n * Rules:\n * - if marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - events must follow the naming convention `onUppercase`\n * - `CancellationToken` is currently not supported\n * - if a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\n\nexport interface IBaseChannelOptions {\n\n\t/**\n\t * Disables automatic marshalling of `URI`.\n\t * If marshalling is disabled, `UriComponents`\n\t * must be used instead.\n\t */\n\tdisableMarshalling?: boolean;\n}\n\nexport interface IChannelReceiverOptions extends IBaseChannelOptions { }\n\nexport function createChannelReceiver(service: unknown, options?: IChannelReceiverOptions): IServerChannel {\n\tconst handler = service as { [key: string]: unknown };\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t// Buffer any event that should be supported by\n\t// iterating over all property keys and finding them\n\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\tfor (const key in handler) {\n\t\tif (propertyIsEvent(key)) {\n\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t}\n\t}\n\n\treturn new class implements IServerChannel {\n\n\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\tif (eventImpl) {\n\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t}\n\n\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t}\n\n\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\tconst target = handler[command];\n\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target.apply(handler, args);\n\t\t\t}\n\n\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t}\n\t};\n}\n\nexport interface IChannelSenderOptions extends IBaseChannelOptions {\n\n\t/**\n\t * If provided, will add the value of `context`\n\t * to each method call to the target.\n\t */\n\tcontext?: unknown;\n\n\t/**\n\t * If provided, will not proxy any of the properties\n\t * that are part of the Map but rather return that value.\n\t */\n\tproperties?: Map<string, unknown>;\n}\n\nexport function createChannelSender<T>(channel: IChannel, options?: IChannelSenderOptions): T {\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\treturn new Proxy({}, {\n\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t// Check for predefined values\n\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Event\n\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Function\n\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t// Add context if any\n\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t}\n\t}) as T;\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\n\n//#endregion\n\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, IPCClient, IIPCLogger } from 'vs/base/parts/ipc/common/ipc';\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: () => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n\tdrain(): Promise<void>;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tKeepAlive = 4,\n\tDisconnect = 5,\n\tReplayRequest = 6\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a message that has been unacknowledged for 10 seconds, consider the connection closed...\n\t */\n\tAcknowledgeTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * Send at least a message every 5s for keep alive reasons.\n\t */\n\tKeepAliveTime = 5000, // 5 seconds\n\t/**\n\t * If there is no message received for 10 seconds, consider the connection closed...\n\t */\n\tKeepAliveTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\ttry {\n\t\t\tthis.flush();\n\t\t} catch (err) {\n\t\t\t// ignore error, since the socket could be already closed\n\t\t}\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.flush();\n\t\treturn this._socket.drain();\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tplatform.setImmediate(() => {\n\t\t\t\tthis._writeNow();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._socket.write(this._bufferTake());\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onClose.fire()));\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tsuper(protocol, id, ipcLogger);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\t\tprocess.nextTick(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\nclass LoadEstimator {\n\n\tprivate static _HISTORY_LENGTH = 10;\n\tprivate static _INSTANCE: LoadEstimator | null = null;\n\tpublic static getInstance(): LoadEstimator {\n\t\tif (!LoadEstimator._INSTANCE) {\n\t\t\tLoadEstimator._INSTANCE = new LoadEstimator();\n\t\t}\n\t\treturn LoadEstimator._INSTANCE;\n\t}\n\n\tprivate lastRuns: number[];\n\n\tconstructor() {\n\t\tthis.lastRuns = [];\n\t\tconst now = Date.now();\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tthis.lastRuns[i] = now - 1000 * i;\n\t\t}\n\t\tsetInterval(() => {\n\t\t\tfor (let i = LoadEstimator._HISTORY_LENGTH; i >= 1; i--) {\n\t\t\t\tthis.lastRuns[i] = this.lastRuns[i - 1];\n\t\t\t}\n\t\t\tthis.lastRuns[0] = Date.now();\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * returns an estimative number, from 0 (low load) to 1 (high load)\n\t */\n\tpublic load(): number {\n\t\tconst now = Date.now();\n\t\tconst historyLimit = (1 + LoadEstimator._HISTORY_LENGTH) * 1000;\n\t\tlet score = 0;\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tif (now - this.lastRuns[i] <= historyLimit) {\n\t\t\t\tscore++;\n\t\t\t}\n\t\t}\n\t\treturn 1 - score / LoadEstimator._HISTORY_LENGTH;\n\t}\n\n\tpublic hasHighLoad(): boolean {\n\t\treturn this.load() >= 0.5;\n\t}\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _outgoingKeepAliveTimeout: any | null;\n\tprivate _incomingKeepAliveTimeout: any | null;\n\n\tprivate _lastReplayRequestTime: number;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _loadEstimator = LoadEstimator.getInstance();\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new BufferedEmitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<void>();\n\treadonly onSocketClose: Event<void> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null) {\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._outgoingKeepAliveTimeout = null;\n\t\tthis._incomingKeepAliveTimeout = null;\n\n\t\tthis._lastReplayRequestTime = 0;\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._outgoingKeepAliveTimeout);\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t}\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._incomingKeepAliveTimeout);\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tprivate _sendKeepAliveCheck(): void {\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastOutgoingMsg = Date.now() - this._socketWriter.lastWriteTime;\n\t\tif (timeSinceLastOutgoingMsg >= ProtocolConstants.KeepAliveTime) {\n\t\t\t// sufficient time has passed since last message was written,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only a keep alive.\n\t\t\tconst msg = new ProtocolMessage(ProtocolMessageType.KeepAlive, 0, 0, getEmptyBuffer());\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._sendKeepAliveCheck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t\tthis._sendKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTime - timeSinceLastOutgoingMsg + 5);\n\t}\n\n\tprivate _recvKeepAliveCheck(): void {\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._socketReader.lastReadTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.KeepAliveTimeoutTime) {\n\t\t\t// It's been a long time since we received a server message\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._incomingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t\tthis._recvKeepAliveCheck();\n\t\t}, Math.max(ProtocolConstants.KeepAliveTimeoutTime - timeSinceLastIncomingMsg, 0) + 5);\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._lastReplayRequestTime = 0;\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onClose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\t// in case we missed some messages we ask the other party to resend them\n\t\t\t\t\tconst now = Date.now();\n\t\t\t\t\tif (now - this._lastReplayRequestTime > 10000) {\n\t\t\t\t\t\t// send a replay request at most once every 10s\n\t\t\t\t\t\tthis._lastReplayRequestTime = now;\n\t\t\t\t\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.ReplayRequest, 0, 0, getEmptyBuffer()));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\t\tthis._sendAckCheck();\n\t\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (msg.type === ProtocolMessageType.Control) {\n\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t} else if (msg.type === ProtocolMessageType.Disconnect) {\n\t\t\tthis._onClose.fire();\n\t\t} else if (msg.type === ProtocolMessageType.ReplayRequest) {\n\t\t\t// Send again all unacknowledged messages\n\t\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t\t}\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tif (timeSinceOldestUnacknowledgedMsg >= ProtocolConstants.AcknowledgeTimeoutTime) {\n\t\t\t// It's been a long time since our sent message was acknowledged\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, Math.max(ProtocolConstants.AcknowledgeTimeoutTime - timeSinceOldestUnacknowledgedMsg, 0) + 5);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ISocket, Protocol, Client, ChunkStream } from 'vs/base/parts/ipc/common/ipc.net';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Platform, platform } from 'vs/base/common/platform';\n\nexport class NodeSocket implements ISocket {\n\tpublic readonly socket: Socket;\n\n\tconstructor(socket: Socket) {\n\t\tthis.socket = socket;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => _listener(VSBuffer.wrap(buff));\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\tthis.socket.on('close', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', listener)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tthis.socket.on('end', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', listener)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\ttry {\n\t\t\tthis.socket.write(<Buffer>buffer.buffer);\n\t\t} catch (err) {\n\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (this.socket.bufferSize === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst finished = () => {\n\t\t\t\tthis.socket.off('close', finished);\n\t\t\t\tthis.socket.off('end', finished);\n\t\t\t\tthis.socket.off('error', finished);\n\t\t\t\tthis.socket.off('timeout', finished);\n\t\t\t\tthis.socket.off('drain', finished);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tthis.socket.on('close', finished);\n\t\t\tthis.socket.on('end', finished);\n\t\t\tthis.socket.on('error', finished);\n\t\t\tthis.socket.on('timeout', finished);\n\t\t\tthis.socket.on('drain', finished);\n\t\t});\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tmask: 0\n\t};\n\n\tconstructor(socket: NodeSocket) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.dispose();\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\treturn this.socket.onClose(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\theader.writeUInt8(0b10000010, 0);\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\t// const firstByte = peekHeader.readUInt8(0);\n\t\t\t\t// const finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tunmask(body, this._state.mask);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._onData.fire(body);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn this.socket.drain();\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/microsoft/vscode/issues/30624\nexport const XDG_RUNTIME_DIR = <string | undefined>process.env['XDG_RUNTIME_DIR'];\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nexport function createRandomIPCHandle(): string {\n\tconst randomSuffix = generateUuid();\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over tmpDir\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n\t} else {\n\t\tresult = join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nexport function createStaticIPCHandle(directoryPath: string, type: string, version: string): string {\n\tconst scope = createHash('md5').update(directoryPath).digest('hex');\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${version}-${type}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over user data path\n\t// unless portable\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR && !process.env['VSCODE_PORTABLE']) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-${scope.substr(0, 8)}-${version}-${type}.sock`);\n\t} else {\n\t\tresult = join(directoryPath, `${version}-${type}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nfunction validateIPCHandleLength(handle: string): void {\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number' && handle.length >= limit) {\n\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\tconsole.warn(`WARNING: IPC handle \"${handle}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket)),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport interface ITelemetryData {\n\treadonly from?: string;\n\treadonly target?: string;\n\t[key: string]: any;\n}\n\nexport type WorkbenchActionExecutedClassification = {\n\tid: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\tfrom: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n};\n\nexport type WorkbenchActionExecutedEvent = {\n\tid: string;\n\tfrom: string;\n};\n\nexport interface IAction extends IDisposable {\n\treadonly id: string;\n\tlabel: string;\n\ttooltip: string;\n\tclass: string | undefined;\n\tenabled: boolean;\n\tchecked: boolean;\n\trun(event?: any): Promise<any>;\n}\n\nexport interface IActionRunner extends IDisposable {\n\trun(action: IAction, context?: any): Promise<any>;\n\treadonly onDidRun: Event<IRunEvent>;\n\treadonly onBeforeRun: Event<IRunEvent>;\n}\n\nexport interface IActionViewItem extends IDisposable {\n\tactionRunner: IActionRunner;\n\tsetActionContext(context: any): void;\n\trender(element: any /* HTMLElement */): void;\n\tisEnabled(): boolean;\n\tfocus(fromRight?: boolean): void; // TODO@isidorn what is this?\n\tblur(): void;\n}\n\nexport interface IActionViewItemProvider {\n\t(action: IAction): IActionViewItem | undefined;\n}\n\nexport interface IActionChangeEvent {\n\treadonly label?: string;\n\treadonly tooltip?: string;\n\treadonly class?: string;\n\treadonly enabled?: boolean;\n\treadonly checked?: boolean;\n}\n\nexport class Action extends Disposable implements IAction {\n\n\tprotected _onDidChange = this._register(new Emitter<IActionChangeEvent>());\n\treadonly onDidChange: Event<IActionChangeEvent> = this._onDidChange.event;\n\n\tprotected readonly _id: string;\n\tprotected _label: string;\n\tprotected _tooltip: string | undefined;\n\tprotected _cssClass: string | undefined;\n\tprotected _enabled: boolean = true;\n\tprotected _checked: boolean = false;\n\tprotected readonly _actionCallback?: (event?: any) => Promise<any>;\n\n\tconstructor(id: string, label: string = '', cssClass: string = '', enabled: boolean = true, actionCallback?: (event?: any) => Promise<any>) {\n\t\tsuper();\n\t\tthis._id = id;\n\t\tthis._label = label;\n\t\tthis._cssClass = cssClass;\n\t\tthis._enabled = enabled;\n\t\tthis._actionCallback = actionCallback;\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tset label(value: string) {\n\t\tthis._setLabel(value);\n\t}\n\n\tprivate _setLabel(value: string): void {\n\t\tif (this._label !== value) {\n\t\t\tthis._label = value;\n\t\t\tthis._onDidChange.fire({ label: value });\n\t\t}\n\t}\n\n\tget tooltip(): string {\n\t\treturn this._tooltip || '';\n\t}\n\n\tset tooltip(value: string) {\n\t\tthis._setTooltip(value);\n\t}\n\n\tprotected _setTooltip(value: string): void {\n\t\tif (this._tooltip !== value) {\n\t\t\tthis._tooltip = value;\n\t\t\tthis._onDidChange.fire({ tooltip: value });\n\t\t}\n\t}\n\n\tget class(): string | undefined {\n\t\treturn this._cssClass;\n\t}\n\n\tset class(value: string | undefined) {\n\t\tthis._setClass(value);\n\t}\n\n\tprotected _setClass(value: string | undefined): void {\n\t\tif (this._cssClass !== value) {\n\t\t\tthis._cssClass = value;\n\t\t\tthis._onDidChange.fire({ class: value });\n\t\t}\n\t}\n\n\tget enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(value: boolean) {\n\t\tthis._setEnabled(value);\n\t}\n\n\tprotected _setEnabled(value: boolean): void {\n\t\tif (this._enabled !== value) {\n\t\t\tthis._enabled = value;\n\t\t\tthis._onDidChange.fire({ enabled: value });\n\t\t}\n\t}\n\n\tget checked(): boolean {\n\t\treturn this._checked;\n\t}\n\n\tset checked(value: boolean) {\n\t\tthis._setChecked(value);\n\t}\n\n\tprotected _setChecked(value: boolean): void {\n\t\tif (this._checked !== value) {\n\t\t\tthis._checked = value;\n\t\t\tthis._onDidChange.fire({ checked: value });\n\t\t}\n\t}\n\n\trun(event?: any, _data?: ITelemetryData): Promise<any> {\n\t\tif (this._actionCallback) {\n\t\t\treturn this._actionCallback(event);\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport interface IRunEvent {\n\treadonly action: IAction;\n\treadonly result?: any;\n\treadonly error?: any;\n}\n\nexport class ActionRunner extends Disposable implements IActionRunner {\n\n\tprivate _onBeforeRun = this._register(new Emitter<IRunEvent>());\n\treadonly onBeforeRun: Event<IRunEvent> = this._onBeforeRun.event;\n\n\tprivate _onDidRun = this._register(new Emitter<IRunEvent>());\n\treadonly onDidRun: Event<IRunEvent> = this._onDidRun.event;\n\n\tasync run(action: IAction, context?: any): Promise<any> {\n\t\tif (!action.enabled) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tthis._onBeforeRun.fire({ action: action });\n\n\t\ttry {\n\t\t\tconst result = await this.runAction(action, context);\n\t\t\tthis._onDidRun.fire({ action: action, result: result });\n\t\t} catch (error) {\n\t\t\tthis._onDidRun.fire({ action: action, error: error });\n\t\t}\n\t}\n\n\tprotected runAction(action: IAction, context?: any): Promise<any> {\n\t\tconst res = context ? action.run(context) : action.run();\n\t\treturn Promise.resolve(res);\n\t}\n}\n\nexport class RadioGroup extends Disposable {\n\n\tconstructor(readonly actions: Action[]) {\n\t\tsuper();\n\n\t\tfor (const action of actions) {\n\t\t\tthis._register(action.onDidChange(e => {\n\t\t\t\tif (e.checked && action.checked) {\n\t\t\t\t\tfor (const candidate of actions) {\n\t\t\t\t\t\tif (candidate !== action) {\n\t\t\t\t\t\t\tcandidate.checked = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n}\n\nexport class Separator extends Action {\n\n\tstatic readonly ID = 'vs.actions.separator';\n\n\tconstructor(label?: string) {\n\t\tsuper(Separator.ID, label, label ? 'separator text' : 'separator');\n\t\tthis.checked = false;\n\t\tthis.enabled = false;\n\t}\n}\n\nexport class ActionWithMenuAction extends Action {\n\n\tget actions(): IAction[] {\n\t\treturn this._actions;\n\t}\n\n\tconstructor(id: string, private _actions: IAction[], label?: string, cssClass?: string, enabled?: boolean, actionCallback?: (event?: any) => Promise<any>) {\n\t\tsuper(id, label, cssClass, enabled, actionCallback);\n\t}\n}\n\nexport class SubmenuAction extends Action {\n\n\tget actions(): IAction[] {\n\t\treturn this._actions;\n\t}\n\n\tconstructor(id: string, label: string, private _actions: IAction[], cssClass?: string) {\n\t\tsuper(id, label, cssClass, !!_actions?.length);\n\t}\n}\n\nexport class EmptySubmenuAction extends Action {\n\tstatic readonly ID = 'vs.actions.empty';\n\tconstructor() {\n\t\tsuper(EmptySubmenuAction.ID, nls.localize('submenu.empty', '(empty)'), undefined, false);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + String(date.getMonth() + 1).padStart(2, '0') +\n\t\t'-' + String(date.getDate()).padStart(2, '0') +\n\t\t'T' + String(date.getHours()).padStart(2, '0') +\n\t\t':' + String(date.getMinutes()).padStart(2, '0') +\n\t\t':' + String(date.getSeconds()).padStart(2, '0') +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Extracted from json.ts to keep json nls free.\n */\nimport { localize } from 'vs/nls';\nimport { ParseErrorCode } from './json';\n\nexport function getParseErrorMessage(errorCode: ParseErrorCode): string {\n\tswitch (errorCode) {\n\t\tcase ParseErrorCode.InvalidSymbol: return localize('error.invalidSymbol', 'Invalid symbol');\n\t\tcase ParseErrorCode.InvalidNumberFormat: return localize('error.invalidNumberFormat', 'Invalid number format');\n\t\tcase ParseErrorCode.PropertyNameExpected: return localize('error.propertyNameExpected', 'Property name expected');\n\t\tcase ParseErrorCode.ValueExpected: return localize('error.valueExpected', 'Value expected');\n\t\tcase ParseErrorCode.ColonExpected: return localize('error.colonExpected', 'Colon expected');\n\t\tcase ParseErrorCode.CommaExpected: return localize('error.commaExpected', 'Comma expected');\n\t\tcase ParseErrorCode.CloseBraceExpected: return localize('error.closeBraceExpected', 'Closing brace expected');\n\t\tcase ParseErrorCode.CloseBracketExpected: return localize('error.closeBracketExpected', 'Closing bracket expected');\n\t\tcase ParseErrorCode.EndOfFileExpected: return localize('error.endOfFileExpected', 'End of file expected');\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { FileAccess } from 'vs/base/common/network';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = FileAccess.asFileUri('vs/base/node/terminateProcess.sh', require).fsPath;\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(environment: Platform.IProcessEnvironment = process.env as Platform.IProcessEnvironment): string {\n\treturn environment['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve: ValueCallback<number> | undefined;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>(resolve => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn resolve(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn resolve(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn resolve(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory());\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { isMacintosh } from 'vs/base/common/platform';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (isMacintosh && forkOpts.env) {\n\t\t\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\t\t\tdelete forkOpts.env['DYLD_LIBRARY_PATH'];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IReloadSessionEvent, ICloseSessionEvent, IAttachSessionEvent, ILogToSessionEvent, ITerminateSessionEvent, IExtensionHostDebugService, IOpenExtensionWindowResult } from 'vs/platform/debug/common/extensionHostDebug';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onLogToEmitter = new Emitter<ILogToSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'log':\n\t\t\t\treturn Promise.resolve(this._onLogToEmitter.fire({ sessionId: arg[0], log: arg[1] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'log':\n\t\t\t\treturn this._onLogToEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tlogToSession(sessionId: string, log: IRemoteConsoleLog): void {\n\t\tthis.channel.call('log', [sessionId, log]);\n\t}\n\n\tget onLogToSession(): Event<ILogToSessionEvent> {\n\t\treturn this.channel.listen('log');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], env: IProcessEnvironment, debugRenderer: boolean): Promise<IOpenExtensionWindowResult> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, env, debugRenderer]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionManagementService, ILocalExtension, InstallExtensionEvent, DidInstallExtensionEvent, IGalleryExtension, DidUninstallExtensionEvent, IExtensionIdentifier, IGalleryMetadata, IReportedExtension, IExtensionTipsService, InstallOptions, UninstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer, DefaultURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtension = Event.buffer(service.onDidInstallExtension, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtension': return Event.map(this.onDidInstallExtension, i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local }));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'canInstall': return this.service.canInstall(args[0]);\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0], args[1]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'updateExtensionScope': return this.service.updateExtensionScope(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsReport': return this.service.getExtensionsReport();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension = this._onUninstallExtension.event;\n\n\tprivate readonly _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\treadonly onDidUninstallExtension = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t) {\n\t\tsuper();\n\t\tthis._register(this.channel.listen<InstallExtensionEvent>('onInstallExtension')(e => this._onInstallExtension.fire(e)));\n\t\tthis._register(this.channel.listen<DidInstallExtensionEvent>('onDidInstallExtension')(e => this._onDidInstallExtension.fire({ ...e, local: e.local ? transformIncomingExtension(e.local, null) : e.local })));\n\t\tthis._register(this.channel.listen<IExtensionIdentifier>('onUninstallExtension')(e => this._onUninstallExtension.fire(e)));\n\t\tthis._register(this.channel.listen<DidUninstallExtensionEvent>('onDidUninstallExtension')(e => this._onDidUninstallExtension.fire(e)));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation]));\n\t}\n\n\tinstall(vsix: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension, installOptions])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, options]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateExtensionScope', [local, isMachineScoped]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsReport'));\n\t}\n}\n\nexport class ExtensionTipsChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionTipsService) {\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getConfigBasedTips': return this.service.getConfigBasedTips(URI.revive(args[0]));\n\t\t\tcase 'getImportantExecutableBasedTips': return this.service.getImportantExecutableBasedTips();\n\t\t\tcase 'getOtherExecutableBasedTips': return this.service.getOtherExecutableBasedTips();\n\t\t\tcase 'getAllWorkspacesTips': return this.service.getAllWorkspacesTips();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string) => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createChannelSender, getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: IWatcherService | undefined;\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tthis.service = createChannelSender<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.setFolders(this.folders);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (!this.isDisposed && this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createChannelSender, getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherOptions, IWatcherService } from 'vs/platform/files/node/watcher/unix/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\tprivate service: IWatcherService | undefined;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate watcherOptions: IWatcherOptions = {}\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (chokidar)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/unix/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tthis.service = createChannelSender<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\t\tthis.service.init({ ...this.watcherOptions, verboseLogging: this.verboseLogging });\n\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.service.setRoots(this.folders);\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (chokidar)] ${message}` });\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport * as decoder from 'vs/base/node/decoder';\nimport * as glob from 'vs/base/common/glob';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class OutOfProcessWin32FolderWatcher {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate static changeTypeMap: FileChangeType[] = [FileChangeType.UPDATED, FileChangeType.ADDED, FileChangeType.DELETED];\n\n\tprivate ignored: glob.ParsedPattern[];\n\n\tprivate handle: cp.ChildProcess | undefined;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate watchedFolder: string,\n\t\tignored: string[],\n\t\tprivate eventCallback: (events: IDiskFileChange[]) => void,\n\t\tprivate logCallback: (message: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.restartCounter = 0;\n\n\t\tif (Array.isArray(ignored)) {\n\t\t\tthis.ignored = ignored.map(i => glob.parse(i));\n\t\t} else {\n\t\t\tthis.ignored = [];\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching: ${watchedFolder}`);\n\t\t}\n\n\t\tthis.startWatcher();\n\t}\n\n\tprivate startWatcher(): void {\n\t\tconst args = [this.watchedFolder];\n\t\tif (this.verboseLogging) {\n\t\t\targs.push('-verbose');\n\t\t}\n\n\t\tthis.handle = cp.spawn(FileAccess.asFileUri('vs/platform/files/node/watcher/win32/CodeHelper.exe', require).fsPath, args);\n\n\t\tconst stdoutLineDecoder = new decoder.LineDecoder();\n\n\t\t// Events over stdout\n\t\tthis.handle.stdout!.on('data', (data: Buffer) => {\n\n\t\t\t// Collect raw events from output\n\t\t\tconst rawEvents: IDiskFileChange[] = [];\n\t\t\tstdoutLineDecoder.write(data).forEach((line) => {\n\t\t\t\tconst eventParts = line.split('|');\n\t\t\t\tif (eventParts.length === 2) {\n\t\t\t\t\tconst changeType = Number(eventParts[0]);\n\t\t\t\t\tconst absolutePath = eventParts[1];\n\n\t\t\t\t\t// File Change Event (0 Changed, 1 Created, 2 Deleted)\n\t\t\t\t\tif (changeType >= 0 && changeType < 3) {\n\n\t\t\t\t\t\t// Support ignores\n\t\t\t\t\t\tif (this.ignored && this.ignored.some(ignore => ignore(absolutePath))) {\n\t\t\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\t\t\tthis.log(absolutePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise record as event\n\t\t\t\t\t\trawEvents.push({\n\t\t\t\t\t\t\ttype: OutOfProcessWin32FolderWatcher.changeTypeMap[changeType],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// 3 Logging\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.log(eventParts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trigger processing of events through the delayer to batch them up properly\n\t\t\tif (rawEvents.length > 0) {\n\t\t\t\tthis.eventCallback(rawEvents);\n\t\t\t}\n\t\t});\n\n\t\t// Errors\n\t\tthis.handle.on('error', (error: Error) => this.onError(error));\n\t\tthis.handle.stderr!.on('data', (data: Buffer) => this.onError(data));\n\n\t\t// Exit\n\t\tthis.handle.on('exit', (code: number, signal: string) => this.onExit(code, signal));\n\t}\n\n\tprivate onError(error: Error | Buffer): void {\n\t\tthis.error('process error: ' + error.toString());\n\t}\n\n\tprivate onExit(code: number, signal: string): void {\n\t\tif (this.handle) { // exit while not yet being disposed is unexpected!\n\t\t\tthis.error(`terminated unexpectedly (code: ${code}, signal: ${signal})`);\n\n\t\t\tif (this.restartCounter <= OutOfProcessWin32FolderWatcher.MAX_RESTARTS) {\n\t\t\t\tthis.error('is restarted again...');\n\t\t\t\tthis.restartCounter++;\n\t\t\t\tthis.startWatcher(); // restart\n\t\t\t} else {\n\t\t\t\tthis.error('Watcher failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.logCallback({ type: 'error', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tprivate log(message: string) {\n\t\tthis.logCallback({ type: 'trace', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tdispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.kill();\n\t\t\tthis.handle = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { OutOfProcessWin32FolderWatcher } from 'vs/platform/files/node/watcher/win32/csharpWatcherService';\nimport { posix } from 'vs/base/common/path';\nimport { rtrim } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class FileWatcher implements IDisposable {\n\n\tprivate folder: { path: string, excludes: string[] };\n\tprivate service: OutOfProcessWin32FolderWatcher | undefined = undefined;\n\n\tconstructor(\n\t\tfolders: { path: string, excludes: string[] }[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.folder = folders[0];\n\n\t\tif (this.folder.path.indexOf('\\\\\\\\') === 0 && this.folder.path.endsWith(posix.sep)) {\n\t\t\t// for some weird reason, node adds a trailing slash to UNC paths\n\t\t\t// we never ever want trailing slashes as our base path unless\n\t\t\t// someone opens root (\"/\").\n\t\t\t// See also https://github.com/nodejs/io.js/issues/1765\n\t\t\tthis.folder.path = rtrim(this.folder.path, posix.sep);\n\t\t}\n\n\t\tthis.service = this.startWatching();\n\t}\n\n\tprivate get isDisposed(): boolean {\n\t\treturn !this.service;\n\t}\n\n\tprivate startWatching(): OutOfProcessWin32FolderWatcher {\n\t\treturn new OutOfProcessWin32FolderWatcher(\n\t\t\tthis.folder.path,\n\t\t\tthis.folder.excludes,\n\t\t\tevents => this.onFileEvents(events),\n\t\t\tmessage => this.onLogMessage(message),\n\t\t\tthis.verboseLogging\n\t\t);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = this.startWatching();\n\t\t}\n\t}\n\n\tprivate onFileEvents(events: IDiskFileChange[]): void {\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Emit through event emitter\n\t\tif (events.length > 0) {\n\t\t\tthis.onDidFilesChange(events);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tfor (let [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { userAgent, isMacintosh, isLinux, isWindows, isWeb } from 'vs/base/common/platform';\n\nlet _userAgent = userAgent || '';\nconst STATIC_VALUES = new Map<string, boolean>();\nSTATIC_VALUES.set('false', false);\nSTATIC_VALUES.set('true', true);\nSTATIC_VALUES.set('isMac', isMacintosh);\nSTATIC_VALUES.set('isLinux', isLinux);\nSTATIC_VALUES.set('isWindows', isWindows);\nSTATIC_VALUES.set('isWeb', isWeb);\nSTATIC_VALUES.set('isMacNative', isMacintosh && !isWeb);\nSTATIC_VALUES.set('isEdge', _userAgent.indexOf('Edg/') >= 0);\nSTATIC_VALUES.set('isFirefox', _userAgent.indexOf('Firefox') >= 0);\nSTATIC_VALUES.set('isChrome', _userAgent.indexOf('Chrome') >= 0);\nSTATIC_VALUES.set('isSafari', _userAgent.indexOf('Safari') >= 0);\nSTATIC_VALUES.set('isIPad', _userAgent.indexOf('iPad') >= 0);\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n\tGreater = 12,\n\tGreaterEquals = 13,\n\tSmaller = 14,\n\tSmallerEquals = 15,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapGreater(key: string, value: any): ContextKeyExpression;\n\tmapGreaterEquals(key: string, value: any): ContextKeyExpression;\n\tmapSmaller(key: string, value: any): ContextKeyExpression;\n\tmapSmallerEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr\n\t| ContextKeyNotInExpr | ContextKeyGreaterExpr | ContextKeyGreaterEqualsExpr\n\t| ContextKeySmallerExpr | ContextKeySmallerEqualsExpr\n);\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr);\n\t}\n\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr);\n\t}\n\n\tpublic static greater(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t}\n\n\tpublic static less(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(key, value);\n\t}\n\n\tpublic static deserialize(serialized: string | null | undefined, strict: boolean = false): ContextKeyExpression | undefined {\n\t\tif (!serialized) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._deserializeOrExpression(serialized, strict);\n\t}\n\n\tprivate static _deserializeOrExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('||');\n\t\treturn ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)));\n\t}\n\n\tprivate static _deserializeAndExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('&&');\n\t\treturn ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)));\n\t}\n\n\tprivate static _deserializeOne(serializedOne: string, strict: boolean): ContextKeyExpression {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tlet pieces = serializedOne.split('!=');\n\t\t\treturn ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tlet pieces = serializedOne.split('==');\n\t\t\treturn ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('=~') >= 0) {\n\t\t\tlet pieces = serializedOne.split('=~');\n\t\t\treturn ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf(' in ') >= 0) {\n\t\t\tlet pieces = serializedOne.split(' in ');\n\t\t\treturn ContextKeyInExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+>=[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('>=');\n\t\t\treturn ContextKeyGreaterEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+>[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('>');\n\t\t\treturn ContextKeyGreaterExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+<=[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('<=');\n\t\t\treturn ContextKeySmallerEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+<[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('<');\n\t\t\treturn ContextKeySmallerExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn ContextKeyDefinedExpr.create(serializedOne);\n\t}\n\n\tprivate static _deserializeValue(serializedValue: string, strict: boolean): any {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n\n\tprivate static _deserializeRegexValue(serializedValue: string, strict: boolean): RegExp | null {\n\n\t\tif (isFalsyOrWhitespace(serializedValue)) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error('missing regexp-value for =~-expression');\n\t\t\t} else {\n\t\t\t\tconsole.warn('missing regexp-value for =~-expression');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet start = serializedValue.indexOf('/');\n\t\tlet end = serializedValue.lastIndexOf('/');\n\t\tif (start === end || start < 0 /* || to < 0 */) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = serializedValue.slice(start + 1, end);\n\t\tlet caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\ttry {\n\t\t\treturn new RegExp(value, caseIgnoreFlag);\n\t\t} catch (e) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string): ContextKeyExpression {\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\treturn staticValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(protected readonly key: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(this.key);\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key) : ContextKeyNotExpr.create(key));\n\t\t}\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\tconst trueValue = staticValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} == '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\n\tprivate constructor(private readonly key: string, private readonly valueKey: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.valueKey, other.key, other.valueKey);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn (source.indexOf(item) >= 0);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotInExpr.create(this);\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyInExpr): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate constructor(private readonly _actual: ContextKeyInExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotInExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key);\n\t\t}\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\tconst falseValue = staticValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} != '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string): ContextKeyExpression {\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\treturn (staticValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(private readonly key: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!${this.key}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(this.key);\n\t}\n}\n\nexport class ContextKeyGreaterExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\treturn new ContextKeyGreaterExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Greater;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (parseFloat(<any>context.getValue(this.key)) > parseFloat(this.value));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} > ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreater(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeySmallerEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyGreaterEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\treturn new ContextKeyGreaterEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.GreaterEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (parseFloat(<any>context.getValue(this.key)) >= parseFloat(this.value));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} >= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreaterEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeySmallerExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\treturn new ContextKeySmallerExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Smaller;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (parseFloat(<any>context.getValue(this.key)) < parseFloat(this.value));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} < ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmaller(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyGreaterEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeySmallerEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\treturn new ContextKeySmallerEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.SmallerEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (parseFloat(<any>context.getValue(this.key)) <= parseFloat(this.value));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} <= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmallerEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\n\tprivate constructor(private readonly key: string, private readonly regexp: RegExp | null) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tlet value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotRegexExpr.create(this);\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\nexport class ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(public readonly expr: ContextKeyExpression[]) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement]))\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tlet result: ContextKeyExpression[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(expr.negate());\n\t\t}\n\t\treturn ContextKeyOrExpr.create(result)!;\n\t}\n}\n\nexport class ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\tconst expr = ContextKeyOrExpr._normalizeArr(_expr);\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(public readonly expr: ContextKeyExpression[]) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression[] {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn [ContextKeyTrueExpr.INSTANCE];\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn [ContextKeyFalseExpr.INSTANCE];\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\treturn expr;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tlet result: ContextKeyExpression[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(expr.negate());\n\t\t}\n\n\t\tconst terminals = (node: ContextKeyExpression) => {\n\t\t\tif (node.type === ContextKeyExprType.Or) {\n\t\t\t\treturn node.expr;\n\t\t\t}\n\t\t\treturn [node];\n\t\t};\n\n\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t// We always take the first 2 AND pairs and distribute them\n\t\twhile (result.length > 1) {\n\t\t\tconst LEFT = result.shift()!;\n\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\tfor (const left of terminals(LEFT)) {\n\t\t\t\tfor (const right of terminals(RIGHT)) {\n\t\t\t\t\tall.push(ContextKeyExpr.and(left, right)!);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.unshift(ContextKeyExpr.or(...all)!);\n\t\t}\n\n\t\treturn result[0];\n\t}\n}\n\nexport class RawContextKey<T> extends ContextKeyDefinedExpr {\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined) {\n\t\tsuper(key);\n\t\tthis._defaultValue = defaultValue;\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn ContextKeyExpr.not(this.key);\n\t}\n\n\tpublic isEqualTo(value: string): ContextKeyExpression {\n\t\treturn ContextKeyExpr.equals(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: string): ContextKeyExpression {\n\t\treturn ContextKeyExpr.notEquals(this.key, value);\n\t}\n}\n\nexport interface IContext {\n\tgetValue<T>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n}\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\tdispose(): void;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target?: IContextKeyServiceTarget): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService: IContextKeyService): void;\n}\n\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\n\nfunction cmp1(key1: string, key2: string): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nfunction cmp2(key1: string, value1: any, key2: string, value2: any): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\tif (value1 < value2) {\n\t\treturn -1;\n\t}\n\tif (value1 > value2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\treadonly _serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\nexport const INativeEnvironmentService = createDecorator<INativeEnvironmentService>('nativeEnvironmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\n/**\n * A basic environment service that can be used in various processes,\n * such as main, renderer and shared process. Use subclasses of this\n * service for specific environment.\n */\nexport interface IEnvironmentService {\n\n\treadonly _serviceBrand: undefined;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// --- data paths\n\tuntitledWorkspacesHome: URI;\n\tglobalStorageHome: URI;\n\tworkspaceStorageHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncHome: URI;\n\tuserDataSyncLogResource: URI;\n\tsync: 'on' | 'off' | undefined;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionTestsLocationURI?: URI;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- telemetry\n\tdisableTelemetry: boolean;\n\ttelemetryLogResource: URI;\n\tserviceMachineIdResource: URI;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n\n/**\n * A subclass of the `IEnvironmentService` to be used only in native\n * environments (Windows, Linux, macOS) but not e.g. web.\n */\nexport interface INativeEnvironmentService extends IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- CLI Arguments\n\targs: NativeParsedArgs;\n\n\t// --- paths\n\tappRoot: string;\n\tuserHome: URI;\n\tappSettingsHome: URI;\n\ttmpDir: URI;\n\tuserDataPath: string;\n\tmachineSettingsResource: URI;\n\tinstallSourcePath: string;\n\n\t// --- IPC Handles\n\tsharedIPCHandle: string;\n\n\t// --- Extensions\n\textensionsPath: string;\n\textensionsDownloadPath: string;\n\tbuiltinExtensionsPath: string;\n\textraExtensionPaths: string[]\n\textraBuiltinExtensionPaths: string[]\n\n\t// --- Smoke test support\n\tdriverHandle?: string;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname, basename } from 'vs/base/common/path';\nimport { readdir, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: NodeJS.Timeout | undefined = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\treaddir(logsRoot).then(children => {\n\t\t\t\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\t\treturn Promise.all(toDelete.map(name => rimraf(join(logsRoot, name))));\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 10 * 1000);\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (handle) {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = undefined;\n\t\t\t}\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n\twebExtension?: boolean;\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionIdentifierWithVersion extends IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n\tversion: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassetUri: URI;\n\tassetTypes: string[];\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n\twebResource?: URI;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\tisMachineScoped: boolean;\n\tpublisherId: string | null;\n\tpublisherDisplayName: string | null;\n}\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\nexport interface IExtensionGalleryService {\n\treadonly _serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tgetExtensions(ids: string[], token: CancellationToken): Promise<IGalleryExtension[]>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_NOT_SUPPORTED = 'notsupported';\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nexport type InstallOptions = { isBuiltin?: boolean, isMachineScoped?: boolean, donotIncludePackAndDependencies?: boolean };\nexport type UninstallOptions = { donotIncludePack?: boolean, donotCheckDependents?: boolean };\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport interface IExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI, options?: InstallOptions): Promise<ILocalExtension>;\n\tcanInstall(extension: IGalleryExtension): Promise<boolean>;\n\tinstallFromGallery(extension: IGalleryExtension, options?: InstallOptions): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport type IConfigBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly configName: string,\n\treadonly important: boolean,\n};\n\nexport type IExecutableBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly exeName: string,\n\treadonly exeFriendlyName: string,\n\treadonly windowsPath?: string,\n};\n\nexport type IWorkspaceTips = { readonly remoteSet: string[]; readonly recommendations: string[]; };\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('IExtensionTipsService');\nexport interface IExtensionTipsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]>;\n\tgetImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]>;\n}\n\n\nexport const DefaultIconPath = FileAccess.asBrowserUri('./media/defaultIcon.png', require).toString(true);\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsLocalizedLabel = { value: ExtensionsLabel, original: 'Extensions' };\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\nexport const PreferencesLocalizedLabel = { value: PreferencesLabel, original: 'Preferences' };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IAuthenticationContribution {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n\tauthentication?: IAuthenticationContribution[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t'Azure',\n\t'Data Science',\n\t'Debuggers',\n\t'Extension Packs',\n\t'Formatters',\n\t'Keymaps',\n\t'Language Packs',\n\t'Linters',\n\t'Machine Learning',\n\t'Notebooks',\n\t'Programming Languages',\n\t'SCM Providers',\n\t'Snippets',\n\t'Themes',\n\t'Testing',\n\t'Visualization',\n\t'Other',\n];\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly browser?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly isBuiltin: boolean;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUserBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n\nexport function isAuthenticaionProviderExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.authentication ? manifest.contributes.authentication.length > 0 : false;\n}\n\nexport interface IScannedExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly location: URI;\n\treadonly type: ExtensionType;\n\treadonly packageJSON: IExtensionManifest;\n\treadonly packageNLS?: any;\n\treadonly packageNLSUrl?: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\nexport interface ITranslatedScannedExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly location: URI;\n\treadonly type: ExtensionType;\n\treadonly packageJSON: IExtensionManifest;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\nexport const IBuiltinExtensionsScannerService = createDecorator<IBuiltinExtensionsScannerService>('IBuiltinExtensionsScannerService');\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IScannedExtension[]>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension, IExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion implements IExtensionIdentifierWithVersion {\n\n\treadonly id: string;\n\treadonly uuid?: string;\n\n\tconstructor(\n\t\tidentifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) {\n\t\tthis.id = identifier.id;\n\t\tthis.uuid = identifier.uuid;\n\t}\n\n\tkey(): string {\n\t\treturn `${this.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this, o) && this.version === o.version;\n\t}\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.rimraf(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isNumber, isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilies for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }>\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<Error | true>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\t/**\n\t * @deprecated use the `contains()` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly changes: readonly IFileChange[];\n\n\tprivate readonly added: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly updated: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly deleted: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\n\tconstructor(changes: readonly IFileChange[], private readonly ignorePathCasing: boolean) {\n\t\tthis.changes = changes;\n\n\t\tfor (const change of changes) {\n\t\t\tswitch (change.type) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tif (!this.added) {\n\t\t\t\t\t\tthis.added = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.added.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tif (!this.updated) {\n\t\t\t\t\t\tthis.updated = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.updated.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tif (!this.deleted) {\n\t\t\t\t\t\tthis.deleted = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.deleted.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted?.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn !!this.added;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn !!this.deleted;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn !!this.updated;\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\tconst changes: IFileChange[] = [];\n\n\t\tconst eventsForType = type === FileChangeType.ADDED ? this.added : type === FileChangeType.UPDATED ? this.updated : this.deleted;\n\t\tif (eventsForType) {\n\t\t\tfor (const [, change] of eventsForType) {\n\t\t\t\tchanges.push(change);\n\t\t\t}\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tfilter(filterFn: (change: IFileChange) => boolean): FileChangesEvent {\n\t\treturn new FileChangesEvent(this.changes.filter(change => filterFn(change)), this.ignorePathCasing);\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = ByteSize.KB * ByteSize.KB;\n\tstatic readonly GB = ByteSize.MB * ByteSize.KB;\n\tstatic readonly TB = ByteSize.GB * ByteSize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < ByteSize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < ByteSize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, createFileSystemProviderError, FileSystemProviderErrorCode, ensureFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { canceled } from 'vs/base/common/errors';\nimport { IErrorTransformer, IDataTransformer, WriteableStream } from 'vs/base/common/stream';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n\n\t/**\n\t * Allows to massage any possibly error that happens during reading.\n\t */\n\terrorTransformer?: IErrorTransformer;\n}\n\n/**\n * A helper to read a file from a provider with open/read/close capability into a stream.\n */\nexport async function readFileIntoStream<T>(\n\tprovider: IFileSystemProviderWithOpenReadWriteCloseCapability,\n\tresource: URI,\n\ttarget: WriteableStream<T>,\n\ttransformer: IDataTransformer<VSBuffer, T>,\n\toptions: ICreateReadStreamOptions,\n\ttoken: CancellationToken\n): Promise<void> {\n\tlet error: Error | undefined = undefined;\n\n\ttry {\n\t\tawait doReadFileIntoStream(provider, resource, target, transformer, options, token);\n\t} catch (err) {\n\t\terror = err;\n\t} finally {\n\t\tif (error && options.errorTransformer) {\n\t\t\terror = options.errorTransformer(error);\n\t\t}\n\n\t\ttarget.end(error);\n\t}\n}\n\nasync function doReadFileIntoStream<T>(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, target: WriteableStream<T>, transformer: IDataTransformer<VSBuffer, T>, options: ICreateReadStreamOptions, token: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\ttry {\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tawait target.write(transformer(buffer));\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\ttarget.write(transformer(buffer.slice(0, lastChunkLength)));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token: CancellationToken): boolean {\n\tif (token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow it to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { statLink } from 'vs/base/node/pfs';\nimport { realpath } from 'vs/base/node/extpath';\nimport { watchFolder, watchFile, CHANGE_BUFFER_DELAY } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { join, basename } from 'vs/base/common/path';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(async () => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event normalization\n\t\t\tconst normalizedFileChanges = normalizeFileChanges(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tnormalizedFileChanges.forEach(event => {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (normalizedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(normalizedFileChanges);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.toString();\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// Repeat the check for this still being a service sync descriptor. That's because\n\t\t\t\t// instantiating a dependency might have side-effect and recursively trigger instantiation\n\t\t\t\t// so that some dependencies are now fullfilled already.\n\t\t\t\tconst instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\t}\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.value;\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.value[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport const ILabelService = createDecorator<ILabelService>('labelService');\n\nexport interface ILabelService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Gets the human readable label for a uri.\n\t * If relative is passed returns a label relative to the workspace root that the uri belongs to.\n\t * If noPrefix is passed does not tildify the label and also does not prepand the root name for relative labels in a multi root scenario.\n\t */\n\tgetUriLabel(resource: URI, options?: { relative?: boolean, noPrefix?: boolean, endWithSeparator?: boolean }): string;\n\tgetUriBasenameLabel(resource: URI): string;\n\tgetWorkspaceLabel(workspace: (IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IWorkspace), options?: { verbose: boolean }): string;\n\tgetHostLabel(scheme: string, authority?: string): string;\n\tgetSeparator(scheme: string, authority?: string): '/' | '\\\\';\n\n\tregisterFormatter(formatter: ResourceLabelFormatter): IDisposable;\n\tonDidChangeFormatters: Event<IFormatterChangeEvent>;\n}\n\nexport interface IFormatterChangeEvent {\n\tscheme: string;\n}\n\nexport interface ResourceLabelFormatter {\n\tscheme: string;\n\tauthority?: string;\n\tpriority?: boolean;\n\tformatting: ResourceLabelFormatting;\n}\n\nexport interface ResourceLabelFormatting {\n\tlabel: string; // myLabel:/${path}\n\tseparator: '/' | '\\\\' | '';\n\ttildify?: boolean;\n\tnormalizeDriveLetter?: boolean;\n\tworkspaceSuffix?: string;\n\tauthorityPrefix?: string;\n\tstripPathStartingSeparator?: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { LoggerChannelClient } from 'vs/platform/log/common/logIpc';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\tgetLogger(file: URI): ILogger;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class LogServiceAdapter extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly adapter: { consoleLog: (type: string, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.consoleLog('trace', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.consoleLog('debug', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.consoleLog('info', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.consoleLog('warn', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.consoleLog('error', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.consoleLog('critical', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogInMainService extends LogServiceAdapter implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(client: LoggerChannelClient, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper({ consoleLog: (type, args) => client.consoleLog(type, args) }, logLevel);\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogService>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logService.flush();\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n\t\tif (logLevel !== undefined) {\n\t\t\treturn logLevel;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n\nexport function parseLogLevel(logLevel: string): LogLevel | undefined {\n\tswitch (logLevel) {\n\t\tcase 'trace':\n\t\t\treturn LogLevel.Trace;\n\t\tcase 'debug':\n\t\t\treturn LogLevel.Debug;\n\t\tcase 'info':\n\t\t\treturn LogLevel.Info;\n\t\tcase 'warn':\n\t\t\treturn LogLevel.Warning;\n\t\tcase 'error':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'critical':\n\t\t\treturn LogLevel.Critical;\n\t\tcase 'off':\n\t\t\treturn LogLevel.Off;\n\t}\n\treturn undefined;\n}\n\nexport function LogLevelToString(logLevel: LogLevel): string {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tcase LogLevel.Critical: return 'critical';\n\t\tcase LogLevel.Off: return 'off';\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { rename } from 'vs/base/node/pfs';\nimport { IFileService, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { IExtensionGalleryService, IGalleryExtension, InstallOperation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { ExtensionIdentifierWithVersion, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst ExtensionIdVersionRegex = /^([^.]+\\..+)-(\\d+\\.\\d+\\.\\d+)$/;\n\nexport class ExtensionsDownloader extends Disposable {\n\n\tprivate readonly extensionsDownloadDir: URI;\n\tprivate readonly cache: number;\n\tprivate readonly cleanUpPromise: Promise<void>;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsDownloadDir = URI.file(environmentService.extensionsDownloadPath);\n\t\tthis.cache = 20; // Cache 20 downloads\n\t\tthis.cleanUpPromise = this.cleanUp();\n\t}\n\n\tasync downloadExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<URI> {\n\t\tawait this.cleanUpPromise;\n\t\tconst vsixName = this.getName(extension);\n\t\tconst location = joinPath(this.extensionsDownloadDir, vsixName);\n\n\t\t// Download only if vsix does not exist\n\t\tif (!await this.fileService.exists(location)) {\n\t\t\t// Download to temporary location first only if vsix does not exist\n\t\t\tconst tempLocation = joinPath(this.extensionsDownloadDir, `.${vsixName}`);\n\t\t\tif (!await this.fileService.exists(tempLocation)) {\n\t\t\t\tawait this.extensionGalleryService.download(extension, tempLocation, operation);\n\t\t\t}\n\n\t\t\t// Rename temp location to original\n\t\t\tawait this.rename(tempLocation, location, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t}\n\n\t\treturn location;\n\t}\n\n\tasync delete(location: URI): Promise<void> {\n\t\t// noop as caching is enabled always\n\t}\n\n\tprivate async rename(from: URI, to: URI, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait rename(from.fsPath, to.fsPath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${from} to ${to} with 'EPERM' error. Trying again...`);\n\t\t\t\treturn this.rename(from, to, retryUntil);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await this.fileService.exists(this.extensionsDownloadDir))) {\n\t\t\t\tthis.logService.trace('Extension VSIX downlads cache dir does not exist');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst folderStat = await this.fileService.resolve(this.extensionsDownloadDir, { resolveMetadata: true });\n\t\t\tif (folderStat.children) {\n\t\t\t\tconst toDelete: URI[] = [];\n\t\t\t\tconst all: [ExtensionIdentifierWithVersion, IFileStatWithMetadata][] = [];\n\t\t\t\tfor (const stat of folderStat.children) {\n\t\t\t\t\tconst extension = this.parse(stat.name);\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tall.push([extension, stat]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst byExtension = groupByExtension(all, ([extension]) => extension);\n\t\t\t\tconst distinct: IFileStatWithMetadata[] = [];\n\t\t\t\tfor (const p of byExtension) {\n\t\t\t\t\tp.sort((a, b) => semver.rcompare(a[0].version, b[0].version));\n\t\t\t\t\ttoDelete.push(...p.slice(1).map(e => e[1].resource)); // Delete outdated extensions\n\t\t\t\t\tdistinct.push(p[0][1]);\n\t\t\t\t}\n\t\t\t\tdistinct.sort((a, b) => a.mtime - b.mtime); // sort by modified time\n\t\t\t\ttoDelete.push(...distinct.slice(0, Math.max(0, distinct.length - this.cache)).map(s => s.resource)); // Retain minimum cacheSize and delete the rest\n\t\t\t\tawait Promise.all(toDelete.map(resource => {\n\t\t\t\t\tthis.logService.trace('Deleting vsix from cache', resource.path);\n\t\t\t\t\treturn this.fileService.del(resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getName(extension: IGalleryExtension): string {\n\t\treturn this.cache ? new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key().toLowerCase() : generateUuid();\n\t}\n\n\tprivate parse(name: string): ExtensionIdentifierWithVersion | null {\n\t\tconst matches = ExtensionIdVersionRegex.exec(name);\n\t\treturn matches && matches[1] && matches[2] ? new ExtensionIdentifierWithVersion({ id: matches[1] }, matches[2]) : null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { rimraf } from 'vs/base/node/pfs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\t@IEnvironmentService private environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome.fsPath, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFileService, IResolveFileOptions, FileChangesEvent, FileOperationEvent, IFileSystemProviderRegistrationEvent, IFileSystemProvider, IFileStat, IResolveFileResult, ICreateFileOptions, IFileSystemProviderActivationEvent, FileOperationError, FileOperationResult, FileOperation, FileSystemProviderCapabilities, FileType, toFileSystemProviderErrorCode, FileSystemProviderErrorCode, IStat, IFileStatWithMetadata, IResolveMetadataFileOptions, etag, hasReadWriteCapability, hasFileFolderCopyCapability, hasOpenReadWriteCloseCapability, toFileOperationResult, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IResolveFileResultWithMetadata, IWatchOptions, IWriteFileOptions, IReadFileOptions, IFileStreamContent, IFileContent, ETAG_DISABLED, hasFileReadStreamCapability, IFileSystemProviderWithFileReadStreamCapability, ensureFileSystemProviderError, IFileSystemProviderCapabilitiesChangeEvent } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isAbsolutePath, dirname, basename, joinPath, IExtUri, extUri, extUriIgnorePathCase } from 'vs/base/common/resources';\nimport { localize } from 'vs/nls';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { isNonEmptyArray, coalesce } from 'vs/base/common/arrays';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { VSBuffer, VSBufferReadable, readableToBuffer, bufferToReadable, streamToBuffer, bufferToStream, VSBufferReadableStream, VSBufferReadableBufferedStream, bufferedStreamToBuffer, newWriteableBufferStream } from 'vs/base/common/buffer';\nimport { isReadableStream, transform, peekReadable, peekStream, isReadableBufferedStream } from 'vs/base/common/stream';\nimport { Queue } from 'vs/base/common/async';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { Iterable } from 'vs/base/common/iterator';\n\nexport class FileService extends Disposable implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly BUFFER_SIZE = 64 * 1024;\n\n\tconstructor(@ILogService private readonly logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate readonly _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate readonly _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this._onDidFilesChange.fire(new FileChangesEvent(changes, !this.isPathCaseSensitive(provider)))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tif (promise) {\n\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promise.all(joiners);\n\t}\n\n\tcanHandleResource(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }> {\n\t\treturn Iterable.map(this.provider, ([scheme, provider]) => ({ scheme, capabilities: provider.capabilities }));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate readonly _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<URI, boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forUris<true>(() => !isPathCaseSensitive);\n\t\t\t\ttrie.set(resource, true);\n\t\t\t\tif (isNonEmptyArray(resolveTo)) {\n\t\t\t\t\tresolveTo.forEach(uri => trie!.set(uri, true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (Boolean(trie.findSuperstr(stat.resource) || trie.get(stat.resource))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: getBaseLabel(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promise.all(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promise.all(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync canCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateCreateFile(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateCreateFile(resource: URI, options?: ICreateFileOptions): Promise<void> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\t}\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate\n\t\tawait this.doValidateCreateFile(resource, options);\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tlet bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream;\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tconst bufferedStream = await peekStream(bufferOrReadableOrStream, 3);\n\t\t\t\t\tif (bufferedStream.ended) {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = VSBuffer.concat(bufferedStream.buffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferedStream;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = peekReadable(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferOrReadableOrStream;\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStreamOrBufferedStream) : bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// file cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\toptions && typeof options.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tconst stream = await this.doReadAsFileStream(provider, resource, {\n\t\t\t...options,\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t});\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadAsFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadAsFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions & { preferUnbuffered?: boolean }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelyhood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\tlet fileStreamPromise: Promise<VSBufferReadableStream>;\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStreamPromise = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileStreamed(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileBuffered(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\tconst [fileStat, fileStream] = await Promise.all([statPromise, fileStreamPromise]);\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn transform(fileStream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\treadFileIntoStream(provider, resource, stream, data => data, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE,\n\t\t\terrorTransformer: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tprivate async readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileOptions): Promise<VSBufferReadableStream> {\n\t\tlet buffer = await provider.readFile(resource);\n\n\t\t// respect position option\n\t\tif (options && typeof options.position === 'number') {\n\t\t\tbuffer = buffer.slice(options.position);\n\t\t}\n\n\t\t// respect length option\n\t\tif (options && typeof options.length === 'number') {\n\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\treturn bufferToStream(VSBuffer.wrap(buffer));\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new FileOperationError(localize('fileNotModifiedError', \"File not modified since\"), FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync canMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'move', overwrite);\n\t}\n\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'copy', overwrite);\n\t}\n\n\tprivate async doCanMoveCopy(source: URI, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<Error | true> {\n\t\tif (source.toString() !== target.toString()) {\n\t\t\ttry {\n\t\t\t\tconst sourceProvider = mode === 'move' ? this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source) : await this.withReadProvider(source);\n\t\t\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t\t\tawait this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\t\t\t} catch (error) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promise.all(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst { extUri, isPathCaseSensitive } = this.getExtUri(sourceProvider);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = extUri.isEqual(source, target);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && extUri.isEqualOrParent(target, source)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst { extUri } = this.getExtUri(sourceProvider);\n\t\t\t\tif (extUri.isEqualOrParent(source, target)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tprivate getExtUri(provider: IFileSystemProvider): { extUri: IExtUri, isPathCaseSensitive: boolean } {\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\treturn {\n\t\t\textUri: isPathCaseSensitive ? extUri : extUriIgnorePathCase,\n\t\t\tisPathCaseSensitive\n\t\t};\n\t}\n\n\tprivate isPathCaseSensitive(provider: IFileSystemProvider): boolean {\n\t\treturn !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\tconst { extUri } = this.getExtUri(provider);\n\t\twhile (!extUri.isEqual(directory, dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canDelete(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateDelete(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateDelete(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<IFileSystemProvider> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tconst exists = await this.exists(resource);\n\t\tif (!exists) {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive && exists) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tasync del(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<void> {\n\t\tconst provider = await this.doValidateDelete(resource, options);\n\n\t\tconst useTrash = !!options?.useTrash;\n\t\tconst recursive = !!options?.recursive;\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate readonly activeWatchers = new Map<string, { disposable: IDisposable, count: number }>();\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tlet watchDisposed = false;\n\t\tlet watchDisposable = toDisposable(() => watchDisposed = true);\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\twatchDisposable = disposable;\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\treturn toDisposable(() => dispose(watchDisposable));\n\t}\n\n\tasync doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tconst watcher = this.activeWatchers.get(key) || { count: 0, disposable: provider.watch(resource, options) };\n\t\tif (!this.activeWatchers.has(key)) {\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Unref\n\t\t\twatcher.count--;\n\n\t\t\t// Dispose only when last user is reached\n\t\t\tif (watcher.count === 0) {\n\t\t\t\tdispose(watcher.disposable);\n\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\tconst { extUri } = this.getExtUri(provider);\n\n\t\treturn [\n\t\t\textUri.getComparisonKey(resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.activeWatchers.forEach(watcher => dispose(watcher.disposable));\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate readonly writeQueues: Map<string, Queue<void>> = new Map();\n\n\tprivate ensureWriteQueue(provider: IFileSystemProvider, resource: URI): Queue<void> {\n\t\tconst { extUri } = this.getExtUri(provider);\n\t\tconst queueKey = extUri.getComparisonKey(resource);\n\n\t\t// ensure to never write to the same resource without finishing\n\t\t// the one write. this ensures a write finishes consistently\n\t\t// (even with error) before another write is done.\n\t\tlet writeQueue = this.writeQueues.get(queueKey);\n\t\tif (!writeQueue) {\n\t\t\twriteQueue = new Queue<void>();\n\t\t\tthis.writeQueues.set(queueKey, writeQueue);\n\n\t\t\tconst onFinish = Event.once(writeQueue.onFinished);\n\t\t\tonFinish(() => {\n\t\t\t\tthis.writeQueues.delete(queueKey);\n\t\t\t\tdispose(writeQueue);\n\t\t\t});\n\t\t}\n\n\t\treturn writeQueue;\n\t}\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, readableOrStreamOrBufferedStream: VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStreamOrBufferedStream) || isReadableBufferedStream(readableOrStreamOrBufferedStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, streamOrBufferedStream: VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet posInFile = 0;\n\t\tlet stream: VSBufferReadableStream;\n\n\t\t// Buffered stream: consume the buffer first by writing\n\t\t// it to the target before reading from the stream.\n\t\tif (isReadableBufferedStream(streamOrBufferedStream)) {\n\t\t\tif (streamOrBufferedStream.buffer.length > 0) {\n\t\t\t\tconst chunk = VSBuffer.concat(streamOrBufferedStream.buffer);\n\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\t\tposInFile += chunk.byteLength;\n\t\t\t}\n\n\t\t\t// If the stream has been consumed, return early\n\t\t\tif (streamOrBufferedStream.ended) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstream = streamOrBufferedStream.stream;\n\t\t}\n\n\t\t// Unbuffered stream - just take as is\n\t\telse {\n\t\t\tstream = streamOrBufferedStream;\n\t\t}\n\n\t\treturn new Promise(async (resolve, reject) => {\n\n\t\t\tstream.on('data', async chunk => {\n\n\t\t\t\t// pause stream to perform async write operation\n\t\t\t\tstream.pause();\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t// handler again before finishing.\n\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t});\n\n\t\t\tstream.on('error', error => reject(error));\n\t\t\tstream.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\n\t\t\t// Write through the provider\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(() => this.doWriteUnbufferedQueued(provider, resource, bufferOrReadableOrStreamOrBufferedStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStreamOrBufferedStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else if (isReadableBufferedStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await bufferedStreamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t}\n\n\t\t// Write through the provider\n\t\tawait provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promise.all([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mkdir, open, close, read, write, fdatasync, Dirent, Stats } from 'fs';\nimport { promisify } from 'util';\nimport { IDisposable, Disposable, toDisposable, dispose, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, FileDeleteOptions, FileOverwriteOptions, FileWriteOptions, FileOpenOptions, FileSystemProviderErrorCode, createFileSystemProviderError, FileSystemProviderError, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, IFileSystemProviderWithFileFolderCopyCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { statLink, unlink, move, copy, readFile, truncate, rimraf, RimRafMode, exists, readdirWithFileTypes } from 'vs/base/node/pfs';\nimport { normalize, basename, dirname } from 'vs/base/common/path';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { retry, ThrottledDelayer } from 'vs/base/common/async';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { localize } from 'vs/nls';\nimport { IDiskFileChange, toFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileWatcher as UnixWatcherService } from 'vs/platform/files/node/watcher/unix/watcherService';\nimport { FileWatcher as WindowsWatcherService } from 'vs/platform/files/node/watcher/win32/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ReadableStreamEvents, newWriteableStream } from 'vs/base/common/stream';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { insert } from 'vs/base/common/arrays';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport interface IWatcherOptions {\n\tpollingInterval?: number;\n\tusePolling: boolean;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\tbufferSize?: number;\n\twatcher?: IWatcherOptions;\n}\n\nexport class DiskFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly BUFFER_SIZE = this.options?.bufferSize || 64 * 1024;\n\n\tconstructor(\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly options?: IDiskFileSystemProviderOptions\n\t) {\n\t\tsuper();\n\t}\n\n\t//#region File Capabilities\n\n\tonDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await readdirWithFileTypes(this.toFilePath(resource));\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: Stats | Dirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to non-existing files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\treadFileIntoStream(this, resource, stream, data => data.buffer, {\n\t\t\t...opts,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly mapHandleToPos: Map<number, number> = new Map();\n\n\tprivate readonly writeHandles: Set<number> = new Set();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (opts.create) {\n\t\t\t\tif (isWindows && await exists(filePath)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await promisify(open)(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (opts.create) {\n\t\t\t\tthis.writeHandles.add(handle);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait promisify(fdatasync)(fd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await promisify(close)(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(read)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(write)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait promisify(mkdir)(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait rimraf(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait copy(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WindowsWatcherService | UnixWatcherService | NsfwWatcherService | undefined;\n\tprivate readonly recursiveFoldersToWatch: { path: string, excludes: string[] }[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate recursiveWatcherLogLevelListener: IDisposable | undefined;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts.excludes);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource); // TODO@ben ideally the same watcher can be used in both cases\n\t}\n\n\tprivate watchRecursive(resource: URI, excludes: string[]): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch = { path: this.toFilePath(resource), excludes };\n\t\tconst remove = insert(this.recursiveFoldersToWatch, folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(async () => {\n\t\t\tthis.doRefreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): void {\n\n\t\t// Reuse existing\n\t\tif (this.recursiveWatcher instanceof NsfwWatcherService) {\n\t\t\tthis.recursiveWatcher.setFolders(this.recursiveFoldersToWatch);\n\t\t}\n\n\t\t// Create new\n\t\telse {\n\n\t\t\t// Dispose old\n\t\t\tdispose(this.recursiveWatcher);\n\t\t\tthis.recursiveWatcher = undefined;\n\n\t\t\t// Create new if we actually have folders to watch\n\t\t\tif (this.recursiveFoldersToWatch.length > 0) {\n\t\t\t\tlet watcherImpl: {\n\t\t\t\t\tnew(\n\t\t\t\t\t\tfolders: { path: string, excludes: string[] }[],\n\t\t\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\t\t\tverboseLogging: boolean,\n\t\t\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t\t\t): WindowsWatcherService | UnixWatcherService | NsfwWatcherService\n\t\t\t\t};\n\n\t\t\t\tlet watcherOptions: IWatcherOptions | undefined = undefined;\n\n\t\t\t\t// requires a polling watcher\n\t\t\t\tif (this.options?.watcher?.usePolling) {\n\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\twatcherOptions = this.options?.watcher;\n\t\t\t\t}\n\n\t\t\t\t// Single Folder Watcher\n\t\t\t\telse {\n\t\t\t\t\tif (this.recursiveFoldersToWatch.length === 1) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\twatcherImpl = WindowsWatcherService;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Multi Folder Watcher\n\t\t\t\t\telse {\n\t\t\t\t\t\twatcherImpl = NsfwWatcherService;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create and start watching\n\t\t\t\tthis.recursiveWatcher = new watcherImpl(\n\t\t\t\t\tthis.recursiveFoldersToWatch,\n\t\t\t\t\tevent => this._onDidChangeFile.fire(toFileChanges(event)),\n\t\t\t\t\tmsg => {\n\t\t\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t\t\t},\n\t\t\t\t\tthis.logService.getLevel() === LogLevel.Trace,\n\t\t\t\t\twatcherOptions\n\t\t\t\t);\n\n\t\t\t\tif (!this.recursiveWatcherLogLevelListener) {\n\t\t\t\t\tthis.recursiveWatcherLogLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\t\t\t\tif (this.recursiveWatcher) {\n\t\t\t\t\t\t\tthis.recursiveWatcher.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = new NodeJSWatcherService(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => {\n\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t}\n\n\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t},\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\t//#endregion\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tdispose(this.recursiveWatcher);\n\t\tthis.recursiveWatcher = undefined;\n\n\t\tdispose(this.recursiveWatcherLogLevelListener);\n\t\tthis.recursiveWatcherLogLevelListener = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(): Promise<string[]> {\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\t// Contributed languages are those installed via extension packs, so does not include English\n\t\t\t\tconst languages = ['en', ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdate(): Promise<boolean> {\n\t\treturn Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()])\n\t\t\t.then(([current, installed]) => this.cache.update(installed)\n\t\t\t\t.then(updated => !equals(Object.keys(current), Object.keys(updated))));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn pfs.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, LogLevel, AbstractLogService, DEFAULT_LOG_LEVEL } from 'vs/platform/log/common/log';\n\ninterface ILog {\n\tlevel: LogLevel;\n\targs: any[];\n}\n\nfunction getLogFunction(logger: ILogService, level: LogLevel): Function {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: return logger.trace;\n\t\tcase LogLevel.Debug: return logger.debug;\n\t\tcase LogLevel.Info: return logger.info;\n\t\tcase LogLevel.Warning: return logger.warn;\n\t\tcase LogLevel.Error: return logger.error;\n\t\tcase LogLevel.Critical: return logger.critical;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class BufferLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate buffer: ILog[] = [];\n\tprivate _logger: ILogService | undefined = undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tset logger(logger: ILogService) {\n\t\tthis._logger = logger;\n\n\t\tfor (const { level, args } of this.buffer) {\n\t\t\tconst fn = getLogFunction(logger, level);\n\t\t\tfn.apply(logger, args);\n\t\t}\n\n\t\tthis.buffer = [];\n\t}\n\n\tprivate _log(level: LogLevel, ...args: any[]): void {\n\t\tif (this._logger) {\n\t\t\tconst fn = getLogFunction(this._logger, level);\n\t\t\tfn.apply(this._logger, args);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, args });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Trace, message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Debug, message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Info, message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Warning, message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis._log(LogLevel.Error, message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis._log(LogLevel.Critical, message, ...args);\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.dispose();\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, LogLevel, AbstractLogService, ILoggerService, ILogger } from 'vs/platform/log/common/log';\nimport { URI } from 'vs/base/common/uri';\nimport { ByteSize, FileOperationError, FileOperationResult, IFileService, whenProviderRegistered } from 'vs/platform/files/common/files';\nimport { Queue } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { dirname, joinPath, basename } from 'vs/base/common/resources';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { BufferLogService } from 'vs/platform/log/common/bufferLog';\n\nconst MAX_FILE_SIZE = 5 * ByteSize.MB;\n\nexport class FileLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly initializePromise: Promise<void>;\n\tprivate readonly queue: Queue<void>;\n\tprivate backupIndex: number = 1;\n\n\tconstructor(\n\t\tprivate readonly name: string,\n\t\tprivate readonly resource: URI,\n\t\tlevel: LogLevel,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis.queue = this._register(new Queue<void>());\n\t\tthis.initializePromise = this.initialize();\n\t}\n\n\ttrace(): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format(arguments));\n\t\t}\n\t}\n\n\tdebug(): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format(arguments));\n\t\t}\n\t}\n\n\tinfo(): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format(arguments));\n\t\t}\n\t}\n\n\twarn(): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format(arguments));\n\t\t}\n\t}\n\n\terror(): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconst arg = arguments[0];\n\n\t\t\tif (arg instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = arg.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format(arguments));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format(arguments));\n\t\t}\n\t}\n\n\tflush(): void {\n\t}\n\n\tlog(level: LogLevel, args: any[]): void {\n\t\tthis._log(level, this.format(args));\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.createFile(this.resource);\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_MODIFIED_SINCE) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tthis.queue.queue(async () => {\n\t\t\tawait this.initializePromise;\n\t\t\tlet content = await this.loadContent();\n\t\t\tif (content.length > MAX_FILE_SIZE) {\n\t\t\t\tawait this.fileService.writeFile(this.getBackupResource(), VSBuffer.fromString(content));\n\t\t\t\tcontent = '';\n\t\t\t}\n\t\t\tcontent += `[${this.getCurrentTimestamp()}] [${this.name}] [${this.stringifyLogLevel(level)}] ${message}\\n`;\n\t\t\tawait this.fileService.writeFile(this.resource, VSBuffer.fromString(content));\n\t\t});\n\t}\n\n\tprivate getCurrentTimestamp(): string {\n\t\tconst toTwoDigits = (v: number) => v < 10 ? `0${v}` : v;\n\t\tconst toThreeDigits = (v: number) => v < 10 ? `00${v}` : v < 100 ? `0${v}` : v;\n\t\tconst currentTime = new Date();\n\t\treturn `${currentTime.getFullYear()}-${toTwoDigits(currentTime.getMonth() + 1)}-${toTwoDigits(currentTime.getDate())} ${toTwoDigits(currentTime.getHours())}:${toTwoDigits(currentTime.getMinutes())}:${toTwoDigits(currentTime.getSeconds())}.${toThreeDigits(currentTime.getMilliseconds())}`;\n\t}\n\n\tprivate getBackupResource(): URI {\n\t\tthis.backupIndex = this.backupIndex > 5 ? 1 : this.backupIndex;\n\t\treturn joinPath(dirname(this.resource), `${basename(this.resource)}_${this.backupIndex++}`);\n\t}\n\n\tprivate async loadContent(): Promise<string> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.resource);\n\t\t\treturn content.value.toString();\n\t\t} catch (e) {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate stringifyLogLevel(level: LogLevel): string {\n\t\tswitch (level) {\n\t\t\tcase LogLevel.Critical: return 'critical';\n\t\t\tcase LogLevel.Debug: return 'debug';\n\t\t\tcase LogLevel.Error: return 'error';\n\t\t\tcase LogLevel.Info: return 'info';\n\t\t\tcase LogLevel.Trace: return 'trace';\n\t\t\tcase LogLevel.Warning: return 'warning';\n\t\t}\n\t\treturn '';\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nexport class FileLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\n\tconstructor(\n\t\t@ILogService private logService: ILogService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IFileService private fileService: IFileService,\n\t) {\n\t\tsuper();\n\t\tthis._register(logService.onDidChangeLogLevel(level => this.loggers.forEach(logger => logger.setLevel(level))));\n\t}\n\n\tgetLogger(resource: URI): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tlogger = new BufferLogService(this.logService.getLevel());\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t\twhenProviderRegistered(resource, this.fileService).then(() => (<BufferLogService>logger).logger = this.instantiationService.createInstance(FileLogService, basename(resource), resource, this.logService.getLevel()));\n\t\t}\n\t\treturn logger;\n\t}\n\n\tdispose(): void {\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogLevel, ILogService, DelegatedLogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\n\nexport class LoggerChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': this.service.setLevel(arg); return Promise.resolve();\n\t\t\tcase 'consoleLog': this.consoleLog(arg[0], arg[1]); return Promise.resolve();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate consoleLog(severity: string, args: string[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (severity) {\n\t\t\tcase 'error':\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase 'warn':\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase 'info':\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n}\n\nexport class LoggerChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLoggerChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n\tconsoleLog(severity: string, args: string[]): void {\n\t\tthis.channel.call('consoleLog', [severity, args]);\n\t}\n}\n\nexport class FollowerLogService extends DelegatedLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private parent: LoggerChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(parent.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.parent.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\nimport { ByteSize } from 'vs/platform/files/common/files';\n\nasync function createSpdLogLogger(processName: string, logsFolder: string): Promise<spdlog.RotatingLogger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\treturn _spdlog.createRotatingLoggerAsync(processName, logfilePath, 5 * ByteSize.MB, 6);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\treturn _spdlog.createRotatingLogger(name, filename, filesize, filecount);\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.RotatingLogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate buffer: ILog[] = [];\n\tprivate _loggerCreationPromise: Promise<void> | undefined = undefined;\n\tprivate _logger: spdlog.RotatingLogger | undefined;\n\n\tconstructor(private readonly name: string, private readonly logsFolder: string, level: LogLevel) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._createSpdLogLogger();\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _createSpdLogLogger(): Promise<void> {\n\t\tif (!this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise = createSpdLogLogger(this.name, this.logsFolder)\n\t\t\t\t.then(logger => {\n\t\t\t\t\tif (logger) {\n\t\t\t\t\t\tthis._logger = logger;\n\t\t\t\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\t\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\t\t\t\tlog(this._logger, level, message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buffer = [];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\treturn this._loggerCreationPromise;\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t\tthis._loggerCreationPromise = undefined;\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, ILoggerService, ILogger } from 'vs/platform/log/common/log';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { basename, extname, dirname } from 'vs/base/common/resources';\nimport { Schemas } from 'vs/base/common/network';\nimport { FileLogService } from 'vs/platform/log/common/fileLogService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\n\nexport class LoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\n\tconstructor(\n\t\t@ILogService private logService: ILogService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(logService.onDidChangeLogLevel(level => this.loggers.forEach(logger => logger.setLevel(level))));\n\t}\n\n\tgetLogger(resource: URI): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tif (resource.scheme === Schemas.file) {\n\t\t\t\tconst baseName = basename(resource);\n\t\t\t\tconst ext = extname(resource);\n\t\t\t\tlogger = new SpdLogService(baseName.substring(0, baseName.length - ext.length), dirname(resource).fsPath, this.logService.getLevel());\n\t\t\t} else {\n\t\t\t\tlogger = this.instantiationService.createInstance(FileLogService, basename(resource), resource, this.logService.getLevel());\n\t\t\t}\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t}\n\t\treturn logger;\n\t}\n\n\tdispose(): void {\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\treadonly sticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\treadonly silent?: boolean;\n\n\t/**\n\t * Adds an action to never show the notification again. The choice will be persisted\n\t * such as future requests will not cause the notification to show again.\n\t */\n\treadonly neverShowAgain?: INeverShowAgainOptions;\n}\n\nexport enum NeverShowAgainScope {\n\n\t/**\n\t * Will never show this notification on the current workspace again.\n\t */\n\tWORKSPACE,\n\n\t/**\n\t * Will never show this notification on any workspace again.\n\t */\n\tGLOBAL\n}\n\nexport interface INeverShowAgainOptions {\n\n\t/**\n\t * The id is used to persist the selection of not showing the notification again.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * By default the action will show up as primary action. Setting this to true will\n\t * make it a secondary action instead.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to persist the choice in the current workspace or for all workspaces. By\n\t * default it will be persisted for all workspaces (= `NeverShowAgainScope.GLOBAL`).\n\t */\n\treadonly scope?: NeverShowAgainScope;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\treadonly severity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\treadonly message: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\treadonly source?: string;\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n\n\t/**\n\t * The initial set of progress properties for the notification. To update progress\n\t * later on, access the `INotificationHandle.progress` property.\n\t */\n\treadonly progress?: INotificationProgressProperties;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t *\n\t * Pass `ActionWithMenuAction` for an action that has additional menu actions.\n\t */\n\treadonly primary?: ReadonlyArray<IAction>;\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\treadonly secondary?: ReadonlyArray<IAction>;\n}\n\nexport interface INotificationProgressProperties {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\treadonly infinite?: boolean;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\treadonly total?: number;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\treadonly worked?: number;\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Will be fired whenever the visibility of the notification changes.\n\t * A notification can either be visible as toast or inside the notification\n\t * center if it is visible.\n\t */\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\ninterface IBasePromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\treadonly label: string;\n\n\t/**\n\t * Whether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\treadonly keepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptChoice extends IBasePromptChoice {\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\treadonly isSecondary?: boolean;\n}\n\nexport interface IPromptChoiceWithMenu extends IPromptChoice {\n\n\t/**\n\t * Additional choices those will be shown in the dropdown menu for this choice.\n\t */\n\treadonly menu: IBasePromptChoice[];\n\n\t/**\n\t * Menu is not supported on secondary choices\n\t */\n\treadonly isSecondary: false | undefined;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\nexport interface IStatusMessageOptions {\n\n\t/**\n\t * An optional timeout after which the status message should show. By default\n\t * the status message will show immediately.\n\t */\n\treadonly showAfter?: number;\n\n\t/**\n\t * An optional timeout after which the status message is to be hidden. By default\n\t * the status message will not hide until another status message is displayed.\n\t */\n\treadonly hideAfter?: number;\n}\n\nexport enum NotificationsFilter {\n\n\t/**\n\t * No filter is enabled.\n\t */\n\tOFF,\n\n\t/**\n\t * All notifications are configured as silent. See\n\t * `INotificationProperties.silent` for more info.\n\t */\n\tSILENT,\n\n\t/**\n\t * All notifications are silent except error notifications.\n\t*/\n\tERROR\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convenient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param severity the severity of the notification. Either `Info`, `Warning` or `Error`.\n\t * @param message the message to show as status.\n\t * @param choices options to be choosen from.\n\t * @param options provides some optional configuration options.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: (IPromptChoice | IPromptChoiceWithMenu)[], options?: IPromptOptions): INotificationHandle;\n\n\t/**\n\t * Shows a status message in the status area with the provided text.\n\t *\n\t * @param message the message to show as status\n\t * @param options provides some optional configuration options\n\t *\n\t * @returns a disposable to hide the status message\n\t */\n\tstatus(message: NotificationMessage, options?: IStatusMessageOptions): IDisposable;\n\n\t/**\n\t * Allows to configure a filter for notifications.\n\t *\n\t * @param filter the filter to use\n\t */\n\tsetFilter(filter: NotificationsFilter): void;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\n\treadonly progress = new NoOpProgress();\n\n\treadonly onDidClose = Event.None;\n\treadonly onDidChangeVisibility = Event.None;\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void { }\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/platform/product/common/productService';\nimport { isWeb } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { FileAccess } from 'vs/base/common/network';\nimport { dirname, joinPath } from 'vs/base/common/resources';\n\nlet product: IProductConfiguration;\n\n// Web or Native (sandbox TODO@sandbox need to add all properties of product.json)\nif (isWeb || typeof require === 'undefined' || typeof require.__$__nodeRequire !== 'function') {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.52.0-dev',\n\t\t\tnameShort: isWeb ? 'Code Web - OSS Dev' : 'Code - OSS Dev',\n\t\t\tnameLong: isWeb ? 'Code Web - OSS Dev' : 'Code - OSS Dev',\n\t\t\tapplicationName: 'code-oss',\n\t\t\tdataFolderName: '.vscode-oss',\n\t\t\turlProtocol: 'code-oss',\n\t\t\treportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n\t\t\tlicenseName: 'MIT',\n\t\t\tlicenseUrl: 'https://github.com/microsoft/vscode/blob/master/LICENSE.txt',\n\t\t\textensionAllowedProposedApi: [\n\t\t\t\t'ms-vscode.vscode-js-profile-flame',\n\t\t\t\t'ms-vscode.vscode-js-profile-table',\n\t\t\t\t'ms-vscode.github-browser'\n\t\t\t],\n\t\t});\n\t}\n\t// NOTE@coder: Add the ability to inject settings from the server.\n\tconst el = document.getElementById('vscode-remote-product-configuration');\n\tconst rawProductConfiguration = el && el.getAttribute('data-settings');\n\tif (rawProductConfiguration) {\n\t\tObject.assign(product, JSON.parse(rawProductConfiguration));\n\t}\n}\n\n// Native (non-sandboxed)\nelse {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = dirname(FileAccess.asFileUri('', require));\n\n\tproduct = require.__$__nodeRequire(joinPath(rootPath, 'product.json').fsPath);\n\tconst pkg = require.__$__nodeRequire(joinPath(rootPath, 'package.json').fsPath) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport { IDebugParams, IExtensionHostDebugParams, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport * as paths from 'vs/base/node/paths';\nimport * as path from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { memoize } from 'vs/base/common/decorators';\nimport product from 'vs/platform/product/common/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { FileAccess } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { createStaticIPCHandle } from 'vs/base/parts/ipc/node/ipc.net';\n\nexport class NativeEnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tget args(): NativeParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(FileAccess.asFileUri('', require).fsPath); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): URI { return URI.file(os.homedir()); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(path.join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget tmpDir(): URI { return URI.file(os.tmpdir()); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'sync'); }\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(path.join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return resources.joinPath(URI.file(path.join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(path.join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn resources.joinPath(this.userHome, product.dataFolderName, 'argv.json');\n\t}\n\n\t@memoize\n\tget snippetsHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(FileAccess.asFileUri('', require).fsPath, '..', 'extensions'));\n\t\t}\n\t}\n\n\tget extensionsDownloadPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-download-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.join(this.userDataPath, 'CachedExtensionVSIXs');\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn resources.joinPath(this.userHome, product.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize get extraExtensionPaths(): string[] {\n\t\treturn (this._args['extra-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\t@memoize get extraBuiltinExtensionPaths(): string[] {\n\t\treturn (this._args['extra-builtin-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (Array.isArray(s)) {\n\t\t\treturn s.map(p => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(p)) {\n\t\t\t\t\treturn URI.parse(p);\n\t\t\t\t}\n\t\t\t\treturn URI.file(path.normalize(p));\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\tget debugRenderer(): boolean { return !!this._args.debugRenderer; }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget logLevel(): string | undefined { return this._args.log; }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return createStaticIPCHandle(this.userDataPath, 'shared', product.version); }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return resources.joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget crashReporterId(): string | undefined { return this._args['crash-reporter-id']; }\n\tget crashReporterDirectory(): string | undefined { return this._args['crash-reporter-directory']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\n\t@memoize\n\tget telemetryLogResource(): URI { return URI.file(path.join(this.logsPath, 'telemetry.log')); }\n\tget disableTelemetry(): boolean { return !!this._args['disable-telemetry']; }\n\n\tconstructor(protected _args: NativeParsedArgs) {\n\t\tif (!_args.logsPath) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\t_args.logsPath = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\t\tthis.logsPath = _args.logsPath;\n\t}\n}\n\nexport function parseExtensionHostPort(args: NativeParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nfunction parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\n\treturn { port, break: brk, debugId };\n}\n\nexport function parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t}\n\n\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n}\n\nexport function parseUserDataDir(args: NativeParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath());\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\treadonly _serviceBrand: undefined;\n\n}\n\nexport interface IBuiltInExtension {\n\treadonly name: string;\n\treadonly version: string;\n\treadonly repo: string;\n\treadonly metadata: any;\n}\n\nexport type ConfigurationSyncStore = {\n\tweb?: Partial<Omit<ConfigurationSyncStore, 'web'>>,\n\turl: string,\n\tinsidersUrl: string,\n\tstableUrl: string,\n\tcanSwitch: boolean,\n\tauthenticationProviders: IStringDictionary<{ scopes: string[] }>\n};\n\nexport interface IProductConfiguration {\n\treadonly codeServerVersion?: string;\n\n\treadonly version: string;\n\treadonly date?: string;\n\treadonly quality?: string;\n\treadonly commit?: string;\n\n\treadonly nameShort: string;\n\treadonly nameLong: string;\n\n\treadonly win32AppUserModelId?: string;\n\treadonly win32MutexName?: string;\n\treadonly applicationName: string;\n\n\treadonly urlProtocol: string;\n\treadonly dataFolderName: string;\n\n\treadonly builtInExtensions?: IBuiltInExtension[];\n\n\treadonly downloadUrl?: string;\n\treadonly updateUrl?: string;\n\treadonly webEndpointUrl?: string;\n\treadonly target?: string;\n\n\treadonly settingsSearchBuildId?: number;\n\treadonly settingsSearchUrl?: string;\n\n\treadonly tasConfig?: {\n\t\tendpoint: string;\n\t\ttelemetryEventName: string;\n\t\tfeaturesTelemetryPropertyName: string;\n\t\tassignmentContextTelemetryPropertyName: string;\n\t};\n\n\treadonly experimentsUrl?: string;\n\n\treadonly extensionsGallery?: {\n\t\treadonly serviceUrl: string;\n\t\treadonly itemUrl: string;\n\t\treadonly controlUrl: string;\n\t\treadonly recommendationsUrl: string;\n\t};\n\n\treadonly extensionTips?: { [id: string]: string; };\n\treadonly extensionImportantTips?: IStringDictionary<ImportantExtensionTip>;\n\treadonly configBasedExtensionTips?: { [id: string]: IConfigBasedExtensionTip; };\n\treadonly exeBasedExtensionTips?: { [id: string]: IExeBasedExtensionTip; };\n\treadonly remoteExtensionTips?: { [remoteName: string]: IRemoteExtensionTip; };\n\treadonly extensionKeywords?: { [extension: string]: readonly string[]; };\n\treadonly keymapExtensionTips?: readonly string[];\n\treadonly trustedExtensionUrlPublicKeys?: { [id: string]: string[]; };\n\n\treadonly crashReporter?: {\n\t\treadonly companyName: string;\n\t\treadonly productName: string;\n\t};\n\n\treadonly enableTelemetry?: boolean;\n\treadonly aiConfig?: {\n\t\treadonly asimovKey: string;\n\t};\n\n\treadonly sendASmile?: {\n\t\treadonly reportIssueUrl: string,\n\t\treadonly requestFeatureUrl: string\n\t};\n\n\treadonly documentationUrl?: string;\n\treadonly releaseNotesUrl?: string;\n\treadonly keyboardShortcutsUrlMac?: string;\n\treadonly keyboardShortcutsUrlLinux?: string;\n\treadonly keyboardShortcutsUrlWin?: string;\n\treadonly introductoryVideosUrl?: string;\n\treadonly tipsAndTricksUrl?: string;\n\treadonly newsletterSignupUrl?: string;\n\treadonly twitterUrl?: string;\n\treadonly requestFeatureUrl?: string;\n\treadonly reportIssueUrl?: string;\n\treadonly licenseUrl?: string;\n\treadonly privacyStatementUrl?: string;\n\treadonly telemetryOptOutUrl?: string;\n\n\treadonly npsSurveyUrl?: string;\n\treadonly surveys?: readonly ISurveyData[];\n\n\treadonly checksums?: { [path: string]: string; };\n\treadonly checksumFailMoreInfoUrl?: string;\n\n\treadonly appCenter?: IAppCenterConfiguration;\n\n\treadonly portable?: string;\n\n\treadonly extensionKind?: { readonly [extensionId: string]: ExtensionKind[]; };\n\treadonly extensionAllowedProposedApi?: readonly string[];\n\n\treadonly msftInternalDomains?: string[];\n\treadonly linkProtectionTrustedDomains?: readonly string[];\n\n\treadonly 'configurationSync.store'?: ConfigurationSyncStore;\n}\n\nexport type ImportantExtensionTip = { name: string; languages?: string[]; pattern?: string; isExtensionPack?: boolean };\n\nexport interface IAppCenterConfiguration {\n\treadonly 'win32-ia32': string;\n\treadonly 'win32-x64': string;\n\treadonly 'linux-x64': string;\n\treadonly 'darwin': string;\n}\n\nexport interface IConfigBasedExtensionTip {\n\tconfigPath: string;\n\tconfigName: string;\n\trecommendations: IStringDictionary<{ name: string, remotes?: string[], important?: boolean, isExtensionPack?: boolean }>;\n}\n\nexport interface IExeBasedExtensionTip {\n\tfriendlyName: string;\n\twindowsPath?: string;\n\timportant?: boolean;\n\trecommendations: IStringDictionary<{ name: string, important?: boolean, isExtensionPack?: boolean }>;\n}\n\nexport interface IRemoteExtensionTip {\n\tfriendlyName: string;\n\textensionId: string;\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n\tdisallowSyncIgnore?: boolean;\n\tenumItemLabels?: string[];\n}\n\nexport interface IConfigurationExtensionInfo {\n\tid: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IConfigurationExtensionInfo;\n}\n\ntype SettingProperties = { [key: string]: any };\n\nexport const allSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultValues: IStringDictionary<any>;\n\tprivate readonly defaultLanguageConfigurationOverridesNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultValues = {};\n\t\tthis.defaultLanguageConfigurationOverridesNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tthis.removeFromSchema(key, configuration.properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst overrideIdentifiers: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration) {\n\t\t\t\tproperties.push(key);\n\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tthis.defaultValues[key] = { ...(this.defaultValues[key] || {}), ...defaultConfiguration[key] };\n\t\t\t\t\tconst property: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: this.defaultValues[key],\n\t\t\t\t\t\tdescription: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId\n\t\t\t\t\t};\n\t\t\t\t\toverrideIdentifiers.push(overrideIdentifierFromKey(key));\n\t\t\t\t\tthis.configurationProperties[key] = property;\n\t\t\t\t\tthis.defaultLanguageConfigurationOverridesNode.properties![key] = property;\n\t\t\t\t} else {\n\t\t\t\t\tthis.defaultValues[key] = defaultConfiguration[key];\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.registerOverrideIdentifiers(overrideIdentifiers);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete this.defaultValues[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.defaultLanguageConfigurationOverridesNode.properties![key];\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst property = properties[key];\n\n\t\t\t\t// update default value\n\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\n\t\t\t\t// update scope\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tthis.updateSchema(key, properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tallSettings.properties[key] = property;\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tapplicationSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tmachineSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tmachineOverridableSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\twindowSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = property;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate removeFromSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tdelete allSettings.properties[key];\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of this.overrideIdentifiers.values()) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t};\n\t\t\tthis.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate updatePropertyDefaultValue(key: string, property: IConfigurationPropertySchema): void {\n\t\tlet defaultValue = this.defaultValues[key];\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = property.default;\n\t\t}\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = getDefaultValue(property.type);\n\t\t}\n\t\tproperty.default = defaultValue;\n\t}\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (!property.trim()) {\n\t\treturn nls.localize('config.property.empty', \"Cannot register an empty property\");\n\t}\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T>;\n\n\treloadConfiguration(target?: ConfigurationTarget | IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function compare(from: IConfigurationModel | undefined, to: IConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst overrides: [string, string[]][] = [];\n\tconst byOverrideIdentifier = (overrides: IOverrides[]): IStringDictionary<IOverrides> => {\n\t\tconst result: IStringDictionary<IOverrides> = {};\n\t\tfor (const override of overrides) {\n\t\t\tfor (const identifier of override.identifiers) {\n\t\t\t\tresult[keyFromOverrideIdentifier(identifier)] = override;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\tconst toOverridesByIdentifier: IStringDictionary<IOverrides> = to ? byOverrideIdentifier(to.overrides) : {};\n\tconst fromOverridesByIdentifier: IStringDictionary<IOverrides> = from ? byOverrideIdentifier(from.overrides) : {};\n\n\tif (Object.keys(toOverridesByIdentifier).length) {\n\t\tfor (const key of added) {\n\t\t\tconst override = toOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\tif (Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of removed) {\n\t\t\tconst override = fromOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (Object.keys(toOverridesByIdentifier).length && Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of updated) {\n\t\t\tconst fromOverride = fromOverridesByIdentifier[key];\n\t\t\tconst toOverride = toOverridesByIdentifier[key];\n\t\t\tif (fromOverride && toOverride) {\n\t\t\t\tconst result = compare({ contents: fromOverride.contents, keys: fromOverride.keys, overrides: [] }, { contents: toOverride.contents, keys: toOverride.keys, overrides: [] });\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw: any = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key !== '__proto__') {\n\t\t\tif (key in base) {\n\t\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t\t} else if (overwrite) {\n\t\t\t\t\tbase[key] = add[key];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap, getOrSet } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, ConfigurationScope, IConfigurationRegistry, Extensions, IConfigurationPropertySchema, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, removeFromValueTree, toOverrides, IConfigurationValue, ConfigurationTarget, compare, IConfigurationChangeEvent, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { dirname } from 'vs/base/common/resources';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.keys;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string, private _scopes?: ConfigurationScope[]) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parseContent(content: string | null | undefined): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any): void {\n\t\tthis._raw = raw;\n\t\tconst configurationModel = this.doParseRaw(raw);\n\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t}\n\n\tpublic parse(): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw);\n\t\t}\n\t}\n\n\tprotected doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any): IConfigurationModel {\n\t\tif (this._scopes) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\t\traw = this.filterByScope(raw, configurationProperties, true, this._scopes);\n\t\t}\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n\n\tprivate filterByScope(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }, filterOverriddenProperties: boolean, scopes: ConfigurationScope[]): {} {\n\t\tconst result: any = {};\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tresult[key] = this.filterByScope(properties[key], configurationProperties, false, scopes);\n\t\t\t} else {\n\t\t\t\tconst scope = this.getScope(key, configurationProperties);\n\t\t\t\t// Load unregistered configurations always.\n\t\t\t\tif (scope === undefined || scopes.indexOf(scope) !== -1) {\n\t\t\t\t\tresult[key] = properties[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getScope(key: string, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }): ConfigurationScope | undefined {\n\t\tconst propertySchema = configurationProperties[key];\n\t\treturn propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW : undefined;\n\t}\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString(), this.scopes);\n\t\tthis._register(this.fileService.watch(dirname(this.userSettingsResource)));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parseContent(content.value.toString() || '{}');\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treprocess(): ConfigurationModel {\n\t\tthis.parser.parse();\n\t\treturn this.parser.configurationModel;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = keys\n\t\t\t.filter(key => OVERRIDE_PROPERTY_PATTERN.test(key))\n\t\t\t.map(key => {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\treturn [overrideIdentifier, keys];\n\t\t\t});\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, [...keys.values()]]));\n\treturn { keys: [...keysSet.values()], overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = [...keysSet.values()];\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, public source: ConfigurationTarget, public sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, isConfigurationOverrides, IConfigurationData, IConfigurationValue, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationModel, ConfigurationChangeEvent, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { RunOnceScheduler } from 'vs/base/common/async';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), keys);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport const IRemoteAuthorityResolverService = createDecorator<IRemoteAuthorityResolverService>('remoteAuthorityResolverService');\n\nexport interface ResolvedAuthority {\n\treadonly authority: string;\n\treadonly host: string;\n\treadonly port: number;\n\treadonly connectionToken: string | undefined;\n}\n\nexport interface ResolvedOptions {\n\treadonly extensionHostEnv?: { [key: string]: string | null };\n}\n\nexport interface TunnelDescription {\n\tremoteAddress: { port: number, host: string };\n\tlocalAddress: { port: number, host: string } | string;\n}\nexport interface TunnelInformation {\n\tenvironmentTunnels?: TunnelDescription[];\n}\n\nexport interface ResolverResult {\n\tauthority: ResolvedAuthority;\n\toptions?: ResolvedOptions;\n\ttunnelInformation?: TunnelInformation;\n}\n\nexport interface IRemoteConnectionData {\n\thost: string;\n\tport: number;\n\tconnectionToken: string | undefined;\n}\n\nexport enum RemoteAuthorityResolverErrorCode {\n\tUnknown = 'Unknown',\n\tNotAvailable = 'NotAvailable',\n\tTemporarilyNotAvailable = 'TemporarilyNotAvailable',\n\tNoResolverFound = 'NoResolverFound'\n}\n\nexport class RemoteAuthorityResolverError extends Error {\n\n\tpublic static isTemporarilyNotAvailable(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable;\n\t}\n\n\tpublic static isNoResolverFound(err: any): err is RemoteAuthorityResolverError {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NoResolverFound;\n\t}\n\n\tpublic static isHandled(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err.isHandled;\n\t}\n\n\tpublic readonly _message: string | undefined;\n\tpublic readonly _code: RemoteAuthorityResolverErrorCode;\n\tpublic readonly _detail: any;\n\n\tpublic isHandled: boolean;\n\n\tconstructor(message?: string, code: RemoteAuthorityResolverErrorCode = RemoteAuthorityResolverErrorCode.Unknown, detail?: any) {\n\t\tsuper(message);\n\n\t\tthis._message = message;\n\t\tthis._code = code;\n\t\tthis._detail = detail;\n\n\t\tthis.isHandled = (code === RemoteAuthorityResolverErrorCode.NotAvailable) && detail === true;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n\t\t}\n\t}\n}\n\nexport interface IRemoteAuthorityResolverService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeConnectionData: Event<void>;\n\n\tresolveAuthority(authority: string): Promise<ResolverResult>;\n\tgetConnectionData(authority: string): IRemoteConnectionData | null;\n\n\t_clearResolvedAuthority(authority: string): void;\n\t_setResolvedAuthority(resolvedAuthority: ResolvedAuthority, resolvedOptions?: ResolvedOptions): void;\n\t_setResolvedAuthorityError(authority: string, err: any): void;\n\t_setAuthorityConnectionToken(authority: string, connectionToken: string): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\n\nexport function getRemoteAuthority(uri: URI): string | undefined {\n\treturn uri.scheme === Schemas.vscodeRemote ? uri.authority : undefined;\n}\n\nexport function getRemoteName(authority: string): string;\nexport function getRemoteName(authority: undefined): undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined {\n\tif (!authority) {\n\t\treturn undefined;\n\t}\n\tconst pos = authority.indexOf('+');\n\tif (pos < 0) {\n\t\t// funky? bad authority?\n\t\treturn authority;\n\t}\n\treturn authority.substr(0, pos);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\treadonly _serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { VSBuffer, bufferToStream, streamToBuffer } from 'vs/base/common/buffer';\n\ntype RequestResponse = [\n\t{\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t},\n\tVSBuffer\n];\n\nexport class RequestChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IRequestService) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'request': return this.service.request(args[0], CancellationToken.None)\n\t\t\t\t.then(async ({ res, stream }) => {\n\t\t\t\t\tconst buffer = await streamToBuffer(stream);\n\t\t\t\t\treturn <RequestResponse>[{ statusCode: res.statusCode, headers: res.headers }, buffer];\n\t\t\t\t});\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class RequestChannelClient {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn RequestChannelClient.request(this.channel, options, token);\n\t}\n\n\tstatic async request(channel: IChannel, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tconst [res, buffer] = await channel.call<RequestResponse>('request', [options]);\n\t\treturn { res, stream: bufferToStream(buffer) };\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { isUUID, generateUuid } from 'vs/base/common/uuid';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope, fallbackValue?: string | undefined) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope, target: StorageTarget) => void\n} | undefined): Promise<string> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.GLOBAL) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\tif (storageService) {\n\t\tstorageService.store('storage.serviceMachineId', uuid, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\treadonly _serviceBrand: undefined;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void;\n\tremoveItem(key: string): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { writeFileSync, readFile } from 'vs/base/node/pfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ntype StorageDatabase = { [key: string]: any; };\n\nexport class FileStorage {\n\n\tprivate _database: StorageDatabase | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): StorageDatabase {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tconst database = await this.loadAsync();\n\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tthis._database = database;\n\t}\n\n\tprivate loadSync(): StorageDatabase {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async loadAsync(): Promise<StorageDatabase> {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = (await readFile(this.dbPath)).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue: T | undefined): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter, PauseableEmitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IS_NEW_KEY = '__$__isNewStorageMarker';\nconst TARGET_KEY = '__$__targetStorageMarker';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\n\t/**\n\t * No specific reason to save state.\n\t */\n\tNONE,\n\n\t/**\n\t * A hint that the workbench is about to shutdown.\n\t */\n\tSHUTDOWN\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeValue: Event<IStorageValueChangeEvent>;\n\n\t/**\n\t * Emitted whenever target of a storage entry changes.\n\t */\n\treadonly onDidChangeTarget: Event<IStorageTargetChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `boolean`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `number` using `parseInt` with a\n\t * base of `10`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be\n\t * converted to a `string`. Storing either `undefined` or `null` will\n\t * remove the entry under the key.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t *\n\t * @param target allows to define the target of the storage operation\n\t * to either the current machine or user.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): Promise<void> | void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Returns all the keys used in the storage for the provided `scope`\n\t * and `target`.\n\t *\n\t * Note: this will NOT return all keys stored in the storage layer.\n\t * Some keys may not have an associated `StorageTarget` and thus\n\t * will be excluded from the results.\n\t *\n\t * @param scope allows to define the scope for the keys\n\t * to either the current workspace only or all workspaces.\n\t *\n\t * @param target allows to define the target for the keys\n\t * to either the current machine or user.\n\t */\n\tkeys(scope: StorageScope, target: StorageTarget): string[];\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Whether the storage for the given scope was created during this session or\n\t * existed before.\n\t */\n\tisNew(scope: StorageScope): boolean;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the `onWillSaveState` to ask\n\t * everyone for latest state.\n\t *\n\t * @returns a `Promise` that can be awaited on when all updates\n\t * to the underlying storage have been flushed.\n\t */\n\tflush(): Promise<void>;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport const enum StorageTarget {\n\n\t/**\n\t * The stored data is user specific and applies across machines.\n\t */\n\tUSER,\n\n\t/**\n\t * The stored data is machine specific.\n\t */\n\tMACHINE\n}\n\nexport interface IStorageValueChangeEvent {\n\n\t/**\n\t * The scope for the storage entry that changed\n\t * or was removed.\n\t */\n\treadonly scope: StorageScope;\n\n\t/**\n\t * The `key` of the storage entry that was changed\n\t * or was removed.\n\t */\n\treadonly key: string;\n\n\t/**\n\t * The `target` can be `undefined` if a key is being\n\t * removed.\n\t */\n\treadonly target: StorageTarget | undefined;\n}\n\nexport interface IStorageTargetChangeEvent {\n\n\t/**\n\t * The scope for the target that changed. Listeners\n\t * should use `keys(scope, target)` to get an updated\n\t * list of keys for the given `scope` and `target`.\n\t */\n\treadonly scope: StorageScope;\n}\n\ninterface IKeyTargets {\n\t[key: string]: StorageTarget\n}\n\nexport abstract class AbstractStorageService extends Disposable implements IStorageService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeValue = this._register(new PauseableEmitter<IStorageValueChangeEvent>());\n\treadonly onDidChangeValue = this._onDidChangeValue.event;\n\n\tprivate readonly _onDidChangeTarget = this._register(new PauseableEmitter<IStorageTargetChangeEvent>());\n\treadonly onDidChangeTarget = this._onDidChangeTarget.event;\n\n\tprivate readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprotected emitDidChangeValue(scope: StorageScope, key: string): void {\n\n\t\t// Specially handle `TARGET_KEY`\n\t\tif (key === TARGET_KEY) {\n\n\t\t\t// Clear our cached version which is now out of date\n\t\t\tif (scope === StorageScope.GLOBAL) {\n\t\t\t\tthis._globalKeyTargets = undefined;\n\t\t\t} else if (scope === StorageScope.WORKSPACE) {\n\t\t\t\tthis._workspaceKeyTargets = undefined;\n\t\t\t}\n\n\t\t\t// Emit as `didChangeTarget` event\n\t\t\tthis._onDidChangeTarget.fire({ scope });\n\t\t}\n\n\t\t// Emit any other key to outside\n\t\telse {\n\t\t\tthis._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n\t\t}\n\t}\n\n\tprotected emitWillSaveState(reason: WillSaveStateReason): void {\n\t\tthis._onWillSaveState.fire({ reason });\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): void {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tthis.remove(key, scope);\n\t\t\treturn;\n\t\t}\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, target);\n\n\t\t\t// Store actual value\n\t\t\tthis.doStore(key, value, scope);\n\t\t});\n\t}\n\n\tremove(key: string, scope: StorageScope): void {\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, undefined);\n\n\t\t\t// Remove actual key\n\t\t\tthis.doRemove(key, scope);\n\t\t});\n\t}\n\n\tprivate withPausedEmitters(fn: Function): void {\n\n\t\t// Pause emitters\n\t\tthis._onDidChangeValue.pause();\n\t\tthis._onDidChangeTarget.pause();\n\n\t\ttry {\n\t\t\tfn();\n\t\t} finally {\n\n\t\t\t// Resume emitters\n\t\t\tthis._onDidChangeValue.resume();\n\t\t\tthis._onDidChangeTarget.resume();\n\t\t}\n\t}\n\n\tkeys(scope: StorageScope, target: StorageTarget): string[] {\n\t\tconst keys: string[] = [];\n\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tfor (const key of Object.keys(keyTargets)) {\n\t\t\tconst keyTarget = keyTargets[key];\n\t\t\tif (keyTarget === target) {\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n\n\tprivate updateKeyTarget(key: string, scope: StorageScope, target: StorageTarget | undefined): void {\n\n\t\t// Add\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tif (typeof target === 'number') {\n\t\t\tif (keyTargets[key] !== target) {\n\t\t\t\tkeyTargets[key] = target;\n\t\t\t\tthis.doStore(TARGET_KEY, JSON.stringify(keyTargets), scope);\n\t\t\t}\n\t\t}\n\n\t\t// Remove\n\t\telse {\n\t\t\tif (typeof keyTargets[key] === 'number') {\n\t\t\t\tdelete keyTargets[key];\n\t\t\t\tthis.doStore(TARGET_KEY, JSON.stringify(keyTargets), scope);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _workspaceKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get workspaceKeyTargets(): IKeyTargets {\n\t\tif (!this._workspaceKeyTargets) {\n\t\t\tthis._workspaceKeyTargets = this.loadKeyTargets(StorageScope.WORKSPACE);\n\t\t}\n\n\t\treturn this._workspaceKeyTargets;\n\t}\n\n\tprivate _globalKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get globalKeyTargets(): IKeyTargets {\n\t\tif (!this._globalKeyTargets) {\n\t\t\tthis._globalKeyTargets = this.loadKeyTargets(StorageScope.GLOBAL);\n\t\t}\n\n\t\treturn this._globalKeyTargets;\n\t}\n\n\tprivate getKeyTargets(scope: StorageScope): IKeyTargets {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalKeyTargets : this.workspaceKeyTargets;\n\t}\n\n\tprivate loadKeyTargets(scope: StorageScope): { [key: string]: StorageTarget } {\n\t\tconst keysRaw = this.get(TARGET_KEY, scope);\n\t\tif (keysRaw) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(keysRaw);\n\t\t\t} catch (error) {\n\t\t\t\t// Fail gracefully\n\t\t\t}\n\t\t}\n\n\t\treturn Object.create(null);\n\t}\n\n\tisNew(scope: StorageScope): boolean {\n\t\treturn this.getBoolean(IS_NEW_KEY, scope) === true;\n\t}\n\n\tflush(): Promise<void> {\n\n\t\t// Signal event to collect changes\n\t\tthis._onWillSaveState.fire({ reason: WillSaveStateReason.NONE });\n\n\t\t// Await flush\n\t\treturn this.doFlush();\n\t}\n\n\t// --- abstract\n\n\tabstract get(key: string, scope: StorageScope, fallbackValue: string): string;\n\tabstract get(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\tabstract getBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tabstract getBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\tabstract getNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tabstract getNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\tprotected abstract doStore(key: string, value: string | boolean | number, scope: StorageScope): Promise<void> | void;\n\n\tprotected abstract doRemove(key: string, scope: StorageScope): void;\n\n\tprotected abstract doFlush(): Promise<void>;\n\n\tabstract migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\tabstract logStorage(): void;\n}\n\nexport class InMemoryStorageService extends AbstractStorageService {\n\n\tprivate readonly globalCache = new Map<string, string>();\n\tprivate readonly workspaceCache = new Map<string, string>();\n\n\tprivate getCache(scope: StorageScope): Map<string, string> {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalCache : this.workspaceCache;\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tprotected doStore(key: string, value: string | boolean | number, scope: StorageScope): void {\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.getCache(scope).get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update in cache\n\t\tthis.getCache(scope).set(key, valueStr);\n\n\t\t// Events\n\t\tthis.emitDidChangeValue(scope, key);\n\t}\n\n\tprotected doRemove(key: string, scope: StorageScope): void {\n\t\tconst wasDeleted = this.getCache(scope).delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn; // Return early if value already deleted\n\t\t}\n\n\t\t// Events\n\t\tthis.emitDidChangeValue(scope, key);\n\t}\n\n\tlogStorage(): void {\n\t\tlogStorage(this.globalCache, this.workspaceCache, 'inMemory', 'inMemory');\n\t}\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n\n\tasync doFlush(): Promise<void> { }\n\n\tasync close(): Promise<void> { }\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch } from 'vs/base/common/arrays';\nimport * as Errors from 'vs/base/common/errors';\nimport { toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ErrorEventFragment = {\n\tcallstack: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tmsg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tfile?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tline?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcolumn?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tuncaught_error_name?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tuncaught_error_msg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tcount?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\nexport interface ErrorEvent {\n\tcallstack: string;\n\tmsg?: string;\n\tfile?: string;\n\tline?: number;\n\tcolumn?: number;\n\tuncaught_error_name?: string;\n\tuncaught_error_msg?: string;\n\tcount?: number;\n}\n\nexport namespace ErrorEvent {\n\texport function compare(a: ErrorEvent, b: ErrorEvent) {\n\t\tif (a.callstack < b.callstack) {\n\t\t\treturn -1;\n\t\t} else if (a.callstack > b.callstack) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport default abstract class BaseErrorTelemetry {\n\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _flushDelay: number;\n\tprivate _flushHandle: any = -1;\n\tprivate _buffer: ErrorEvent[] = [];\n\tprotected readonly _disposables = new DisposableStore();\n\n\tconstructor(telemetryService: ITelemetryService, flushDelay = BaseErrorTelemetry.ERROR_FLUSH_TIMEOUT) {\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._flushDelay = flushDelay;\n\n\t\t// (1) check for unexpected but handled errors\n\t\tconst unbind = Errors.errorHandler.addListener((err) => this._onErrorEvent(err));\n\t\tthis._disposables.add(toDisposable(unbind));\n\n\t\t// (2) install implementation-specific error listeners\n\t\tthis.installErrorListeners();\n\t}\n\n\tdispose() {\n\t\tclearTimeout(this._flushHandle);\n\t\tthis._flushBuffer();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprotected installErrorListeners(): void {\n\t\t// to override\n\t}\n\n\tprivate _onErrorEvent(err: any): void {\n\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\n\t\t// unwrap nested errors from loader\n\t\tif (err.detail && err.detail.stack) {\n\t\t\terr = err.detail;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tlet callstack = Array.isArray(err.stack) ? err.stack.join('\\n') : err.stack;\n\t\tlet msg = err.message ? err.message : safeStringify(err);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif (!callstack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enqueue({ msg, callstack });\n\t}\n\n\tprotected _enqueue(e: ErrorEvent): void {\n\n\t\tconst idx = binarySearch(this._buffer, e, ErrorEvent.compare);\n\t\tif (idx < 0) {\n\t\t\te.count = 1;\n\t\t\tthis._buffer.splice(~idx, 0, e);\n\t\t} else {\n\t\t\tif (!this._buffer[idx].count) {\n\t\t\t\tthis._buffer[idx].count = 0;\n\t\t\t}\n\t\t\tthis._buffer[idx].count! += 1;\n\t\t}\n\n\t\tif (this._flushHandle === -1) {\n\t\t\tthis._flushHandle = setTimeout(() => {\n\t\t\t\tthis._flushBuffer();\n\t\t\t\tthis._flushHandle = -1;\n\t\t\t}, this._flushDelay);\n\t\t}\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tfor (let error of this._buffer) {\n\t\t\ttype UnhandledErrorClassification = {} & ErrorEventFragment;\n\t\t\tthis._telemetryService.publicLogError2<ErrorEvent, UnhandledErrorClassification>('UnhandledError', error);\n\t\t}\n\t\tthis._buffer.length = 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport BaseErrorTelemetry, { ErrorEvent } from 'vs/platform/telemetry/common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected installErrorListeners(): void {\n\t\tlet oldOnError: Function;\n\t\tlet that = this;\n\t\tif (typeof globals.onerror === 'function') {\n\t\t\toldOnError = globals.onerror;\n\t\t}\n\t\tglobals.onerror = function (message: string, filename: string, line: number, column?: number, e?: any) {\n\t\t\tthat._onUncaughtError(message, filename, line, column, e);\n\t\t\tif (oldOnError) {\n\t\t\t\toldOnError.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\tif (oldOnError) {\n\t\t\t\tglobals.onerror = oldOnError;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onUncaughtError(msg: string, file: string, line: number, column?: number, err?: any): void {\n\t\tlet data: ErrorEvent = {\n\t\t\tcallstack: msg,\n\t\t\tmsg,\n\t\t\tfile,\n\t\t\tline,\n\t\t\tcolumn\n\t\t};\n\n\t\tif (err) {\n\t\t\tlet { name, message, stack } = err;\n\t\t\tdata.uncaught_error_name = name;\n\t\t\tif (message) {\n\t\t\t\tdata.uncaught_error_msg = message;\n\t\t\t}\n\t\t\tif (stack) {\n\t\t\t\tdata.callstack = Array.isArray(err.stack)\n\t\t\t\t\t? err.stack = err.stack.join('\\n')\n\t\t\t\t\t: err.stack;\n\t\t\t}\n\t\t}\n\n\t\tthis._enqueue(data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t/**\n\t * Whether error telemetry will get sent. If false, `publicLogError` will no-op.\n\t */\n\treadonly sendErrorTelemetry: boolean;\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<void>;\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void>;\n\n\tsetEnabled(value: boolean): void;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tsetExperimentProperty(name: string, value: string): void;\n\n\tisOptedIn: boolean;\n}\n\n// Keys\nexport const instanceStorageKey = 'telemetry.instanceId';\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier, DefaultIconPath } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { getOrDefault } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestService, asJson, asText } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { joinPath } from 'vs/base/common/resources';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages',\n\tWebExtension: 'Microsoft.VisualStudio.Code.WebExtension'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query({ ...this.state, pageNumber, pageSize });\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.length ? values.map(value => ({ filterType, value })) : [{ filterType }]\n\t\t];\n\n\t\treturn new Query({ ...this.state, criteria });\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query({ ...this.state, sortBy });\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query({ ...this.state, sortOrder });\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query({ ...this.state, flags: flags.reduce<number>((r, f) => r | f, 0) });\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query({ ...this.state, assetTypes });\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w.]+))(:(//)?)([\\w.@\\:/\\-~]+)(.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = DefaultIconPath;\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction getIsWebExtension(version: IRawGalleryExtensionVersion): boolean {\n\tconst webExtensionProperty = version.properties ? version.properties.find(p => p.key === PropertyType.WebExtension) : undefined;\n\treturn !!webExtensionProperty && webExtensionProperty.value === 'true';\n}\n\nfunction getWebResource(version: IRawGalleryExtensionVersion): URI | undefined {\n\treturn version.files.some(f => f.assetType.startsWith('Microsoft.VisualStudio.Code.WebResources'))\n\t\t? joinPath(URI.parse(version.assetUri), 'Microsoft.VisualStudio.Code.WebResources', 'extension')\n\t\t: undefined;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassetUri: URI.parse(version.assetUri),\n\t\twebResource: getWebResource(version),\n\t\tassetTypes: version.files.map(({ assetType }) => assetType),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version),\n\t\t\twebExtension: getIsWebExtension(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@optional(IStorageService) storageService: IStorageService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, this.environmentService, this.fileService, storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tasync getExtensions(names: string[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tconst result: IGalleryExtension[] = [];\n\t\tlet { total, firstPage: pageResult, getPage } = await this.query({ names, pageSize: names.length }, token);\n\t\tresult.push(...pageResult);\n\t\tfor (let pageIndex = 1; result.length < total; pageIndex++) {\n\t\t\tpageResult = await getPage(pageIndex, token);\n\t\t\tif (pageResult.length) {\n\t\t\t\tresult.push(...pageResult);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync getCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension = await this.getCompatibleExtensionByEngine(arg1, version);\n\n\t\tif (extension?.properties.webExtension) {\n\t\t\treturn extension.webResource ? extension : null;\n\t\t} else {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\tprivate async getCompatibleExtensionByEngine(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\treturn extension;\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CancellationToken.None);\n\t\tconst [rawExtension] = galleryExtensions;\n\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (version) {\n\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\tif (versionAsset) {\n\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\t\t\treturn extension;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst rawVersion = await this.getLastValidExtensionVersion(rawExtension, rawExtension.versions);\n\t\tif (rawVersion) {\n\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t}\n\t\treturn null;\n\t}\n\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tasync query(arg1: any, arg2?: any): Promise<IPager<IGalleryExtension>> {\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\ttype GalleryServiceQueryClassification = {\n\t\t\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\ttext: { classification: 'CustomerContent', purpose: 'FeatureInsight' };\n\t\t};\n\t\ttype GalleryServiceQueryEvent = {\n\t\t\ttype: string;\n\t\t\ttext: string;\n\t\t};\n\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use featured filter\n\t\t\ttext = text.replace(/\\bfeatured(\\s+|\\b|$)/g, () => {\n\t\t\t\tquery = query.withFilter(FilterType.Featured);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\tconst { galleryExtensions, total } = await this.queryGallery(query, token);\n\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\tconst getPage = async (pageIndex: number, ct: CancellationToken) => {\n\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\tthrow canceled();\n\t\t\t}\n\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\tconst { galleryExtensions } = await this.queryGallery(nextPageQuery, ct);\n\t\t\treturn galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source));\n\t\t};\n\n\t\treturn { firstPage: extensions, total, pageSize: query.pageSize, getPage } as IPager<IGalleryExtension>;\n\t}\n\n\tprivate async queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\t// Always exclude non validated and unpublished extensions\n\t\tquery = query\n\t\t\t.withFlags(query.flags, Flags.ExcludeNonValidated)\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst data = JSON.stringify(query.raw);\n\t\tconst headers = {\n\t\t\t...commonHeaders,\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t'Content-Length': String(data.length)\n\t\t};\n\n\t\tconst context = await this.requestService.request({\n\t\t\ttype: 'POST',\n\t\t\turl: this.api('/extensionquery'),\n\t\t\tdata,\n\t\t\theaders\n\t\t}, token);\n\n\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t}\n\n\t\tconst result = await asJson<IRawGalleryQueryResult>(context);\n\t\tif (result) {\n\t\t\tconst r = result.results[0];\n\t\t\tconst galleryExtensions = r.extensions;\n\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\treturn { galleryExtensions, total };\n\t\t}\n\t\treturn { galleryExtensions: [], total: 0 };\n\t}\n\n\tasync reportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\t\ttry {\n\t\t\tawait this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None);\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tasync download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', { ...data, duration });\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\tconst context = await this.getAsset(downloadAsset);\n\t\tawait this.fileService.writeFile(location, context.stream);\n\t\tlog(new Date().getTime() - startTime);\n\t}\n\n\tasync getReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\tconst context = await this.getAsset(extension.assets.readme, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\tconst context = await this.getAsset(extension.assets.manifest, {}, token);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\tconst context = await this.getAsset(asset[1]);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\tconst context = await this.getAsset(extension.assets.changelog, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\tconst result: IGalleryExtensionVersion[] = [];\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CancellationToken.None);\n\t\tif (galleryExtensions.length) {\n\t\t\tif (compatible) {\n\t\t\t\tawait Promise.all(galleryExtensions[0].versions.map(async v => {\n\t\t\t\t\tlet engine: string | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tengine = await this.getEngine(v);\n\t\t\t\t\t} catch (error) { /* Ignore error and skip version */ }\n\t\t\t\t\tif (engine && isEngineValid(engine, this.productService.version)) {\n\t\t\t\t\t\tresult.push({ version: v!.version, date: v!.lastUpdated });\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tresult.push(...galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated })));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst baseOptions = { type: 'GET' };\n\t\tconst headers = { ...commonHeaders, ...(options.headers || {}) };\n\t\toptions = { ...options, ...baseOptions, headers };\n\n\t\tconst url = asset.uri;\n\t\tconst fallbackUrl = asset.fallbackUri;\n\t\tconst firstOptions = { ...options, url };\n\n\t\ttry {\n\t\t\tconst context = await this.requestService.request(firstOptions, token);\n\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t} catch (err) {\n\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tconst message = getErrorMessage(err);\n\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\turl: string;\n\t\t\t\tmessage: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\tconst fallbackOptions = { ...options, url: fallbackUrl };\n\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t}\n\t}\n\n\tprivate async getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): IRawGalleryExtensionVersion | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine, this.productService.version)) {\n\t\t\t\treturn version;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn engine;\n\t\t}\n\n\t\tconst manifestAsset = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifestAsset) {\n\t\t\tthrow new Error('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\tconst context = await this.getAsset(manifestAsset, { headers });\n\t\tconst manifest = await asJson<IExtensionManifest>(context);\n\t\tif (manifest) {\n\t\t\treturn manifest.engines.vscode;\n\t\t}\n\n\t\tthrow new Error('Error while reading manifest');\n\t}\n\n\tprivate async getLastValidExtensionVersionRecursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst version = versions[0];\n\t\tconst engine = await this.getEngine(version);\n\t\tif (!isEngineValid(engine, this.productService.version)) {\n\t\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions.slice(1));\n\t\t}\n\n\t\tversion.properties = version.properties || [];\n\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\treturn version;\n\t}\n\n\tasync getExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst context = await this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None);\n\t\tif (context.res.statusCode !== 200) {\n\t\t\tthrow new Error('Could not get extensions report.');\n\t\t}\n\n\t\tconst result = await asJson<IRawExtensionsReport>(context);\n\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\tif (result) {\n\t\t\tfor (const id of result.malicious) {\n\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\text.malicious = true;\n\t\t\t\tmap.set(id, ext);\n\t\t\t}\n\t\t}\n\n\t\treturn [...map.values()];\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope, target: StorageTarget) => void\n} | undefined): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\theaders['X-Market-User-Id'] = uuid;\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport product from 'vs/platform/product/common/product';\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tsendErrorTelemetry?: boolean;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _experimentProperties: { [name: string]: string } = {};\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\tprivate _enabled: boolean;\n\tpublic readonly sendErrorTelemetry: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\t\tthis._enabled = true;\n\t\tthis.sendErrorTelemetry = !!config.sendErrorTelemetry;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\ttype OptInClassification = {\n\t\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\ttype OptInEvent = {\n\t\t\t\toptIn: boolean;\n\t\t\t};\n\t\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t\t});\n\t\t}\n\t}\n\n\tsetExperimentProperty(name: string, value: string): void {\n\t\tthis._experimentProperties[name] = value;\n\t}\n\n\tsetEnabled(value: boolean): void {\n\t\tthis._enabled = value;\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService?.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn && this._enabled;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet instanceId = values['common.instanceId'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, instanceId, machineId, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this.isOptedIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (next) add experiment properties\n\t\t\tdata = mixin(data, this._experimentProperties);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<any> {\n\t\tif (!this.sendErrorTelemetry) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Send error event and anonymize paths\n\t\treturn this.publicLog(errorEventName, data, true);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<any> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'markdownDescription':\n\t\t\t\t!product.privacyStatementUrl ?\n\t\t\t\t\tlocalize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\") :\n\t\t\t\t\tlocalize('telemetry.enableTelemetryMd', \"Enable usage data and errors to be sent to a Microsoft online service. Read our privacy statement [here]({0}).\", product.privacyStatementUrl),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly sendErrorTelemetry = false;\n\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetExperimentProperty() { }\n\tsetEnabled() { }\n\tisOptedIn = true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tflush: () => Promise.all(appenders.map(a => a.flush()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\tconst allowedAuthorities = ['ssh-remote', 'dev-container', 'attached-container', 'wsl'];\n\tallowedAuthorities.forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogger, ILoggerService } from 'vs/platform/log/common/log';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport class TelemetryLogAppender extends Disposable implements ITelemetryAppender {\n\n\tprivate readonly logger: ILogger;\n\n\tconstructor(\n\t\t@ILoggerService loggerService: ILoggerService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\t\tthis.logger = this._register(loggerService.getLogger(environmentService.telemetryLogResource));\n\t\tthis.logger.info('The below are logs for every telemetry event sent from VS Code once the log level is set to trace.');\n\t\tthis.logger.info('===========================================================');\n\t}\n\n\tflush(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tthis.logger.trace(`telemetry/${eventName}`, validateTelemetryData(data));\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\n\nasync function getClient(aiKey: string): Promise<appInsights.TelemetryClient> {\n\tconst appInsights = await import('applicationinsights');\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient: string | appInsights.TelemetryClient | undefined;\n\tprivate _asyncAIClient: Promise<appInsights.TelemetryClient> | null;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.TelemetryClient), // allow factory function for testing\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t} else {\n\t\t\tthis._aiClient = aiKeyOrClientFactory;\n\t\t}\n\t\tthis._asyncAIClient = null;\n\t}\n\n\tprivate _withAIClient(callback: (aiClient: appInsights.TelemetryClient) => void): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof this._aiClient !== 'string') {\n\t\t\tcallback(this._aiClient);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncAIClient) {\n\t\t\tthis._asyncAIClient = getClient(this._aiClient);\n\t\t}\n\n\t\tthis._asyncAIClient.then(\n\t\t\t(aiClient) => {\n\t\t\t\tcallback(aiClient);\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t);\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tthis._withAIClient((aiClient) => aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t}));\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._withAIClient((aiClient) => {\n\t\t\t\t\taiClient.flush({\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport async function resolveCommonProperties(\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\ttry {\n\t\tconst contents = await readFile(installSourcePath, 'utf8');\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nfunction verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tif (!process || !process.env || !process.env['USERDNSDOMAIN']) {\n\t\treturn false;\n\t}\n\n\tconst domain = process.env['USERDNSDOMAIN']!.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { statSync, readFileSync } from 'fs';\nimport { join } from 'vs/base/common/path';\n\nexport function buildTelemetryMessage(appRoot: string, extensionsPath?: string): string {\n\tconst mergedTelemetry = Object.create(null);\n\t// Simple function to merge the telemetry into one json object\n\tconst mergeTelemetry = (contents: string, dirName: string) => {\n\t\tconst telemetryData = JSON.parse(contents);\n\t\tmergedTelemetry[dirName] = telemetryData;\n\t};\n\tif (extensionsPath) {\n\t\t// Gets all the directories inside the extension directory\n\t\tconst dirs = readdirSync(extensionsPath).filter(files => {\n\t\t\t// This handles case where broken symbolic links can cause statSync to throw and error\n\t\t\ttry {\n\t\t\t\treturn statSync(join(extensionsPath, files)).isDirectory();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tconst telemetryJsonFolders: string[] = [];\n\t\tdirs.forEach((dir) => {\n\t\t\tconst files = readdirSync(join(extensionsPath, dir)).filter(file => file === 'telemetry.json');\n\t\t\t// We know it contains a telemetry.json file so we add it to the list of folders which have one\n\t\t\tif (files.length === 1) {\n\t\t\t\ttelemetryJsonFolders.push(dir);\n\t\t\t}\n\t\t});\n\t\ttelemetryJsonFolders.forEach((folder) => {\n\t\t\tconst contents = readFileSync(join(extensionsPath, folder, 'telemetry.json')).toString();\n\t\t\tmergeTelemetry(contents, folder);\n\t\t});\n\t}\n\tlet contents = readFileSync(join(appRoot, 'telemetry-core.json')).toString();\n\tmergeTelemetry(contents, 'vscode-core');\n\tcontents = readFileSync(join(appRoot, 'telemetry-extensions.json')).toString();\n\tmergeTelemetry(contents, 'vscode-extensions');\n\treturn JSON.stringify(mergedTelemetry, null, 4);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { isWindows, isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { extname, isAbsolute } from 'vs/base/common/path';\nimport { dirname, resolvePath, isEqualAuthority, relativePath, extname as resourceExtname, extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport * as jsonEdit from 'vs/base/common/jsonEdit';\nimport * as json from 'vs/base/common/json';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { toSlashes } from 'vs/base/common/extpath';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { getRemoteAuthority } from 'vs/platform/remote/common/remoteHosts';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const UNTITLED_WORKSPACE_NAME = 'workspace.json';\n\nexport const IWorkspacesService = createDecorator<IWorkspacesService>('workspacesService');\n\nexport interface IWorkspacesService {\n\n\treadonly _serviceBrand: undefined;\n\n\t// Workspaces Management\n\tenterWorkspace(path: URI): Promise<IEnterWorkspaceResult | null>;\n\tcreateUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier>;\n\tdeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void>;\n\tgetWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier>;\n\n\t// Workspaces History\n\treadonly onRecentlyOpenedChange: Event<void>;\n\taddRecentlyOpened(recents: IRecent[]): Promise<void>;\n\tremoveRecentlyOpened(workspaces: URI[]): Promise<void>;\n\tclearRecentlyOpened(): Promise<void>;\n\tgetRecentlyOpened(): Promise<IRecentlyOpened>;\n\n\t// Dirty Workspaces\n\tgetDirtyWorkspaces(): Promise<Array<IWorkspaceIdentifier | URI>>;\n}\n\nexport interface IRecentlyOpened {\n\tworkspaces: Array<IRecentWorkspace | IRecentFolder>;\n\tfiles: IRecentFile[];\n}\n\nexport type IRecent = IRecentWorkspace | IRecentFolder | IRecentFile;\n\nexport interface IRecentWorkspace {\n\tworkspace: IWorkspaceIdentifier;\n\tlabel?: string;\n}\n\nexport interface IRecentFolder {\n\tfolderUri: ISingleFolderWorkspaceIdentifier;\n\tlabel?: string;\n}\n\nexport interface IRecentFile {\n\tfileUri: URI;\n\tlabel?: string;\n}\n\nexport function isRecentWorkspace(curr: IRecent): curr is IRecentWorkspace {\n\treturn curr.hasOwnProperty('workspace');\n}\n\nexport function isRecentFolder(curr: IRecent): curr is IRecentFolder {\n\treturn curr.hasOwnProperty('folderUri');\n}\n\nexport function isRecentFile(curr: IRecent): curr is IRecentFile {\n\treturn curr.hasOwnProperty('fileUri');\n}\n\n/**\n * A single folder workspace identifier is just the path to the folder.\n */\nexport type ISingleFolderWorkspaceIdentifier = URI;\n\nexport interface IWorkspaceIdentifier {\n\tid: string;\n\tconfigPath: URI;\n}\n\nexport function reviveWorkspaceIdentifier(workspace: { id: string, configPath: UriComponents; }): IWorkspaceIdentifier {\n\treturn { id: workspace.id, configPath: URI.revive(workspace.configPath) };\n}\n\nexport function isStoredWorkspaceFolder(thing: unknown): thing is IStoredWorkspaceFolder {\n\treturn isRawFileWorkspaceFolder(thing) || isRawUriWorkspaceFolder(thing);\n}\n\nexport function isRawFileWorkspaceFolder(thing: any): thing is IRawFileWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.path === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport function isRawUriWorkspaceFolder(thing: any): thing is IRawUriWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.uri === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport interface IRawFileWorkspaceFolder {\n\tpath: string;\n\tname?: string;\n}\n\nexport interface IRawUriWorkspaceFolder {\n\turi: string;\n\tname?: string;\n}\n\nexport type IStoredWorkspaceFolder = IRawFileWorkspaceFolder | IRawUriWorkspaceFolder;\n\nexport interface IResolvedWorkspace extends IWorkspaceIdentifier {\n\tfolders: IWorkspaceFolder[];\n\tremoteAuthority?: string;\n}\n\nexport interface IStoredWorkspace {\n\tfolders: IStoredWorkspaceFolder[];\n\tremoteAuthority?: string;\n}\n\nexport interface IWorkspaceFolderCreationData {\n\turi: URI;\n\tname?: string;\n}\n\nexport interface IUntitledWorkspaceInfo {\n\tworkspace: IWorkspaceIdentifier;\n\tremoteAuthority?: string;\n}\n\nexport interface IEnterWorkspaceResult {\n\tworkspace: IWorkspaceIdentifier;\n\tbackupPath?: string;\n}\n\nexport function isSingleFolderWorkspaceIdentifier(obj: unknown): obj is ISingleFolderWorkspaceIdentifier {\n\treturn obj instanceof URI;\n}\n\nexport function isWorkspaceIdentifier(obj: unknown): obj is IWorkspaceIdentifier {\n\tconst workspaceIdentifier = obj as IWorkspaceIdentifier;\n\n\treturn workspaceIdentifier && typeof workspaceIdentifier.id === 'string' && workspaceIdentifier.configPath instanceof URI;\n}\n\nexport function toWorkspaceIdentifier(workspace: IWorkspace): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined {\n\tif (workspace.configuration) {\n\t\treturn {\n\t\t\tconfigPath: workspace.configuration,\n\t\t\tid: workspace.id\n\t\t};\n\t}\n\n\tif (workspace.folders.length === 1) {\n\t\treturn workspace.folders[0].uri;\n\t}\n\n\t// Empty workspace\n\treturn undefined;\n}\n\nexport function isUntitledWorkspace(path: URI, environmentService: IEnvironmentService): boolean {\n\treturn extUriBiasedIgnorePathCase.isEqualOrParent(path, environmentService.untitledWorkspacesHome);\n}\n\nexport type IMultiFolderWorkspaceInitializationPayload = IWorkspaceIdentifier;\nexport interface ISingleFolderWorkspaceInitializationPayload { id: string; folder: ISingleFolderWorkspaceIdentifier; }\nexport interface IEmptyWorkspaceInitializationPayload { id: string; }\n\nexport type IWorkspaceInitializationPayload = IMultiFolderWorkspaceInitializationPayload | ISingleFolderWorkspaceInitializationPayload | IEmptyWorkspaceInitializationPayload;\n\nexport function isSingleFolderWorkspaceInitializationPayload(obj: any): obj is ISingleFolderWorkspaceInitializationPayload {\n\treturn isSingleFolderWorkspaceIdentifier((obj.folder as ISingleFolderWorkspaceIdentifier));\n}\n\nconst WORKSPACE_SUFFIX = '.' + WORKSPACE_EXTENSION;\n\nexport function hasWorkspaceFileExtension(path: string | URI) {\n\tconst ext = (typeof path === 'string') ? extname(path) : resourceExtname(path);\n\n\treturn ext === WORKSPACE_SUFFIX;\n}\n\nconst SLASH = '/';\n\n/**\n * Given a folder URI and the workspace config folder, computes the IStoredWorkspaceFolder using\n* a relative or absolute path or a uri.\n * Undefined is returned if the folderURI and the targetConfigFolderURI don't have the same schema or authority\n *\n * @param folderURI a workspace folder\n * @param forceAbsolute if set, keep the path absolute\n * @param folderName a workspace name\n * @param targetConfigFolderURI the folder where the workspace is living in\n * @param useSlashForPath if set, use forward slashes for file paths on windows\n */\nexport function getStoredWorkspaceFolder(folderURI: URI, forceAbsolute: boolean, folderName: string | undefined, targetConfigFolderURI: URI, useSlashForPath = !isWindows): IStoredWorkspaceFolder {\n\tif (folderURI.scheme !== targetConfigFolderURI.scheme) {\n\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t}\n\n\tlet folderPath = !forceAbsolute ? relativePath(targetConfigFolderURI, folderURI) : undefined;\n\tif (folderPath !== undefined) {\n\t\tif (folderPath.length === 0) {\n\t\t\tfolderPath = '.';\n\t\t} else if (isWindows && folderURI.scheme === Schemas.file && !useSlashForPath) {\n\t\t\t// Windows gets special treatment:\n\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\tfolderPath = folderPath.replace(/\\//g, '\\\\');\n\t\t}\n\t} else {\n\n\t\t// use absolute path\n\t\tif (folderURI.scheme === Schemas.file) {\n\t\t\tfolderPath = folderURI.fsPath;\n\t\t\tif (isWindows) {\n\t\t\t\t// Windows gets special treatment:\n\t\t\t\t// - normalize all paths to get nice casing of drive letters\n\t\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\t\tfolderPath = normalizeDriveLetter(folderPath);\n\t\t\t\tif (useSlashForPath) {\n\t\t\t\t\tfolderPath = toSlashes(folderPath);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isEqualAuthority(folderURI.authority, targetConfigFolderURI.authority)) {\n\t\t\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t\t\t}\n\t\t\tfolderPath = folderURI.path;\n\t\t}\n\t}\n\n\treturn { name: folderName, path: folderPath };\n}\n\n/**\n * Rewrites the content of a workspace file to be saved at a new location.\n * Throws an exception if file is not a valid workspace file\n */\nexport function rewriteWorkspaceFileForNewLocation(rawWorkspaceContents: string, configPathURI: URI, isFromUntitledWorkspace: boolean, targetConfigPathURI: URI) {\n\tlet storedWorkspace = doParseStoredWorkspace(configPathURI, rawWorkspaceContents);\n\n\tconst sourceConfigFolder = dirname(configPathURI);\n\tconst targetConfigFolder = dirname(targetConfigPathURI);\n\n\tconst rewrittenFolders: IStoredWorkspaceFolder[] = [];\n\tconst slashForPath = useSlashForPath(storedWorkspace.folders);\n\n\tfor (const folder of storedWorkspace.folders) {\n\t\tconst folderURI = isRawFileWorkspaceFolder(folder) ? resolvePath(sourceConfigFolder, folder.path) : URI.parse(folder.uri);\n\t\tlet absolute;\n\t\tif (isFromUntitledWorkspace) {\n\t\t\t// if it was an untitled workspace, try to make paths relative\n\t\t\tabsolute = false;\n\t\t} else {\n\t\t\t// for existing workspaces, preserve whether a path was absolute or relative\n\t\t\tabsolute = !isRawFileWorkspaceFolder(folder) || isAbsolute(folder.path);\n\t\t}\n\t\trewrittenFolders.push(getStoredWorkspaceFolder(folderURI, absolute, folder.name, targetConfigFolder, slashForPath));\n\t}\n\n\t// Preserve as much of the existing workspace as possible by using jsonEdit\n\t// and only changing the folders portion.\n\tconst formattingOptions: FormattingOptions = { insertSpaces: false, tabSize: 4, eol: (isLinux || isMacintosh) ? '\\n' : '\\r\\n' };\n\tconst edits = jsonEdit.setProperty(rawWorkspaceContents, ['folders'], rewrittenFolders, formattingOptions);\n\tlet newContent = jsonEdit.applyEdits(rawWorkspaceContents, edits);\n\n\tif (storedWorkspace.remoteAuthority === getRemoteAuthority(targetConfigPathURI)) {\n\t\t// unsaved remote workspaces have the remoteAuthority set. Remove it when no longer nexessary.\n\t\tnewContent = jsonEdit.applyEdits(newContent, jsonEdit.removeProperty(newContent, ['remoteAuthority'], formattingOptions));\n\t}\n\n\treturn newContent;\n}\n\nfunction doParseStoredWorkspace(path: URI, contents: string): IStoredWorkspace {\n\n\t// Parse workspace file\n\tlet storedWorkspace: IStoredWorkspace = json.parse(contents); // use fault tolerant parser\n\n\t// Filter out folders which do not have a path or uri set\n\tif (storedWorkspace && Array.isArray(storedWorkspace.folders)) {\n\t\tstoredWorkspace.folders = storedWorkspace.folders.filter(folder => isStoredWorkspaceFolder(folder));\n\t} else {\n\t\tthrow new Error(`${path} looks like an invalid workspace file.`);\n\t}\n\n\treturn storedWorkspace;\n}\n\nexport function useSlashForPath(storedFolders: IStoredWorkspaceFolder[]): boolean {\n\tif (isWindows) {\n\t\treturn storedFolders.some(folder => isRawFileWorkspaceFolder(folder) && folder.path.indexOf(SLASH) >= 0);\n\t}\n\n\treturn true;\n}\n\n//#region Workspace Storage\n\ninterface ISerializedRecentlyOpened {\n\tworkspaces3: Array<ISerializedWorkspace | string>; // workspace or URI.toString() // added in 1.32\n\tworkspaceLabels?: Array<string | null>; // added in 1.33\n\tfiles2: string[]; // files as URI.toString() // added in 1.32\n\tfileLabels?: Array<string | null>; // added in 1.33\n}\n\ninterface ISerializedWorkspace { id: string; configURIPath: string; }\n\nexport type RecentlyOpenedStorageData = object;\n\nexport function restoreRecentlyOpened(data: RecentlyOpenedStorageData | undefined, logService: ILogService): IRecentlyOpened {\n\tconst result: IRecentlyOpened = { workspaces: [], files: [] };\n\tif (data) {\n\t\tconst restoreGracefully = function <T>(entries: T[], func: (entry: T, index: number) => void) {\n\t\t\tfor (let i = 0; i < entries.length; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tfunc(entries[i], i);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogService.warn(`Error restoring recent entry ${JSON.stringify(entries[i])}: ${e.toString()}. Skip entry.`);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst storedRecents = data as ISerializedRecentlyOpened;\n\t\tif (Array.isArray(storedRecents.workspaces3)) {\n\t\t\trestoreGracefully(storedRecents.workspaces3, (workspace, i) => {\n\t\t\t\tconst label: string | undefined = (Array.isArray(storedRecents.workspaceLabels) && storedRecents.workspaceLabels[i]) || undefined;\n\t\t\t\tif (typeof workspace === 'object' && typeof workspace.id === 'string' && typeof workspace.configURIPath === 'string') {\n\t\t\t\t\tresult.workspaces.push({ label, workspace: { id: workspace.id, configPath: URI.parse(workspace.configURIPath) } });\n\t\t\t\t} else if (typeof workspace === 'string') {\n\t\t\t\t\tresult.workspaces.push({ label, folderUri: URI.parse(workspace) });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (Array.isArray(storedRecents.files2)) {\n\t\t\trestoreGracefully(storedRecents.files2, (file, i) => {\n\t\t\t\tconst label: string | undefined = (Array.isArray(storedRecents.fileLabels) && storedRecents.fileLabels[i]) || undefined;\n\t\t\t\tif (typeof file === 'string') {\n\t\t\t\t\tresult.files.push({ label, fileUri: URI.parse(file) });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function toStoreData(recents: IRecentlyOpened): RecentlyOpenedStorageData {\n\tconst serialized: ISerializedRecentlyOpened = { workspaces3: [], files2: [] };\n\n\tlet hasLabel = false;\n\tconst workspaceLabels: (string | null)[] = [];\n\tfor (const recent of recents.workspaces) {\n\t\tif (isRecentFolder(recent)) {\n\t\t\tserialized.workspaces3.push(recent.folderUri.toString());\n\t\t} else {\n\t\t\tserialized.workspaces3.push({ id: recent.workspace.id, configURIPath: recent.workspace.configPath.toString() });\n\t\t}\n\t\tworkspaceLabels.push(recent.label || null);\n\t\thasLabel = hasLabel || !!recent.label;\n\t}\n\n\tif (hasLabel) {\n\t\tserialized.workspaceLabels = workspaceLabels;\n\t}\n\n\thasLabel = false;\n\n\tconst fileLabels: (string | null)[] = [];\n\tfor (const recent of recents.files) {\n\t\tserialized.files2.push(recent.fileUri.toString());\n\t\tfileLabels.push(recent.label || null);\n\t\thasLabel = hasLabel || !!recent.label;\n\t}\n\n\tif (hasLabel) {\n\t\tserialized.fileLabels = fileLabels;\n\t}\n\n\treturn serialized;\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as resources from 'vs/base/common/resources';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceIdentifier, IStoredWorkspaceFolder, isRawFileWorkspaceFolder, isRawUriWorkspaceFolder, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspaceFolderProvider } from 'vs/base/common/labels';\n\nexport const IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport interface IWorkspaceContextService extends IWorkspaceFolderProvider {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event which fires on workbench state changes.\n\t */\n\treadonly onDidChangeWorkbenchState: Event<WorkbenchState>;\n\n\t/**\n\t * An event which fires on workspace name changes.\n\t */\n\treadonly onDidChangeWorkspaceName: Event<void>;\n\n\t/**\n\t * An event which fires on workspace folders change.\n\t */\n\treadonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent>;\n\n\t/**\n\t * Provides access to the complete workspace object.\n\t */\n\tgetCompleteWorkspace(): Promise<IWorkspace>;\n\n\t/**\n\t * Provides access to the workspace object the window is running with.\n\t * Use `getCompleteWorkspace` to get complete workspace object.\n\t */\n\tgetWorkspace(): IWorkspace;\n\n\t/**\n\t * Return the state of the workbench.\n\t *\n\t * WorkbenchState.EMPTY - if the workbench was opened with empty window or file\n\t * WorkbenchState.FOLDER - if the workbench was opened with a folder\n\t * WorkbenchState.WORKSPACE - if the workbench was opened with a workspace\n\t */\n\tgetWorkbenchState(): WorkbenchState;\n\n\t/**\n\t * Returns the folder for the given resource from the workspace.\n\t * Can be null if there is no workspace or the resource is not inside the workspace.\n\t */\n\tgetWorkspaceFolder(resource: URI): IWorkspaceFolder | null;\n\n\t/**\n\t * Return `true` if the current workspace has the given identifier otherwise `false`.\n\t */\n\tisCurrentWorkspace(workspaceIdentifier: ISingleFolderWorkspaceIdentifier | IWorkspaceIdentifier): boolean;\n\n\t/**\n\t * Returns if the provided resource is inside the workspace or not.\n\t */\n\tisInsideWorkspace(resource: URI): boolean;\n}\n\nexport const enum WorkbenchState {\n\tEMPTY = 1,\n\tFOLDER,\n\tWORKSPACE\n}\n\nexport interface IWorkspaceFoldersChangeEvent {\n\tadded: IWorkspaceFolder[];\n\tremoved: IWorkspaceFolder[];\n\tchanged: IWorkspaceFolder[];\n}\n\nexport namespace IWorkspace {\n\texport function isIWorkspace(thing: unknown): thing is IWorkspace {\n\t\treturn !!(thing && typeof thing === 'object'\n\t\t\t&& typeof (thing as IWorkspace).id === 'string'\n\t\t\t&& Array.isArray((thing as IWorkspace).folders));\n\t}\n}\n\nexport interface IWorkspace {\n\n\t/**\n\t * the unique identifier of the workspace.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * Folders in the workspace.\n\t */\n\treadonly folders: IWorkspaceFolder[];\n\n\t/**\n\t * the location of the workspace configuration\n\t */\n\treadonly configuration?: URI | null;\n}\n\nexport interface IWorkspaceFolderData {\n\n\t/**\n\t * The associated URI for this workspace folder.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * The name of this workspace folder. Defaults to\n\t * the basename of its [uri-path](#Uri.path)\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The ordinal number of this workspace folder.\n\t */\n\treadonly index: number;\n}\n\nexport namespace IWorkspaceFolder {\n\texport function isIWorkspaceFolder(thing: unknown): thing is IWorkspaceFolder {\n\t\treturn !!(thing && typeof thing === 'object'\n\t\t\t&& URI.isUri((thing as IWorkspaceFolder).uri)\n\t\t\t&& typeof (thing as IWorkspaceFolder).name === 'string'\n\t\t\t&& typeof (thing as IWorkspaceFolder).toResource === 'function');\n\t}\n}\n\nexport interface IWorkspaceFolder extends IWorkspaceFolderData {\n\n\t/**\n\t * Given workspace folder relative path, returns the resource with the absolute path.\n\t */\n\ttoResource: (relativePath: string) => URI;\n}\n\nexport class Workspace implements IWorkspace {\n\n\tprivate _foldersMap: TernarySearchTree<URI, WorkspaceFolder> = TernarySearchTree.forUris<WorkspaceFolder>(this._ignorePathCasing);\n\tprivate _folders!: WorkspaceFolder[];\n\n\tconstructor(\n\t\tprivate _id: string,\n\t\tfolders: WorkspaceFolder[],\n\t\tprivate _configuration: URI | null,\n\t\tprivate _ignorePathCasing: (key: URI) => boolean,\n\t) {\n\t\tthis.folders = folders;\n\t}\n\n\tupdate(workspace: Workspace) {\n\t\tthis._id = workspace.id;\n\t\tthis._configuration = workspace.configuration;\n\t\tthis._ignorePathCasing = workspace._ignorePathCasing;\n\t\tthis.folders = workspace.folders;\n\t}\n\n\tget folders(): WorkspaceFolder[] {\n\t\treturn this._folders;\n\t}\n\n\tset folders(folders: WorkspaceFolder[]) {\n\t\tthis._folders = folders;\n\t\tthis.updateFoldersMap();\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget configuration(): URI | null {\n\t\treturn this._configuration;\n\t}\n\n\tset configuration(configuration: URI | null) {\n\t\tthis._configuration = configuration;\n\t}\n\n\tgetFolder(resource: URI): IWorkspaceFolder | null {\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._foldersMap.findSubstr(resource.with({\n\t\t\tscheme: resource.scheme,\n\t\t\tauthority: resource.authority,\n\t\t\tpath: resource.path\n\t\t})) || null;\n\t}\n\n\tprivate updateFoldersMap(): void {\n\t\tthis._foldersMap = TernarySearchTree.forUris<WorkspaceFolder>(this._ignorePathCasing);\n\t\tfor (const folder of this.folders) {\n\t\t\tthis._foldersMap.set(folder.uri, folder);\n\t\t}\n\t}\n\n\ttoJSON(): IWorkspace {\n\t\treturn { id: this.id, folders: this.folders, configuration: this.configuration };\n\t}\n}\n\nexport class WorkspaceFolder implements IWorkspaceFolder {\n\n\treadonly uri: URI;\n\tname: string;\n\tindex: number;\n\n\tconstructor(data: IWorkspaceFolderData,\n\t\treadonly raw?: IStoredWorkspaceFolder) {\n\t\tthis.uri = data.uri;\n\t\tthis.index = data.index;\n\t\tthis.name = data.name;\n\t}\n\n\ttoResource(relativePath: string): URI {\n\t\treturn resources.joinPath(this.uri, relativePath);\n\t}\n\n\ttoJSON(): IWorkspaceFolderData {\n\t\treturn { uri: this.uri, name: this.name, index: this.index };\n\t}\n}\n\nexport function toWorkspaceFolder(resource: URI): WorkspaceFolder {\n\treturn new WorkspaceFolder({ uri: resource, index: 0, name: resources.basenameOrAuthority(resource) }, { uri: resource.toString() });\n}\n\nexport function toWorkspaceFolders(configuredFolders: IStoredWorkspaceFolder[], workspaceConfigFile: URI): WorkspaceFolder[] {\n\tlet result: WorkspaceFolder[] = [];\n\tlet seen: Set<string> = new Set();\n\n\tconst relativeTo = resources.dirname(workspaceConfigFile);\n\tfor (let configuredFolder of configuredFolders) {\n\t\tlet uri: URI | null = null;\n\t\tif (isRawFileWorkspaceFolder(configuredFolder)) {\n\t\t\tif (configuredFolder.path) {\n\t\t\t\turi = resources.resolvePath(relativeTo, configuredFolder.path);\n\t\t\t}\n\t\t} else if (isRawUriWorkspaceFolder(configuredFolder)) {\n\t\t\ttry {\n\t\t\t\turi = URI.parse(configuredFolder.uri);\n\t\t\t\t// this makes sure all workspace folder are absolute\n\t\t\t\tif (uri.path[0] !== '/') {\n\t\t\t\t\turi = uri.with({ path: '/' + uri.path });\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn(e);\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\tif (uri) {\n\t\t\t// remove duplicates\n\t\t\tlet comparisonKey = resources.getComparisonKey(uri);\n\t\t\tif (!seen.has(comparisonKey)) {\n\t\t\t\tseen.add(comparisonKey);\n\n\t\t\t\tconst name = configuredFolder.name || resources.basenameOrAuthority(uri);\n\t\t\t\tresult.push(new WorkspaceFolder({ uri, name, index: result.length }, configuredFolder));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n","import { ITelemetryData } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryInfo, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class TelemetryChannel implements IServerChannel {\n\tconstructor(private service: ITelemetryService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'publicLog': return this.service.publicLog(args[0], args[1], args[2]);\n\t\t\tcase 'publicLog2': return this.service.publicLog2(args[0], args[1], args[2]);\n\t\t\tcase 'publicLogError': return this.service.publicLogError(args[0], args[1]);\n\t\t\tcase 'publicLogError2': return this.service.publicLogError2(args[0], args[1]);\n\t\t\tcase 'setEnabled': return Promise.resolve(this.service.setEnabled(args[0]));\n\t\t\tcase 'getTelemetryInfo': return this.service.getTelemetryInfo();\n\t\t\tcase 'setExperimentProperty': return Promise.resolve(this.service.setExperimentProperty(args[0], args[1]));\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class TelemetryChannelClient implements ITelemetryService {\n\t_serviceBrand: any;\n\n\t// These don't matter; telemetry is sent to the Node side which decides\n\t// whether to send the telemetry event.\n\tpublic isOptedIn = true;\n\tpublic sendErrorTelemetry = true;\n\n\tconstructor(private readonly channel: IChannel) {}\n\n\tpublic publicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog2', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLogError(errorEventName: string, data?: ITelemetryData): Promise<void> {\n\t\treturn this.channel.call('publicLogError', [errorEventName, data]);\n\t}\n\n\tpublic publicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void> {\n\t\treturn this.channel.call('publicLogError2', [eventName, data]);\n\t}\n\n\tpublic setEnabled(value: boolean): void {\n\t\tthis.channel.call('setEnable', [value]);\n\t}\n\n\tpublic getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this.channel.call('getTelemetryInfo');\n\t}\n\n\tpublic setExperimentProperty(name: string, value: string): void {\n\t\tthis.channel.call('setExperimentProperty', [name, value]);\n\t}\n}\n","import * as appInsights from 'applicationinsights';\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as os from 'os';\n\nclass Channel {\n\tpublic get _sender() {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic get _buffer() {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic setUseDiskRetryCaching(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic send(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic triggerSend(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n}\n\nexport class TelemetryClient  {\n\tpublic context: any = undefined;\n\tpublic commonProperties: any = undefined;\n\tpublic config: any = {};\n\n\tpublic channel: any = new Channel();\n\n\tpublic addTelemetryProcessor(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic clearTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic runTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackTrace(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackMetric(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackException(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic track(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequestSync(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackEvent(options: appInsights.Contracts.EventTelemetry): void {\n\t\tif (!options.properties) {\n\t\t\toptions.properties = {};\n\t\t}\n\t\tif (!options.measurements) {\n\t\t\toptions.measurements = {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst cpus = os.cpus();\n\t\t\toptions.measurements.cores = cpus.length;\n\t\t\toptions.properties['common.cpuModel'] = cpus[0].model;\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.measurements.memoryFree = os.freemem();\n\t\t\toptions.measurements.memoryTotal = os.totalmem();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.properties['common.shell'] = os.userInfo().shell;\n\t\t\toptions.properties['common.release'] = os.release();\n\t\t\toptions.properties['common.arch'] = os.arch();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\tconst url = process.env.TELEMETRY_URL || 'https://v1.telemetry.coder.com/track';\n\t\t\tconst request = (/^http:/.test(url) ? http : https).request(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t});\n\t\t\trequest.on('error', () => { /* We don't care. */ });\n\t\t\trequest.write(JSON.stringify(options));\n\t\t\trequest.end();\n\t\t} catch (error) {}\n\t}\n\n\tpublic flush(options: { callback: (v: string) => void }): void {\n\t\tif (options.callback) {\n\t\t\toptions.callback('');\n\t\t}\n\t}\n}\n","import { logger as baseLogger } from '@coder/logger';\nexport const logger = baseLogger.named('vscode');\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as util from 'util';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport * as lp from 'vs/base/node/languagePacks';\nimport product from 'vs/platform/product/common/product';\nimport { Translations } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst configurations = new Map<string, Promise<lp.NLSConfiguration>>();\nconst metadataPath = path.join(getPathFromAmdModule(require, ''), 'nls.metadata.json');\n\nexport const isInternalConfiguration = (config: lp.NLSConfiguration): config is lp.InternalNLSConfiguration => {\n\treturn config && !!(<lp.InternalNLSConfiguration>config)._languagePackId;\n};\n\nconst DefaultConfiguration = {\n\tlocale: 'en',\n\tavailableLanguages: {},\n};\n\nexport const getNlsConfiguration = async (locale: string, userDataPath: string): Promise<lp.NLSConfiguration> => {\n\tconst id = `${locale}: ${userDataPath}`;\n\tif (!configurations.has(id)) {\n\t\tconfigurations.set(id, new Promise(async (resolve) =>  {\n\t\t\tconst config = product.commit && await util.promisify(fs.exists)(metadataPath)\n\t\t\t\t? await lp.getNLSConfiguration(product.commit, userDataPath, metadataPath, locale)\n\t\t\t\t: DefaultConfiguration;\n\t\t\tif (isInternalConfiguration(config)) {\n\t\t\t\tconfig._languagePackSupport = true;\n\t\t\t}\n\t\t\t// If the configuration has no results keep trying since code-server\n\t\t\t// doesn't restart when a language is installed so this result would\n\t\t\t// persist (the plugin might not be installed yet or something).\n\t\t\tif (config.locale !== 'en' && config.locale !== 'en-us' && Object.keys(config.availableLanguages).length === 0) {\n\t\t\t\tconfigurations.delete(id);\n\t\t\t}\n\t\t\tresolve(config);\n\t\t}));\n\t}\n\treturn configurations.get(id)!;\n};\n\nexport const getTranslations = async (locale: string, userDataPath: string): Promise<Translations> => {\n\tconst config = await getNlsConfiguration(locale, userDataPath);\n\tif (isInternalConfiguration(config)) {\n\t\ttry {\n\t\t\treturn JSON.parse(await util.promisify(fs.readFile)(config._translationsConfigFile, 'utf8'));\n\t\t} catch (error) { /* Nothing yet. */}\n\t}\n\treturn {};\n};\n\nexport const getLocaleFromConfig = async (userDataPath: string): Promise<string> => {\n\tconst files = ['locale.json', 'argv.json'];\n\tfor (let i = 0; i < files.length; ++i) {\n\t\ttry {\n\t\t\tconst localeConfigUri = path.join(userDataPath, 'User', files[i]);\n\t\t\tconst content = stripComments(await util.promisify(fs.readFile)(localeConfigUri, 'utf8'));\n\t\t\treturn JSON.parse(content).locale;\n\t\t} catch (error) { /* Ignore. */ }\n\t}\n\treturn 'en';\n};\n\n// Taken from src/main.js in the main VS Code source.\nconst stripComments = (content: string): string => {\n\tconst regexp = /('(?:[^\\\\']*(?:\\\\.)?)*')|('(?:[^\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\n\n\treturn content.replace(regexp, (match, _m1, _m2, m3, m4) => {\n\t\t// Only one of m1, m2, m3, m4 matches\n\t\tif (m3) {\n\t\t\t// A block comment. Replace with nothing\n\t\t\treturn '';\n\t\t} else if (m4) {\n\t\t\t// A line comment. If it ends in \\r?\\n then keep it.\n\t\t\tconst length_1 = m4.length;\n\t\t\tif (length_1 > 2 && m4[length_1 - 1] === '\\n') {\n\t\t\t\treturn m4[length_1 - 2] === '\\r' ? '\\r\\n' : '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\t// We match a string\n\t\t\treturn match;\n\t\t}\n\t});\n};\n","import { field, Logger, logger } from '@coder/logger';\nimport * as cp from 'child_process';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter } from 'vs/base/common/event';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ISocket } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { IExtHostReadyMessage } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\n\nexport abstract class Connection {\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\tprivate disposed = false;\n\tprivate _offline: number | undefined;\n\n\tpublic constructor(protected protocol: Protocol, public readonly token: string) {}\n\n\tpublic get offline(): number | undefined {\n\t\treturn this._offline;\n\t}\n\n\tpublic reconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis._offline = undefined;\n\t\tthis.doReconnect(socket, buffer);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis.doDispose();\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\tprotected setOffline(): void {\n\t\tif (!this._offline) {\n\t\t\tthis._offline = Date.now();\n\t\t}\n\t}\n\n\t/**\n\t * Set up the connection on a new socket.\n\t */\n\tprotected abstract doReconnect(socket: ISocket, buffer: VSBuffer): void;\n\tprotected abstract doDispose(): void;\n}\n\n/**\n * Used for all the IPC channels.\n */\nexport class ManagementConnection extends Connection {\n\tpublic constructor(protected protocol: Protocol, token: string) {\n\t\tsuper(protocol, token);\n\t\tprotocol.onClose(() => this.dispose()); // Explicit close.\n\t\tprotocol.onSocketClose(() => this.setOffline()); // Might reconnect.\n\t}\n\n\tprotected doDispose(): void {\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tthis.protocol.getUnderlyingSocket().destroy();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis.protocol.beginAcceptReconnection(socket, buffer);\n\t\tthis.protocol.endAcceptReconnection();\n\t}\n}\n\ninterface DisconnectedMessage {\n\ttype: 'VSCODE_EXTHOST_DISCONNECTED';\n}\n\ninterface ConsoleMessage {\n\ttype: '__$console';\n\t// See bootstrap-fork.js#L135.\n\tseverity: 'log' | 'warn' | 'error';\n\targuments: any[];\n}\n\ntype ExtHostMessage = DisconnectedMessage | ConsoleMessage | IExtHostReadyMessage;\n\nexport class ExtensionHostConnection extends Connection {\n\tprivate process?: cp.ChildProcess;\n\tprivate readonly logger: Logger;\n\n\tpublic constructor(\n\t\tlocale:string, protocol: Protocol, buffer: VSBuffer, token: string,\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t) {\n\t\tsuper(protocol, token);\n\t\tthis.logger = logger.named('exthost', field('token', token));\n\t\tthis.protocol.dispose();\n\t\tthis.spawn(locale, buffer).then((p) => this.process = p);\n\t\tthis.protocol.getUnderlyingSocket().pause();\n\t}\n\n\tprotected doDispose(): void {\n\t\tif (this.process) {\n\t\t\tthis.process.kill();\n\t\t}\n\t\tthis.protocol.getUnderlyingSocket().destroy();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\t// This is just to set the new socket.\n\t\tthis.protocol.beginAcceptReconnection(socket, null);\n\t\tthis.protocol.dispose();\n\t\tthis.sendInitMessage(buffer);\n\t}\n\n\tprivate sendInitMessage(buffer: VSBuffer): void {\n\t\tconst socket = this.protocol.getUnderlyingSocket();\n\t\tsocket.pause();\n\t\tthis.logger.trace('Sending socket');\n\t\tthis.process!.send({ // Process must be set at this point.\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_SOCKET',\n\t\t\tinitialDataChunk: (buffer.buffer as Buffer).toString('base64'),\n\t\t\tskipWebSocketFrames: this.protocol.getSocket() instanceof NodeSocket,\n\t\t}, socket);\n\t}\n\n\tprivate async spawn(locale: string, buffer: VSBuffer): Promise<cp.ChildProcess> {\n\t\tthis.logger.trace('Getting NLS configuration...');\n\t\tconst config = await getNlsConfiguration(locale, this.environment.userDataPath);\n\t\tthis.logger.trace('Spawning extension host...');\n\t\tconst proc = cp.fork(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t// While not technically necessary, makes it easier to tell which process\n\t\t\t// bootstrap-fork is executing. Can also do pkill -f extensionHost\n\t\t\t// Other spawns in the VS Code codebase behave similarly.\n\t\t\t[ '--type=extensionHost' ],\n\t\t\t{\n\t\t\t\tenv: {\n\t\t\t\t\t...process.env,\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/workbench/services/extensions/node/extensionHostProcess',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_EXTHOST_WILL_SEND_SOCKET: 'true',\n\t\t\t\t\tVSCODE_HANDLES_UNCAUGHT_ERRORS: 'true',\n\t\t\t\t\tVSCODE_LOG_STACK: 'false',\n\t\t\t\t\tVSCODE_LOG_LEVEL: process.env.LOG_LEVEL,\n\t\t\t\t\tVSCODE_NLS_CONFIG: JSON.stringify(config),\n\t\t\t\t},\n\t\t\t\tsilent: true,\n\t\t\t},\n\t\t);\n\n\t\tproc.on('error', (error) => {\n\t\t\tthis.logger.error('Exited unexpectedly', field('error', error));\n\t\t\tthis.dispose();\n\t\t});\n\t\tproc.on('exit', (code) => {\n\t\t\tthis.logger.trace('Exited', field('code', code));\n\t\t\tthis.dispose();\n\t\t});\n\t\tif (proc.stdout && proc.stderr) {\n\t\t\tproc.stdout.setEncoding('utf8').on('data', (d) => this.logger.info(d));\n\t\t\tproc.stderr.setEncoding('utf8').on('data', (d) => this.logger.error(d));\n\t\t}\n\n\t\tproc.on('message', (event: ExtHostMessage) => {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase '__$console':\n\t\t\t\t\tconst fn = this.logger[event.severity === 'log' ? 'info' : event.severity];\n\t\t\t\t\tif (fn) {\n\t\t\t\t\t\tfn.bind(this.logger)('console', field('arguments', event.arguments));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logger.error('Unexpected severity', field('event', event));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VSCODE_EXTHOST_DISCONNECTED':\n\t\t\t\t\tthis.logger.trace('Going offline');\n\t\t\t\t\tthis.setOffline();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VSCODE_EXTHOST_IPC_READY':\n\t\t\t\t\tthis.logger.trace('Got ready message');\n\t\t\t\t\tthis.sendInitMessage(buffer);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.logger.error('Unexpected message', field('event', event));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tthis.logger.trace('Waiting for handshake...');\n\t\treturn proc;\n\t}\n}\n","import { field } from '@coder/logger';\nimport * as net from 'net';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { AuthRequest, ConnectionTypeRequest, HandshakeMessage } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { logger } from 'vs/server/node/logger';\n\nexport interface SocketOptions {\n\treadonly reconnectionToken: string;\n\treadonly reconnection: boolean;\n\treadonly skipWebSocketFrames: boolean;\n}\n\nexport class Protocol extends PersistentProtocol {\n\tpublic constructor(socket: net.Socket, public readonly options: SocketOptions) {\n\t\tsuper(\n\t\t\toptions.skipWebSocketFrames\n\t\t\t\t? new NodeSocket(socket)\n\t\t\t\t: new WebSocketNodeSocket(new NodeSocket(socket)),\n\t\t);\n\t}\n\n\tpublic getUnderlyingSocket(): net.Socket {\n\t\tconst socket = this.getSocket();\n\t\treturn socket instanceof NodeSocket\n\t\t\t? socket.socket\n\t\t\t: (socket as WebSocketNodeSocket).socket.socket;\n\t}\n\n\t/**\n\t * Perform a handshake to get a connection request.\n\t */\n\tpublic handshake(): Promise<ConnectionTypeRequest> {\n\t\tlogger.trace('Protocol handshake', field('token', this.options.reconnectionToken));\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\tlogger.error('Handshake timed out', field('token', this.options.reconnectionToken));\n\t\t\t\treject(new Error('timed out'));\n\t\t\t}, 10000); // Matches the client timeout.\n\n\t\t\tconst handler = this.onControlMessage((rawMessage) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst raw = rawMessage.toString();\n\t\t\t\t\tlogger.trace('Protocol message', field('token', this.options.reconnectionToken), field('message', raw));\n\t\t\t\t\tconst message = JSON.parse(raw);\n\t\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\tcase 'auth':\n\t\t\t\t\t\t\treturn this.authenticate(message);\n\t\t\t\t\t\tcase 'connectionType':\n\t\t\t\t\t\t\thandler.dispose();\n\t\t\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\t\t\treturn resolve(message);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unrecognized message type');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandler.dispose();\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Kick off the handshake in case we missed the client's opening shot.\n\t\t\t// TODO: Investigate why that message seems to get lost.\n\t\t\tthis.authenticate();\n\t\t});\n\t}\n\n\t/**\n\t * TODO: This ignores the authentication process entirely for now.\n\t */\n\tprivate authenticate(_?: AuthRequest): void {\n\t\tthis.sendMessage({ type: 'sign', data: '' });\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tpublic tunnel(): void {\n\t\tthrow new Error('Tunnel is not implemented yet');\n\t}\n\n\t/**\n\t * Send a handshake message. In the case of the extension host, it just sends\n\t * back a debug port.\n\t */\n\tpublic sendMessage(message: HandshakeMessage | { debugPort?: number } ): void {\n\t\tthis.sendControl(VSBuffer.fromString(JSON.stringify(message)));\n\t}\n}\n","import { URITransformer } from 'vs/base/common/uriIpc';\n\nexport const getUriTransformer = (remoteAuthority: string): URITransformer => {\n\treturn new URITransformer(remoteAuthority);\n};\n\n/**\n * Encode a path for opening via the folder or workspace query parameter. This\n * preserves slashes so it can be edited by hand more easily.\n */\nexport const encodePath = (path: string): string => {\n\treturn path.split('/').map((p) => encodeURIComponent(p)).join('/');\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\n\nexport const IEnvironmentVariableService = createDecorator<IEnvironmentVariableService>('environmentVariableService');\n\nexport enum EnvironmentVariableMutatorType {\n\tReplace = 1,\n\tAppend = 2,\n\tPrepend = 3\n}\n\nexport interface IEnvironmentVariableMutator {\n\treadonly value: string;\n\treadonly type: EnvironmentVariableMutatorType;\n}\n\nexport interface IExtensionOwnedEnvironmentVariableMutator extends IEnvironmentVariableMutator {\n\treadonly extensionIdentifier: string;\n}\n\nexport interface IEnvironmentVariableCollection {\n\treadonly map: ReadonlyMap<string, IEnvironmentVariableMutator>;\n}\n\nexport interface IEnvironmentVariableCollectionWithPersistence extends IEnvironmentVariableCollection {\n\treadonly persistent: boolean;\n}\n\nexport interface IMergedEnvironmentVariableCollectionDiff {\n\tadded: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\tchanged: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\tremoved: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n}\n\n/**\n * Represents an environment variable collection that results from merging several collections\n * together.\n */\nexport interface IMergedEnvironmentVariableCollection {\n\treadonly map: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\n\t/**\n\t * Applies this collection to a process environment.\n\t */\n\tapplyToProcessEnvironment(env: IProcessEnvironment): void;\n\n\t/**\n\t * Generates a diff of this connection against another. Returns undefined if the collections are\n\t * the same.\n\t */\n\tdiff(other: IMergedEnvironmentVariableCollection): IMergedEnvironmentVariableCollectionDiff | undefined;\n}\n\n/**\n * Tracks and persists environment variable collections as defined by extensions.\n */\nexport interface IEnvironmentVariableService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Gets a single collection constructed by merging all environment variable collections into\n\t * one.\n\t */\n\treadonly collections: ReadonlyMap<string, IEnvironmentVariableCollection>;\n\n\t/**\n\t * Gets a single collection constructed by merging all environment variable collections into\n\t * one.\n\t */\n\treadonly mergedCollection: IMergedEnvironmentVariableCollection;\n\n\t/**\n\t * An event that is fired when an extension's environment variable collection changes, the event\n\t * provides the new merged collection.\n\t */\n\tonDidChangeCollections: Event<IMergedEnvironmentVariableCollection>;\n\n\t/**\n\t * Sets an extension's environment variable collection.\n\t */\n\tset(extensionIdentifier: string, collection: IEnvironmentVariableCollection): void;\n\n\t/**\n\t * Deletes an extension's environment variable collection.\n\t */\n\tdelete(extensionIdentifier: string): void;\n}\n\n/** [variable, mutator] */\nexport type ISerializableEnvironmentVariableCollection = [string, IEnvironmentVariableMutator][];\n\nexport interface IEnvironmentVariableInfo {\n\treadonly requiresAction: boolean;\n\tgetInfo(): string;\n\tgetIcon(): ThemeIcon;\n\tgetActions?(): { label: string, iconClass?: string, run: () => void, commandId: string }[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentVariableCollection, EnvironmentVariableMutatorType, IMergedEnvironmentVariableCollection, IMergedEnvironmentVariableCollectionDiff, IExtensionOwnedEnvironmentVariableMutator } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { IProcessEnvironment, isWindows } from 'vs/base/common/platform';\n\nexport class MergedEnvironmentVariableCollection implements IMergedEnvironmentVariableCollection {\n\treadonly map: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\n\tconstructor(collections: Map<string, IEnvironmentVariableCollection>) {\n\t\tcollections.forEach((collection, extensionIdentifier) => {\n\t\t\tconst it = collection.map.entries();\n\t\t\tlet next = it.next();\n\t\t\twhile (!next.done) {\n\t\t\t\tconst variable = next.value[0];\n\t\t\t\tlet entry = this.map.get(variable);\n\t\t\t\tif (!entry) {\n\t\t\t\t\tentry = [];\n\t\t\t\t\tthis.map.set(variable, entry);\n\t\t\t\t}\n\n\t\t\t\t// If the first item in the entry is replace ignore any other entries as they would\n\t\t\t\t// just get replaced by this one.\n\t\t\t\tif (entry.length > 0 && entry[0].type === EnvironmentVariableMutatorType.Replace) {\n\t\t\t\t\tnext = it.next();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Mutators get applied in the reverse order than they are created\n\t\t\t\tconst mutator = next.value[1];\n\t\t\t\tentry.unshift({\n\t\t\t\t\textensionIdentifier,\n\t\t\t\t\tvalue: mutator.value,\n\t\t\t\t\ttype: mutator.type\n\t\t\t\t});\n\n\t\t\t\tnext = it.next();\n\t\t\t}\n\t\t});\n\t}\n\n\tapplyToProcessEnvironment(env: IProcessEnvironment): void {\n\t\tlet lowerToActualVariableNames: { [lowerKey: string]: string | undefined } | undefined;\n\t\tif (isWindows) {\n\t\t\tlowerToActualVariableNames = {};\n\t\t\tObject.keys(env).forEach(e => lowerToActualVariableNames![e.toLowerCase()] = e);\n\t\t}\n\t\tthis.map.forEach((mutators, variable) => {\n\t\t\tconst actualVariable = isWindows ? lowerToActualVariableNames![variable.toLowerCase()] || variable : variable;\n\t\t\tmutators.forEach(mutator => {\n\t\t\t\tswitch (mutator.type) {\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Append:\n\t\t\t\t\t\tenv[actualVariable] = (env[actualVariable] || '') + mutator.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Prepend:\n\t\t\t\t\t\tenv[actualVariable] = mutator.value + (env[actualVariable] || '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Replace:\n\t\t\t\t\t\tenv[actualVariable] = mutator.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tdiff(other: IMergedEnvironmentVariableCollection): IMergedEnvironmentVariableCollectionDiff | undefined {\n\t\tconst added: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\t\tconst changed: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\t\tconst removed: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\n\t\t// Find added\n\t\tother.map.forEach((otherMutators, variable) => {\n\t\t\tconst currentMutators = this.map.get(variable);\n\t\t\tconst result = getMissingMutatorsFromArray(otherMutators, currentMutators);\n\t\t\tif (result) {\n\t\t\t\tadded.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\t// Find removed\n\t\tthis.map.forEach((currentMutators, variable) => {\n\t\t\tconst otherMutators = other.map.get(variable);\n\t\t\tconst result = getMissingMutatorsFromArray(currentMutators, otherMutators);\n\t\t\tif (result) {\n\t\t\t\tremoved.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\t// Find changed\n\t\tthis.map.forEach((currentMutators, variable) => {\n\t\t\tconst otherMutators = other.map.get(variable);\n\t\t\tconst result = getChangedMutatorsFromArray(currentMutators, otherMutators);\n\t\t\tif (result) {\n\t\t\t\tchanged.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\tif (added.size === 0 && changed.size === 0 && removed.size === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn { added, changed, removed };\n\t}\n}\n\nfunction getMissingMutatorsFromArray(\n\tcurrent: IExtensionOwnedEnvironmentVariableMutator[],\n\tother: IExtensionOwnedEnvironmentVariableMutator[] | undefined\n): IExtensionOwnedEnvironmentVariableMutator[] | undefined {\n\t// If it doesn't exist, all are removed\n\tif (!other) {\n\t\treturn current;\n\t}\n\n\t// Create a map to help\n\tconst otherMutatorExtensions = new Set<string>();\n\tother.forEach(m => otherMutatorExtensions.add(m.extensionIdentifier));\n\n\t// Find entries removed from other\n\tconst result: IExtensionOwnedEnvironmentVariableMutator[] = [];\n\tcurrent.forEach(mutator => {\n\t\tif (!otherMutatorExtensions.has(mutator.extensionIdentifier)) {\n\t\t\tresult.push(mutator);\n\t\t}\n\t});\n\n\treturn result.length === 0 ? undefined : result;\n}\n\nfunction getChangedMutatorsFromArray(\n\tcurrent: IExtensionOwnedEnvironmentVariableMutator[],\n\tother: IExtensionOwnedEnvironmentVariableMutator[] | undefined\n): IExtensionOwnedEnvironmentVariableMutator[] | undefined {\n\t// If it doesn't exist, none are changed (they are removed)\n\tif (!other) {\n\t\treturn undefined;\n\t}\n\n\t// Create a map to help\n\tconst otherMutatorExtensions = new Map<string, IExtensionOwnedEnvironmentVariableMutator>();\n\tother.forEach(m => otherMutatorExtensions.set(m.extensionIdentifier, m));\n\n\t// Find entries that exist in both but are not equal\n\tconst result: IExtensionOwnedEnvironmentVariableMutator[] = [];\n\tcurrent.forEach(mutator => {\n\t\tconst otherMutator = otherMutatorExtensions.get(mutator.extensionIdentifier);\n\t\tif (otherMutator && (mutator.type !== otherMutator.type || mutator.value !== otherMutator.value)) {\n\t\t\t// Return the new result, not the old one\n\t\t\tresult.push(otherMutator);\n\t\t}\n\t});\n\n\treturn result.length === 0 ? undefined : result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentVariableMutator, ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\n\n// This file is shared between the renderer and extension host\n\nexport function serializeEnvironmentVariableCollection(collection: ReadonlyMap<string, IEnvironmentVariableMutator>): ISerializableEnvironmentVariableCollection {\n\treturn [...collection.entries()];\n}\n\nexport function deserializeEnvironmentVariableCollection(\n\tserializedCollection: ISerializableEnvironmentVariableCollection\n): Map<string, IEnvironmentVariableMutator> {\n\treturn new Map<string, IEnvironmentVariableMutator>(serializedCollection);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { URI } from 'vs/base/common/uri';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { IEnvironmentVariableInfo } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { IExtensionPointDescriptor } from 'vs/workbench/services/extensions/common/extensionsRegistry';\n\nexport const TERMINAL_VIEW_ID = 'terminal';\n\n/** A context key that is set when there is at least one opened integrated terminal. */\nexport const KEYBINDING_CONTEXT_TERMINAL_IS_OPEN = new RawContextKey<boolean>('terminalIsOpen', false);\n\n/** A context key that is set when the integrated terminal has focus. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FOCUS = new RawContextKey<boolean>('terminalFocus', false);\n\nexport const KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE_KEY = 'terminalShellType';\n/** A context key that is set to the detected shell for the most recently active terminal, this is set to the last known value when no terminals exist. */\nexport const KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE = new RawContextKey<string>(KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE_KEY, undefined);\n\n/** A context key that is set when the integrated terminal does not have focus. */\nexport const KEYBINDING_CONTEXT_TERMINAL_NOT_FOCUSED = KEYBINDING_CONTEXT_TERMINAL_FOCUS.toNegated();\n\n/** A context key that is set when the user is navigating the accessibility tree */\nexport const KEYBINDING_CONTEXT_TERMINAL_A11Y_TREE_FOCUS = new RawContextKey<boolean>('terminalA11yTreeFocus', false);\n\n/** A keybinding context key that is set when the integrated terminal has text selected. */\nexport const KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED = new RawContextKey<boolean>('terminalTextSelected', false);\n/** A keybinding context key that is set when the integrated terminal does not have text selected. */\nexport const KEYBINDING_CONTEXT_TERMINAL_TEXT_NOT_SELECTED = KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED.toNegated();\n\n/**  A context key that is set when the find widget in integrated terminal is visible. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_VISIBLE = new RawContextKey<boolean>('terminalFindVisible', false);\n/**  A context key that is set when the find widget in integrated terminal is not visible. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_NOT_VISIBLE = KEYBINDING_CONTEXT_TERMINAL_FIND_VISIBLE.toNegated();\n/**  A context key that is set when the find widget find input in integrated terminal is focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED = new RawContextKey<boolean>('terminalFindInputFocused', false);\n/**  A context key that is set when the find widget in integrated terminal is focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_FOCUSED = new RawContextKey<boolean>('terminalFindFocused', false);\n/**  A context key that is set when the find widget find input in integrated terminal is not focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_NOT_FOCUSED = KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED.toNegated();\n\nexport const KEYBINDING_CONTEXT_TERMINAL_PROCESS_SUPPORTED = new RawContextKey<boolean>('terminalProcessSupported', false);\n\nexport const IS_WORKSPACE_SHELL_ALLOWED_STORAGE_KEY = 'terminal.integrated.isWorkspaceShellAllowed';\nexport const NEVER_MEASURE_RENDER_TIME_STORAGE_KEY = 'terminal.integrated.neverMeasureRenderTime';\nexport const SHOW_TERMINAL_CONFIG_PROMPT = 'terminal.integrated.showTerminalConfigPrompt';\n// The creation of extension host terminals is delayed by this value (milliseconds). The purpose of\n// this delay is to allow the terminal instance to initialize correctly and have its ID set before\n// trying to create the corressponding object on the ext host.\nexport const EXT_HOST_CREATION_DELAY = 100;\n\nexport const TerminalCursorStyle = {\n\tBLOCK: 'block',\n\tLINE: 'line',\n\tUNDERLINE: 'underline'\n};\n\nexport const TERMINAL_CONFIG_SECTION = 'terminal.integrated';\n\nexport const TERMINAL_ACTION_CATEGORY = nls.localize('terminalCategory', \"Terminal\");\n\nexport const DEFAULT_LETTER_SPACING = 0;\nexport const MINIMUM_LETTER_SPACING = -5;\nexport const DEFAULT_LINE_HEIGHT = 1;\n\nexport const MINIMUM_FONT_WEIGHT = 1;\nexport const MAXIMUM_FONT_WEIGHT = 1000;\nexport const DEFAULT_FONT_WEIGHT = 'normal';\nexport const DEFAULT_BOLD_FONT_WEIGHT = 'bold';\nexport const SUGGESTIONS_FONT_WEIGHT = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport type FontWeight = 'normal' | 'bold' | number;\n\nexport interface ITerminalConfiguration {\n\tshell: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tautomationShell: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tshellArgs: {\n\t\tlinux: string[];\n\t\tosx: string[];\n\t\twindows: string[];\n\t};\n\tmacOptionIsMeta: boolean;\n\tmacOptionClickForcesSelection: boolean;\n\trendererType: 'auto' | 'canvas' | 'dom' | 'experimentalWebgl';\n\trightClickBehavior: 'default' | 'copyPaste' | 'paste' | 'selectWord';\n\tcursorBlinking: boolean;\n\tcursorStyle: string;\n\tcursorWidth: number;\n\tdrawBoldTextInBrightColors: boolean;\n\tfastScrollSensitivity: number;\n\tfontFamily: string;\n\tfontWeight: FontWeight;\n\tfontWeightBold: FontWeight;\n\tminimumContrastRatio: number;\n\tmouseWheelScrollSensitivity: number;\n\tsendKeybindingsToShell: boolean;\n\t// fontLigatures: boolean;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tdetectLocale: 'auto' | 'off' | 'on';\n\tscrollback: number;\n\tcommandsToSkipShell: string[];\n\tallowChords: boolean;\n\tallowMnemonics: boolean;\n\tcwd: string;\n\tconfirmOnExit: boolean;\n\tenableBell: boolean;\n\tinheritEnv: boolean;\n\tenv: {\n\t\tlinux: { [key: string]: string };\n\t\tosx: { [key: string]: string };\n\t\twindows: { [key: string]: string };\n\t};\n\tenvironmentChangesIndicator: 'off' | 'on' | 'warnonly';\n\tshowExitAlert: boolean;\n\tsplitCwd: 'workspaceRoot' | 'initial' | 'inherited';\n\twindowsEnableConpty: boolean;\n\twordSeparators: string;\n\texperimentalUseTitleEvent: boolean;\n\tenableFileLinks: boolean;\n\tunicodeVersion: '6' | '11';\n\texperimentalLinkProvider: boolean;\n\tlocalEchoLatencyThreshold: number;\n\tlocalEchoExcludePrograms: ReadonlyArray<string>;\n\tlocalEchoStyle: 'bold' | 'dim' | 'italic' | 'underlined' | 'inverted' | string;\n\tserverSpawn: boolean;\n\tenablePersistentSessions: boolean;\n}\n\nexport const DEFAULT_LOCAL_ECHO_EXCLUDE: ReadonlyArray<string> = ['vim', 'vi', 'nano', 'tmux'];\n\nexport interface ITerminalConfigHelper {\n\tconfig: ITerminalConfiguration;\n\n\tonWorkspacePermissionsChanged: Event<boolean>;\n\n\tconfigFontIsMonospace(): boolean;\n\tgetFont(): ITerminalFont;\n\t/** Sets whether a workspace shell configuration is allowed or not */\n\tsetWorkspaceShellAllowed(isAllowed: boolean): void;\n\tcheckWorkspaceShellPermissions(osOverride?: OperatingSystem): boolean;\n\tshowRecommendations(shellLaunchConfig: IShellLaunchConfig): void;\n}\n\nexport interface ITerminalFont {\n\tfontFamily: string;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tcharWidth?: number;\n\tcharHeight?: number;\n}\n\nexport interface ITerminalEnvironment {\n\t[key: string]: string | null;\n}\n\nexport interface IRemoteTerminalAttachTarget {\n\tid: number;\n\tpid: number;\n\ttitle: string;\n\tcwd: string;\n\tworkspaceId: string;\n\tworkspaceName: string;\n}\n\nexport interface IShellLaunchConfig {\n\t/**\n\t * The name of the terminal, if this is not set the name of the process will be used.\n\t */\n\tname?: string;\n\n\t/**\n\t * The shell executable (bash, cmd, etc.).\n\t */\n\texecutable?: string;\n\n\t/**\n\t * The CLI arguments to use with executable, a string[] is in argv format and will be escaped,\n\t * a string is in \"CommandLine\" pre-escaped format and will be used as is. The string option is\n\t * only supported on Windows and will throw an exception if used on macOS or Linux.\n\t */\n\targs?: string[] | string;\n\n\t/**\n\t * The current working directory of the terminal, this overrides the `terminal.integrated.cwd`\n\t * settings key.\n\t */\n\tcwd?: string | URI;\n\n\t/**\n\t * A custom environment for the terminal, if this is not set the environment will be inherited\n\t * from the VS Code process.\n\t */\n\tenv?: ITerminalEnvironment;\n\n\t/**\n\t * Whether to ignore a custom cwd from the `terminal.integrated.cwd` settings key (e.g. if the\n\t * shell is being launched by an extension).\n\t */\n\tignoreConfigurationCwd?: boolean;\n\n\t/** Whether to wait for a key press before closing the terminal. */\n\twaitOnExit?: boolean | string;\n\n\t/**\n\t * A string including ANSI escape sequences that will be written to the terminal emulator\n\t * _before_ the terminal process has launched, a trailing \\n is added at the end of the string.\n\t * This allows for example the terminal instance to display a styled message as the first line\n\t * of the terminal. Use \\x1b over \\033 or \\e for the escape control character.\n\t */\n\tinitialText?: string;\n\n\t/**\n\t * Whether an extension is controlling the terminal via a `vscode.Pseudoterminal`.\n\t */\n\tisExtensionTerminal?: boolean;\n\n\t/**\n\t * This is a terminal that attaches to an already running remote terminal.\n\t */\n\tremoteAttach?: { id: number; pid: number; title: string; cwd: string; };\n\n\t/**\n\t * Whether the terminal process environment should be exactly as provided in\n\t * `TerminalOptions.env`. When this is false (default), the environment will be based on the\n\t * window's environment and also apply configured platform settings like\n\t * `terminal.integrated.windows.env` on top. When this is true, the complete environment must be\n\t * provided as nothing will be inherited from the process or any configuration.\n\t */\n\tstrictEnv?: boolean;\n\n\t/**\n\t * When enabled the terminal will run the process as normal but not be surfaced to the user\n\t * until `Terminal.show` is called. The typical usage for this is when you need to run\n\t * something that may need interactivity but only want to tell the user about it when\n\t * interaction is needed. Note that the terminals will still be exposed to all extensions\n\t * as normal.\n\t */\n\thideFromUser?: boolean;\n\n\t/**\n\t * Whether this terminal is not a terminal that the user directly created and uses, but rather\n\t * a terminal used to drive some VS Code feature.\n\t */\n\tisFeatureTerminal?: boolean;\n}\n\n/**\n * Provides access to native Windows calls that can be injected into non-native layers.\n */\nexport interface ITerminalNativeWindowsDelegate {\n\t/**\n\t * Gets the Windows build number, eg. this would be `19041` for Windows 10 version 2004\n\t */\n\tgetWindowsBuildNumber(): number;\n\t/**\n\t * Converts a regular Windows path into the WSL path equivalent, eg. `C:\\` -> `/mnt/c`\n\t * @param path The Windows path.\n\t */\n\tgetWslPath(path: string): Promise<string>;\n}\n\nexport interface IShellDefinition {\n\tlabel: string;\n\tpath: string;\n}\n\nexport interface ITerminalDimensions {\n\t/**\n\t * The columns of the terminal.\n\t */\n\treadonly cols: number;\n\n\t/**\n\t * The rows of the terminal.\n\t */\n\treadonly rows: number;\n}\n\nexport interface ITerminalDimensionsOverride extends ITerminalDimensions {\n\t/**\n\t * indicate that xterm must receive these exact dimensions, even if they overflow the ui!\n\t */\n\tforceExactSize?: boolean;\n}\n\nexport interface ICommandTracker {\n\tscrollToPreviousCommand(): void;\n\tscrollToNextCommand(): void;\n\tselectToPreviousCommand(): void;\n\tselectToNextCommand(): void;\n\tselectToPreviousLine(): void;\n\tselectToNextLine(): void;\n}\n\nexport interface INavigationMode {\n\texitNavigationMode(): void;\n\tfocusPreviousLine(): void;\n\tfocusNextLine(): void;\n}\n\nexport interface IBeforeProcessDataEvent {\n\t/**\n\t * The data of the event, this can be modified by the event listener to change what gets sent\n\t * to the terminal.\n\t */\n\tdata: string;\n}\n\nexport interface IProcessDataEvent {\n\tdata: string;\n\tsync: boolean;\n}\n\nexport interface ITerminalProcessManager extends IDisposable {\n\treadonly processState: ProcessState;\n\treadonly ptyProcessReady: Promise<void>;\n\treadonly shellProcessId: number | undefined;\n\treadonly remoteAuthority: string | undefined;\n\treadonly os: OperatingSystem | undefined;\n\treadonly userHome: string | undefined;\n\treadonly environmentVariableInfo: IEnvironmentVariableInfo | undefined;\n\n\treadonly onProcessReady: Event<void>;\n\treadonly onBeforeProcessData: Event<IBeforeProcessDataEvent>;\n\treadonly onProcessData: Event<IProcessDataEvent>;\n\treadonly onProcessTitle: Event<string>;\n\treadonly onProcessExit: Event<number | undefined>;\n\treadonly onProcessOverrideDimensions: Event<ITerminalDimensionsOverride | undefined>;\n\treadonly onProcessResolvedShellLaunchConfig: Event<IShellLaunchConfig>;\n\treadonly onEnvironmentVariableInfoChanged: Event<IEnvironmentVariableInfo>;\n\n\tdispose(immediate?: boolean): void;\n\tcreateProcess(shellLaunchConfig: IShellLaunchConfig, cols: number, rows: number, isScreenReaderModeEnabled: boolean): Promise<ITerminalLaunchError | undefined>;\n\twrite(data: string): void;\n\tsetDimensions(cols: number, rows: number): void;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n\tgetLatency(): Promise<number>;\n}\n\nexport const enum ProcessState {\n\t// The process has not been initialized yet.\n\tUNINITIALIZED,\n\t// The process is currently launching, the process is marked as launching\n\t// for a short duration after being created and is helpful to indicate\n\t// whether the process died as a result of bad shell and args.\n\tLAUNCHING,\n\t// The process is running normally.\n\tRUNNING,\n\t// The process was killed during launch, likely as a result of bad shell and\n\t// args.\n\tKILLED_DURING_LAUNCH,\n\t// The process was killed by the user (the event originated from VS Code).\n\tKILLED_BY_USER,\n\t// The process was killed by itself, for example the shell crashed or `exit`\n\t// was run.\n\tKILLED_BY_PROCESS\n}\n\nexport interface ITerminalProcessExtHostProxy extends IDisposable {\n\treadonly terminalId: number;\n\n\temitData(data: string): void;\n\temitTitle(title: string): void;\n\temitReady(pid: number, cwd: string): void;\n\temitExit(exitCode: number | undefined): void;\n\temitOverrideDimensions(dimensions: ITerminalDimensions | undefined): void;\n\temitResolvedShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig): void;\n\temitInitialCwd(initialCwd: string): void;\n\temitCwd(cwd: string): void;\n\temitLatency(latency: number): void;\n\n\tonInput: Event<string>;\n\tonResize: Event<{ cols: number, rows: number }>;\n\tonShutdown: Event<boolean>;\n\tonRequestInitialCwd: Event<void>;\n\tonRequestCwd: Event<void>;\n\tonRequestLatency: Event<void>;\n}\n\nexport interface ISpawnExtHostProcessRequest {\n\tproxy: ITerminalProcessExtHostProxy;\n\tshellLaunchConfig: IShellLaunchConfig;\n\tactiveWorkspaceRootUri: URI | undefined;\n\tcols: number;\n\trows: number;\n\tisWorkspaceShellAllowed: boolean;\n\tcallback: (error: ITerminalLaunchError | undefined) => void;\n}\n\nexport interface IStartExtensionTerminalRequest {\n\tproxy: ITerminalProcessExtHostProxy;\n\tcols: number;\n\trows: number;\n\tcallback: (error: ITerminalLaunchError | undefined) => void;\n}\n\nexport interface IAvailableShellsRequest {\n\tcallback: (shells: IShellDefinition[]) => void;\n}\n\nexport interface IDefaultShellAndArgsRequest {\n\tuseAutomationShell: boolean;\n\tcallback: (shell: string, args: string[] | string | undefined) => void;\n}\n\nexport enum LinuxDistro {\n\tFedora,\n\tUbuntu,\n\tUnknown\n}\n\nexport enum TitleEventSource {\n\t/** From the API or the rename command that overrides any other type */\n\tApi,\n\t/** From the process name property*/\n\tProcess,\n\t/** From the VT sequence */\n\tSequence\n}\n\nexport interface IWindowsShellHelper extends IDisposable {\n\treadonly onShellNameChange: Event<string>;\n\n\tgetShellName(): Promise<string>;\n}\n\nexport interface ITerminalLaunchError {\n\tmessage: string;\n\tcode?: number;\n}\n\n/**\n * An interface representing a raw terminal child process, this contains a subset of the\n * child_process.ChildProcess node.js interface.\n */\nexport interface ITerminalChildProcess {\n\tonProcessData: Event<IProcessDataEvent | string>;\n\tonProcessExit: Event<number | undefined>;\n\tonProcessReady: Event<{ pid: number, cwd: string }>;\n\tonProcessTitleChanged: Event<string>;\n\tonProcessOverrideDimensions?: Event<ITerminalDimensionsOverride | undefined>;\n\tonProcessResolvedShellLaunchConfig?: Event<IShellLaunchConfig>;\n\n\t/**\n\t * Starts the process.\n\t *\n\t * @returns undefined when the process was successfully started, otherwise an object containing\n\t * information on what went wrong.\n\t */\n\tstart(): Promise<ITerminalLaunchError | undefined>;\n\n\t/**\n\t * Shutdown the terminal process.\n\t *\n\t * @param immediate When true the process will be killed immediately, otherwise the process will\n\t * be given some time to make sure no additional data comes through.\n\t */\n\tshutdown(immediate: boolean): void;\n\tinput(data: string): void;\n\tresize(cols: number, rows: number): void;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n\tgetLatency(): Promise<number>;\n}\n\nexport const enum TERMINAL_COMMAND_ID {\n\tFIND_NEXT = 'workbench.action.terminal.findNext',\n\tFIND_PREVIOUS = 'workbench.action.terminal.findPrevious',\n\tTOGGLE = 'workbench.action.terminal.toggleTerminal',\n\tKILL = 'workbench.action.terminal.kill',\n\tQUICK_KILL = 'workbench.action.terminal.quickKill',\n\tCONFIGURE_TERMINAL_SETTINGS = 'workbench.action.terminal.openSettings',\n\tCOPY_SELECTION = 'workbench.action.terminal.copySelection',\n\tSELECT_ALL = 'workbench.action.terminal.selectAll',\n\tDELETE_WORD_LEFT = 'workbench.action.terminal.deleteWordLeft',\n\tDELETE_WORD_RIGHT = 'workbench.action.terminal.deleteWordRight',\n\tDELETE_TO_LINE_START = 'workbench.action.terminal.deleteToLineStart',\n\tMOVE_TO_LINE_START = 'workbench.action.terminal.moveToLineStart',\n\tMOVE_TO_LINE_END = 'workbench.action.terminal.moveToLineEnd',\n\tNEW = 'workbench.action.terminal.new',\n\tNEW_WITH_CWD = 'workbench.action.terminal.newWithCwd',\n\tNEW_LOCAL = 'workbench.action.terminal.newLocal',\n\tNEW_IN_ACTIVE_WORKSPACE = 'workbench.action.terminal.newInActiveWorkspace',\n\tSPLIT = 'workbench.action.terminal.split',\n\tSPLIT_IN_ACTIVE_WORKSPACE = 'workbench.action.terminal.splitInActiveWorkspace',\n\tRELAUNCH = 'workbench.action.terminal.relaunch',\n\tFOCUS_PREVIOUS_PANE = 'workbench.action.terminal.focusPreviousPane',\n\tFOCUS_NEXT_PANE = 'workbench.action.terminal.focusNextPane',\n\tRESIZE_PANE_LEFT = 'workbench.action.terminal.resizePaneLeft',\n\tRESIZE_PANE_RIGHT = 'workbench.action.terminal.resizePaneRight',\n\tRESIZE_PANE_UP = 'workbench.action.terminal.resizePaneUp',\n\tRESIZE_PANE_DOWN = 'workbench.action.terminal.resizePaneDown',\n\tFOCUS = 'workbench.action.terminal.focus',\n\tFOCUS_NEXT = 'workbench.action.terminal.focusNext',\n\tFOCUS_PREVIOUS = 'workbench.action.terminal.focusPrevious',\n\tPASTE = 'workbench.action.terminal.paste',\n\tSELECT_DEFAULT_SHELL = 'workbench.action.terminal.selectDefaultShell',\n\tRUN_SELECTED_TEXT = 'workbench.action.terminal.runSelectedText',\n\tRUN_ACTIVE_FILE = 'workbench.action.terminal.runActiveFile',\n\tSWITCH_TERMINAL = 'workbench.action.terminal.switchTerminal',\n\tSCROLL_DOWN_LINE = 'workbench.action.terminal.scrollDown',\n\tSCROLL_DOWN_PAGE = 'workbench.action.terminal.scrollDownPage',\n\tSCROLL_TO_BOTTOM = 'workbench.action.terminal.scrollToBottom',\n\tSCROLL_UP_LINE = 'workbench.action.terminal.scrollUp',\n\tSCROLL_UP_PAGE = 'workbench.action.terminal.scrollUpPage',\n\tSCROLL_TO_TOP = 'workbench.action.terminal.scrollToTop',\n\tCLEAR = 'workbench.action.terminal.clear',\n\tCLEAR_SELECTION = 'workbench.action.terminal.clearSelection',\n\tMANAGE_WORKSPACE_SHELL_PERMISSIONS = 'workbench.action.terminal.manageWorkspaceShellPermissions',\n\tRENAME = 'workbench.action.terminal.rename',\n\tRENAME_WITH_ARG = 'workbench.action.terminal.renameWithArg',\n\tFIND_FOCUS = 'workbench.action.terminal.focusFind',\n\tFIND_HIDE = 'workbench.action.terminal.hideFind',\n\tQUICK_OPEN_TERM = 'workbench.action.quickOpenTerm',\n\tSCROLL_TO_PREVIOUS_COMMAND = 'workbench.action.terminal.scrollToPreviousCommand',\n\tSCROLL_TO_NEXT_COMMAND = 'workbench.action.terminal.scrollToNextCommand',\n\tSELECT_TO_PREVIOUS_COMMAND = 'workbench.action.terminal.selectToPreviousCommand',\n\tSELECT_TO_NEXT_COMMAND = 'workbench.action.terminal.selectToNextCommand',\n\tSELECT_TO_PREVIOUS_LINE = 'workbench.action.terminal.selectToPreviousLine',\n\tSELECT_TO_NEXT_LINE = 'workbench.action.terminal.selectToNextLine',\n\tTOGGLE_ESCAPE_SEQUENCE_LOGGING = 'toggleEscapeSequenceLogging',\n\tSEND_SEQUENCE = 'workbench.action.terminal.sendSequence',\n\tTOGGLE_FIND_REGEX = 'workbench.action.terminal.toggleFindRegex',\n\tTOGGLE_FIND_WHOLE_WORD = 'workbench.action.terminal.toggleFindWholeWord',\n\tTOGGLE_FIND_CASE_SENSITIVE = 'workbench.action.terminal.toggleFindCaseSensitive',\n\tNAVIGATION_MODE_EXIT = 'workbench.action.terminal.navigationModeExit',\n\tNAVIGATION_MODE_FOCUS_NEXT = 'workbench.action.terminal.navigationModeFocusNext',\n\tNAVIGATION_MODE_FOCUS_PREVIOUS = 'workbench.action.terminal.navigationModeFocusPrevious',\n\tSHOW_ENVIRONMENT_INFORMATION = 'workbench.action.terminal.showEnvironmentInformation',\n\tSEARCH_WORKSPACE = 'workbench.action.terminal.searchWorkspace',\n\tATTACH_TO_REMOTE_TERMINAL = 'workbench.action.terminal.attachToSession'\n}\n\nexport const DEFAULT_COMMANDS_TO_SKIP_SHELL: string[] = [\n\tTERMINAL_COMMAND_ID.CLEAR_SELECTION,\n\tTERMINAL_COMMAND_ID.CLEAR,\n\tTERMINAL_COMMAND_ID.COPY_SELECTION,\n\tTERMINAL_COMMAND_ID.DELETE_TO_LINE_START,\n\tTERMINAL_COMMAND_ID.DELETE_WORD_LEFT,\n\tTERMINAL_COMMAND_ID.DELETE_WORD_RIGHT,\n\tTERMINAL_COMMAND_ID.FIND_FOCUS,\n\tTERMINAL_COMMAND_ID.FIND_HIDE,\n\tTERMINAL_COMMAND_ID.FIND_NEXT,\n\tTERMINAL_COMMAND_ID.FIND_PREVIOUS,\n\tTERMINAL_COMMAND_ID.TOGGLE_FIND_REGEX,\n\tTERMINAL_COMMAND_ID.TOGGLE_FIND_WHOLE_WORD,\n\tTERMINAL_COMMAND_ID.TOGGLE_FIND_CASE_SENSITIVE,\n\tTERMINAL_COMMAND_ID.FOCUS_NEXT_PANE,\n\tTERMINAL_COMMAND_ID.FOCUS_NEXT,\n\tTERMINAL_COMMAND_ID.FOCUS_PREVIOUS_PANE,\n\tTERMINAL_COMMAND_ID.FOCUS_PREVIOUS,\n\tTERMINAL_COMMAND_ID.FOCUS,\n\tTERMINAL_COMMAND_ID.KILL,\n\tTERMINAL_COMMAND_ID.MOVE_TO_LINE_END,\n\tTERMINAL_COMMAND_ID.MOVE_TO_LINE_START,\n\tTERMINAL_COMMAND_ID.NEW_IN_ACTIVE_WORKSPACE,\n\tTERMINAL_COMMAND_ID.NEW,\n\tTERMINAL_COMMAND_ID.PASTE,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_DOWN,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_LEFT,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_RIGHT,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_UP,\n\tTERMINAL_COMMAND_ID.RUN_ACTIVE_FILE,\n\tTERMINAL_COMMAND_ID.RUN_SELECTED_TEXT,\n\tTERMINAL_COMMAND_ID.SCROLL_DOWN_LINE,\n\tTERMINAL_COMMAND_ID.SCROLL_DOWN_PAGE,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_BOTTOM,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_NEXT_COMMAND,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_PREVIOUS_COMMAND,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_TOP,\n\tTERMINAL_COMMAND_ID.SCROLL_UP_LINE,\n\tTERMINAL_COMMAND_ID.SCROLL_UP_PAGE,\n\tTERMINAL_COMMAND_ID.SEND_SEQUENCE,\n\tTERMINAL_COMMAND_ID.SELECT_ALL,\n\tTERMINAL_COMMAND_ID.SELECT_TO_NEXT_COMMAND,\n\tTERMINAL_COMMAND_ID.SELECT_TO_NEXT_LINE,\n\tTERMINAL_COMMAND_ID.SELECT_TO_PREVIOUS_COMMAND,\n\tTERMINAL_COMMAND_ID.SELECT_TO_PREVIOUS_LINE,\n\tTERMINAL_COMMAND_ID.SPLIT_IN_ACTIVE_WORKSPACE,\n\tTERMINAL_COMMAND_ID.SPLIT,\n\tTERMINAL_COMMAND_ID.TOGGLE,\n\tTERMINAL_COMMAND_ID.NAVIGATION_MODE_EXIT,\n\tTERMINAL_COMMAND_ID.NAVIGATION_MODE_FOCUS_NEXT,\n\tTERMINAL_COMMAND_ID.NAVIGATION_MODE_FOCUS_PREVIOUS,\n\t'editor.action.toggleTabFocusMode',\n\t'workbench.action.quickOpen',\n\t'workbench.action.quickOpenPreviousEditor',\n\t'workbench.action.showCommands',\n\t'workbench.action.tasks.build',\n\t'workbench.action.tasks.restartTask',\n\t'workbench.action.tasks.runTask',\n\t'workbench.action.tasks.reRunTask',\n\t'workbench.action.tasks.showLog',\n\t'workbench.action.tasks.showTasks',\n\t'workbench.action.tasks.terminate',\n\t'workbench.action.tasks.test',\n\t'workbench.action.toggleFullScreen',\n\t'workbench.action.terminal.focusAtIndex1',\n\t'workbench.action.terminal.focusAtIndex2',\n\t'workbench.action.terminal.focusAtIndex3',\n\t'workbench.action.terminal.focusAtIndex4',\n\t'workbench.action.terminal.focusAtIndex5',\n\t'workbench.action.terminal.focusAtIndex6',\n\t'workbench.action.terminal.focusAtIndex7',\n\t'workbench.action.terminal.focusAtIndex8',\n\t'workbench.action.terminal.focusAtIndex9',\n\t'workbench.action.focusSecondEditorGroup',\n\t'workbench.action.focusThirdEditorGroup',\n\t'workbench.action.focusFourthEditorGroup',\n\t'workbench.action.focusFifthEditorGroup',\n\t'workbench.action.focusSixthEditorGroup',\n\t'workbench.action.focusSeventhEditorGroup',\n\t'workbench.action.focusEighthEditorGroup',\n\t'workbench.action.focusNextPart',\n\t'workbench.action.focusPreviousPart',\n\t'workbench.action.nextPanelView',\n\t'workbench.action.previousPanelView',\n\t'workbench.action.nextSideBarView',\n\t'workbench.action.previousSideBarView',\n\t'workbench.action.debug.start',\n\t'workbench.action.debug.stop',\n\t'workbench.action.debug.run',\n\t'workbench.action.debug.restart',\n\t'workbench.action.debug.continue',\n\t'workbench.action.debug.pause',\n\t'workbench.action.debug.stepInto',\n\t'workbench.action.debug.stepOut',\n\t'workbench.action.debug.stepOver',\n\t'workbench.action.nextEditor',\n\t'workbench.action.previousEditor',\n\t'workbench.action.nextEditorInGroup',\n\t'workbench.action.previousEditorInGroup',\n\t'workbench.action.openNextRecentlyUsedEditor',\n\t'workbench.action.openPreviousRecentlyUsedEditor',\n\t'workbench.action.openNextRecentlyUsedEditorInGroup',\n\t'workbench.action.openPreviousRecentlyUsedEditorInGroup',\n\t'workbench.action.quickOpenPreviousRecentlyUsedEditor',\n\t'workbench.action.quickOpenLeastRecentlyUsedEditor',\n\t'workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup',\n\t'workbench.action.quickOpenLeastRecentlyUsedEditorInGroup',\n\t'workbench.action.focusActiveEditorGroup',\n\t'workbench.action.focusFirstEditorGroup',\n\t'workbench.action.focusLastEditorGroup',\n\t'workbench.action.firstEditorInGroup',\n\t'workbench.action.lastEditorInGroup',\n\t'workbench.action.navigateUp',\n\t'workbench.action.navigateDown',\n\t'workbench.action.navigateRight',\n\t'workbench.action.navigateLeft',\n\t'workbench.action.togglePanel',\n\t'workbench.action.quickOpenView',\n\t'workbench.action.toggleMaximizedPanel'\n];\n\nexport interface ITerminalContributions {\n\ttypes?: ITerminalTypeContribution[];\n}\n\nexport interface ITerminalTypeContribution {\n\ttitle: string;\n\tcommand: string;\n}\n\nexport const terminalContributionsDescriptor: IExtensionPointDescriptor = {\n\textensionPoint: 'terminal',\n\tdefaultExtensionKind: 'workspace',\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.terminal', 'Contributes terminal functionality.'),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\ttypes: {\n\t\t\t\ttype: 'array',\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.types', \"Defines additional terminal types that the user can create.\"),\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\trequired: ['command', 'title'],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.types.command', \"Command to execute when the user creates this type of terminal.\"),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.types.title', \"Title for this type of terminal.\"),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IProcessDataEvent } from 'vs/workbench/contrib/terminal/common/terminal';\n\ninterface TerminalDataBuffer extends IDisposable {\n\tdata: string[];\n\ttimeoutId: any;\n}\n\nexport class TerminalDataBufferer implements IDisposable {\n\tprivate readonly _terminalBufferMap = new Map<number, TerminalDataBuffer>();\n\n\tconstructor(private readonly _callback: (id: number, data: string) => void) {\n\t}\n\n\tdispose() {\n\t\tfor (const buffer of this._terminalBufferMap.values()) {\n\t\t\tbuffer.dispose();\n\t\t}\n\t}\n\n\tstartBuffering(id: number, event: Event<string | IProcessDataEvent>, throttleBy: number = 5): IDisposable {\n\t\tlet disposable: IDisposable;\n\t\tdisposable = event((e: string | IProcessDataEvent) => {\n\t\t\tconst data = (typeof e === 'string' ? e : e.data);\n\t\t\tlet buffer = this._terminalBufferMap.get(id);\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.data.push(data);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst timeoutId = setTimeout(() => this._flushBuffer(id), throttleBy);\n\t\t\tbuffer = {\n\t\t\t\tdata: [data],\n\t\t\t\ttimeoutId: timeoutId,\n\t\t\t\tdispose: () => {\n\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\tthis._flushBuffer(id);\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._terminalBufferMap.set(id, buffer);\n\t\t});\n\t\treturn disposable;\n\t}\n\n\tstopBuffering(id: number) {\n\t\tconst buffer = this._terminalBufferMap.get(id);\n\t\tif (buffer) {\n\t\t\tbuffer.dispose();\n\t\t}\n\t}\n\n\tprivate _flushBuffer(id: number): void {\n\t\tconst buffer = this._terminalBufferMap.get(id);\n\t\tif (buffer) {\n\t\t\tthis._terminalBufferMap.delete(id);\n\t\t\tthis._callback(id, buffer.data.join(''));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { URI as Uri } from 'vs/base/common/uri';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IShellLaunchConfig, ITerminalEnvironment } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { sanitizeProcessEnvironment } from 'vs/base/common/processes';\nimport { ILogService } from 'vs/platform/log/common/log';\n\n/**\n * This module contains utility functions related to the environment, cwd and paths.\n */\n\nexport function mergeEnvironments(parent: platform.IProcessEnvironment, other: ITerminalEnvironment | undefined): void {\n\tif (!other) {\n\t\treturn;\n\t}\n\n\t// On Windows apply the new values ignoring case, while still retaining\n\t// the case of the original key.\n\tif (platform.isWindows) {\n\t\tfor (const configKey in other) {\n\t\t\tlet actualKey = configKey;\n\t\t\tfor (const envKey in parent) {\n\t\t\t\tif (configKey.toLowerCase() === envKey.toLowerCase()) {\n\t\t\t\t\tactualKey = envKey;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst value = other[configKey];\n\t\t\t_mergeEnvironmentValue(parent, actualKey, value);\n\t\t}\n\t} else {\n\t\tObject.keys(other).forEach((key) => {\n\t\t\tconst value = other[key];\n\t\t\t_mergeEnvironmentValue(parent, key, value);\n\t\t});\n\t}\n}\n\nfunction _mergeEnvironmentValue(env: ITerminalEnvironment, key: string, value: string | null): void {\n\tif (typeof value === 'string') {\n\t\tenv[key] = value;\n\t} else {\n\t\tdelete env[key];\n\t}\n}\n\nexport function addTerminalEnvironmentKeys(env: platform.IProcessEnvironment, version: string | undefined, locale: string | undefined, detectLocale: 'auto' | 'off' | 'on'): void {\n\tenv['TERM_PROGRAM'] = 'vscode';\n\tif (version) {\n\t\tenv['TERM_PROGRAM_VERSION'] = version;\n\t}\n\tif (shouldSetLangEnvVariable(env, detectLocale)) {\n\t\tenv['LANG'] = getLangEnvVariable(locale);\n\t}\n\tenv['COLORTERM'] = 'truecolor';\n}\n\nfunction mergeNonNullKeys(env: platform.IProcessEnvironment, other: ITerminalEnvironment | undefined) {\n\tif (!other) {\n\t\treturn;\n\t}\n\tfor (const key of Object.keys(other)) {\n\t\tconst value = other[key];\n\t\tif (value) {\n\t\t\tenv[key] = value;\n\t\t}\n\t}\n}\n\nfunction resolveConfigurationVariables(variableResolver: VariableResolver, env: ITerminalEnvironment): ITerminalEnvironment {\n\tObject.keys(env).forEach((key) => {\n\t\tconst value = env[key];\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\tenv[key] = variableResolver(value);\n\t\t\t} catch (e) {\n\t\t\t\tenv[key] = value;\n\t\t\t}\n\t\t}\n\t});\n\treturn env;\n}\n\nexport function shouldSetLangEnvVariable(env: platform.IProcessEnvironment, detectLocale: 'auto' | 'off' | 'on'): boolean {\n\tif (detectLocale === 'on') {\n\t\treturn true;\n\t}\n\tif (detectLocale === 'auto') {\n\t\tconst lang = env['LANG'];\n\t\treturn !lang || (lang.search(/\\.UTF\\-8$/) === -1 && lang.search(/\\.utf8$/) === -1 && lang.search(/\\.euc.+/) === -1);\n\t}\n\treturn false; // 'off'\n}\n\nexport function getLangEnvVariable(locale?: string): string {\n\tconst parts = locale ? locale.split('-') : [];\n\tconst n = parts.length;\n\tif (n === 0) {\n\t\t// Fallback to en_US if the locale is unknown\n\t\treturn 'en_US.UTF-8';\n\t}\n\tif (n === 1) {\n\t\t// The local may only contain the language, not the variant, if this is the case guess the\n\t\t// variant such that it can be used as a valid $LANG variable. The language variant chosen\n\t\t// is the original and/or most prominent with help from\n\t\t// https://stackoverflow.com/a/2502675/1156119\n\t\t// The list of locales was generated by running `locale -a` on macOS\n\t\tconst languageVariants: { [key: string]: string } = {\n\t\t\taf: 'ZA',\n\t\t\tam: 'ET',\n\t\t\tbe: 'BY',\n\t\t\tbg: 'BG',\n\t\t\tca: 'ES',\n\t\t\tcs: 'CZ',\n\t\t\tda: 'DK',\n\t\t\t// de: 'AT',\n\t\t\t// de: 'CH',\n\t\t\tde: 'DE',\n\t\t\tel: 'GR',\n\t\t\t// en: 'AU',\n\t\t\t// en: 'CA',\n\t\t\t// en: 'GB',\n\t\t\t// en: 'IE',\n\t\t\t// en: 'NZ',\n\t\t\ten: 'US',\n\t\t\tes: 'ES',\n\t\t\tet: 'EE',\n\t\t\teu: 'ES',\n\t\t\tfi: 'FI',\n\t\t\t// fr: 'BE',\n\t\t\t// fr: 'CA',\n\t\t\t// fr: 'CH',\n\t\t\tfr: 'FR',\n\t\t\the: 'IL',\n\t\t\thr: 'HR',\n\t\t\thu: 'HU',\n\t\t\thy: 'AM',\n\t\t\tis: 'IS',\n\t\t\t// it: 'CH',\n\t\t\tit: 'IT',\n\t\t\tja: 'JP',\n\t\t\tkk: 'KZ',\n\t\t\tko: 'KR',\n\t\t\tlt: 'LT',\n\t\t\t// nl: 'BE',\n\t\t\tnl: 'NL',\n\t\t\tno: 'NO',\n\t\t\tpl: 'PL',\n\t\t\tpt: 'BR',\n\t\t\t// pt: 'PT',\n\t\t\tro: 'RO',\n\t\t\tru: 'RU',\n\t\t\tsk: 'SK',\n\t\t\tsl: 'SI',\n\t\t\tsr: 'YU',\n\t\t\tsv: 'SE',\n\t\t\ttr: 'TR',\n\t\t\tuk: 'UA',\n\t\t\tzh: 'CN',\n\t\t};\n\t\tif (parts[0] in languageVariants) {\n\t\t\tparts.push(languageVariants[parts[0]]);\n\t\t}\n\t} else {\n\t\t// Ensure the variant is uppercase to be a valid $LANG\n\t\tparts[1] = parts[1].toUpperCase();\n\t}\n\treturn parts.join('_') + '.UTF-8';\n}\n\nexport function getCwd(\n\tshell: IShellLaunchConfig,\n\tuserHome: string | undefined,\n\tvariableResolver: VariableResolver | undefined,\n\troot: Uri | undefined,\n\tcustomCwd: string | undefined,\n\tlogService?: ILogService\n): string {\n\tif (shell.cwd) {\n\t\tconst unresolved = (typeof shell.cwd === 'object') ? shell.cwd.fsPath : shell.cwd;\n\t\tconst resolved = _resolveCwd(unresolved, variableResolver);\n\t\treturn _sanitizeCwd(resolved || unresolved);\n\t}\n\n\tlet cwd: string | undefined;\n\n\tif (!shell.ignoreConfigurationCwd && customCwd) {\n\t\tif (variableResolver) {\n\t\t\tcustomCwd = _resolveCwd(customCwd, variableResolver, logService);\n\t\t}\n\t\tif (customCwd) {\n\t\t\tif (path.isAbsolute(customCwd)) {\n\t\t\t\tcwd = customCwd;\n\t\t\t} else if (root) {\n\t\t\t\tcwd = path.join(root.fsPath, customCwd);\n\t\t\t}\n\t\t}\n\t}\n\n\t// If there was no custom cwd or it was relative with no workspace\n\tif (!cwd) {\n\t\tcwd = root ? root.fsPath : userHome || '';\n\t}\n\n\treturn _sanitizeCwd(cwd);\n}\n\nfunction _resolveCwd(cwd: string, variableResolver: VariableResolver | undefined, logService?: ILogService): string | undefined {\n\tif (variableResolver) {\n\t\ttry {\n\t\t\treturn variableResolver(cwd);\n\t\t} catch (e) {\n\t\t\tlogService?.error('Could not resolve terminal cwd', e);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\treturn cwd;\n}\n\nfunction _sanitizeCwd(cwd: string): string {\n\t// Make the drive letter uppercase on Windows (see #9448)\n\tif (platform.platform === platform.Platform.Windows && cwd && cwd[1] === ':') {\n\t\treturn cwd[0].toUpperCase() + cwd.substr(1);\n\t}\n\treturn cwd;\n}\n\nexport function escapeNonWindowsPath(path: string): string {\n\tlet newPath = path;\n\tif (newPath.indexOf('\\\\') !== 0) {\n\t\tnewPath = newPath.replace(/\\\\/g, '\\\\\\\\');\n\t}\n\tif (!newPath && (newPath.indexOf('\"') !== -1)) {\n\t\tnewPath = '\\'' + newPath + '\\'';\n\t} else if (newPath.indexOf(' ') !== -1) {\n\t\tnewPath = newPath.replace(/ /g, '\\\\ ');\n\t}\n\treturn newPath;\n}\n\nexport type TerminalShellSetting = (\n\t`terminal.integrated.automationShell.windows`\n\t| `terminal.integrated.automationShell.osx`\n\t| `terminal.integrated.automationShell.linux`\n\t| `terminal.integrated.shell.windows`\n\t| `terminal.integrated.shell.osx`\n\t| `terminal.integrated.shell.linux`\n);\n\nexport type TerminalShellArgsSetting = (\n\t`terminal.integrated.shellArgs.windows`\n\t| `terminal.integrated.shellArgs.osx`\n\t| `terminal.integrated.shellArgs.linux`\n);\n\nexport type VariableResolver = (str: string) => string;\n\nexport function createVariableResolver(lastActiveWorkspace: IWorkspaceFolder | undefined, configurationResolverService: IConfigurationResolverService | undefined): VariableResolver | undefined {\n\tif (!configurationResolverService) {\n\t\treturn undefined;\n\t}\n\treturn (str) => configurationResolverService.resolve(lastActiveWorkspace, str);\n}\n\nexport function getDefaultShell(\n\tfetchSetting: (key: TerminalShellSetting) => { userValue?: string | string[], value?: string | string[], defaultValue?: string | string[] },\n\tisWorkspaceShellAllowed: boolean,\n\tdefaultShell: string,\n\tisWoW64: boolean,\n\twindir: string | undefined,\n\tvariableResolver: VariableResolver | undefined,\n\tlogService: ILogService,\n\tuseAutomationShell: boolean,\n\tplatformOverride: platform.Platform = platform.platform\n): string {\n\tlet maybeExecutable: string | null = null;\n\tif (useAutomationShell) {\n\t\t// If automationShell is specified, this should override the normal setting\n\t\tmaybeExecutable = getShellSetting(fetchSetting, isWorkspaceShellAllowed, 'automationShell', platformOverride);\n\t}\n\tif (!maybeExecutable) {\n\t\tmaybeExecutable = getShellSetting(fetchSetting, isWorkspaceShellAllowed, 'shell', platformOverride);\n\t}\n\tlet executable: string = maybeExecutable || defaultShell;\n\n\t// Change Sysnative to System32 if the OS is Windows but NOT WoW64. It's\n\t// safe to assume that this was used by accident as Sysnative does not\n\t// exist and will break the terminal in non-WoW64 environments.\n\tif ((platformOverride === platform.Platform.Windows) && !isWoW64 && windir) {\n\t\tconst sysnativePath = path.join(windir, 'Sysnative').replace(/\\//g, '\\\\').toLowerCase();\n\t\tif (executable && executable.toLowerCase().indexOf(sysnativePath) === 0) {\n\t\t\texecutable = path.join(windir, 'System32', executable.substr(sysnativePath.length + 1));\n\t\t}\n\t}\n\n\t// Convert / to \\ on Windows for convenience\n\tif (executable && platformOverride === platform.Platform.Windows) {\n\t\texecutable = executable.replace(/\\//g, '\\\\');\n\t}\n\n\tif (variableResolver) {\n\t\ttry {\n\t\t\texecutable = variableResolver(executable);\n\t\t} catch (e) {\n\t\t\tlogService.error(`Could not resolve shell`, e);\n\t\t}\n\t}\n\n\treturn executable;\n}\n\nexport function getDefaultShellArgs(\n\tfetchSetting: (key: TerminalShellSetting | TerminalShellArgsSetting) => { userValue?: string | string[], value?: string | string[], defaultValue?: string | string[] },\n\tisWorkspaceShellAllowed: boolean,\n\tuseAutomationShell: boolean,\n\tvariableResolver: VariableResolver | undefined,\n\tlogService: ILogService,\n\tplatformOverride: platform.Platform = platform.platform,\n): string | string[] {\n\tif (useAutomationShell) {\n\t\tif (!!getShellSetting(fetchSetting, isWorkspaceShellAllowed, 'automationShell', platformOverride)) {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tconst platformKey = platformOverride === platform.Platform.Windows ? 'windows' : platformOverride === platform.Platform.Mac ? 'osx' : 'linux';\n\tconst shellArgsConfigValue = fetchSetting(<TerminalShellArgsSetting>`terminal.integrated.shellArgs.${platformKey}`);\n\tlet args = ((isWorkspaceShellAllowed ? shellArgsConfigValue.value : shellArgsConfigValue.userValue) || shellArgsConfigValue.defaultValue);\n\tif (!args) {\n\t\treturn [];\n\t}\n\tif (typeof args === 'string' && platformOverride === platform.Platform.Windows) {\n\t\treturn variableResolver ? variableResolver(args) : args;\n\t}\n\tif (variableResolver) {\n\t\tconst resolvedArgs: string[] = [];\n\t\tfor (const arg of args) {\n\t\t\ttry {\n\t\t\t\tresolvedArgs.push(variableResolver(arg));\n\t\t\t} catch (e) {\n\t\t\t\tlogService.error(`Could not resolve terminal.integrated.shellArgs.${platformKey}`, e);\n\t\t\t\tresolvedArgs.push(arg);\n\t\t\t}\n\t\t}\n\t\targs = resolvedArgs;\n\t}\n\treturn args;\n}\n\nfunction getShellSetting(\n\tfetchSetting: (key: TerminalShellSetting) => { userValue?: string | string[], value?: string | string[], defaultValue?: string | string[] },\n\tisWorkspaceShellAllowed: boolean,\n\ttype: 'automationShell' | 'shell',\n\tplatformOverride: platform.Platform = platform.platform,\n): string | null {\n\tconst platformKey = platformOverride === platform.Platform.Windows ? 'windows' : platformOverride === platform.Platform.Mac ? 'osx' : 'linux';\n\tconst shellConfigValue = fetchSetting(<TerminalShellSetting>`terminal.integrated.${type}.${platformKey}`);\n\tconst executable = (isWorkspaceShellAllowed ? <string>shellConfigValue.value : <string>shellConfigValue.userValue) || (<string | null>shellConfigValue.defaultValue);\n\treturn executable;\n}\n\nexport function createTerminalEnvironment(\n\tshellLaunchConfig: IShellLaunchConfig,\n\tenvFromConfig: { userValue?: ITerminalEnvironment, value?: ITerminalEnvironment, defaultValue?: ITerminalEnvironment },\n\tvariableResolver: VariableResolver | undefined,\n\tisWorkspaceShellAllowed: boolean,\n\tversion: string | undefined,\n\tdetectLocale: 'auto' | 'off' | 'on',\n\tbaseEnv: platform.IProcessEnvironment\n): platform.IProcessEnvironment {\n\t// Create a terminal environment based on settings, launch config and permissions\n\tlet env: platform.IProcessEnvironment = {};\n\tif (shellLaunchConfig.strictEnv) {\n\t\t// strictEnv is true, only use the requested env (ignoring null entries)\n\t\tmergeNonNullKeys(env, shellLaunchConfig.env);\n\t} else {\n\t\t// Merge process env with the env from config and from shellLaunchConfig\n\t\tmergeNonNullKeys(env, baseEnv);\n\n\t\t// const platformKey = platform.isWindows ? 'windows' : (platform.isMacintosh ? 'osx' : 'linux');\n\t\t// const envFromConfigValue = this._workspaceConfigurationService.inspect<ITerminalEnvironment | undefined>(`terminal.integrated.env.${platformKey}`);\n\t\tconst allowedEnvFromConfig = { ...(isWorkspaceShellAllowed ? envFromConfig.value : envFromConfig.userValue) };\n\n\t\t// Resolve env vars from config and shell\n\t\tif (variableResolver) {\n\t\t\tif (allowedEnvFromConfig) {\n\t\t\t\tresolveConfigurationVariables(variableResolver, allowedEnvFromConfig);\n\t\t\t}\n\t\t\tif (shellLaunchConfig.env) {\n\t\t\t\tresolveConfigurationVariables(variableResolver, shellLaunchConfig.env);\n\t\t\t}\n\t\t}\n\n\t\t// Sanitize the environment, removing any undesirable VS Code and Electron environment\n\t\t// variables\n\t\tsanitizeProcessEnvironment(env, 'VSCODE_IPC_HOOK_CLI');\n\n\t\t// Merge config (settings) and ShellLaunchConfig environments\n\t\tmergeEnvironments(env, allowedEnvFromConfig);\n\t\tmergeEnvironments(env, shellLaunchConfig.env);\n\n\t\t// Adding other env keys necessary to create the process\n\t\taddTerminalEnvironmentKeys(env, version, platform.locale, detectLocale);\n\t}\n\treturn env;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport * as processes from 'vs/base/node/processes';\nimport { readFile, fileExists, stat } from 'vs/base/node/pfs';\nimport { LinuxDistro, IShellDefinition } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { normalize, basename } from 'vs/base/common/path';\n\n/**\n * Gets the detected default shell for the _system_, not to be confused with VS Code's _default_\n * shell that the terminal uses by default.\n * @param p The platform to detect the shell of.\n */\nexport function getSystemShell(p: platform.Platform, environment: platform.IProcessEnvironment = process.env as platform.IProcessEnvironment): string {\n\tif (p === platform.Platform.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindows(environment);\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(environment);\n\t}\n\t// Only use $SHELL for the current OS\n\tif (platform.isLinux && p === platform.Platform.Mac || platform.isMacintosh && p === platform.Platform.Linux) {\n\t\treturn '/bin/bash';\n\t}\n\treturn getSystemShellUnixLike(environment);\n}\n\nlet _TERMINAL_DEFAULT_SHELL_UNIX_LIKE: string | null = null;\nfunction getSystemShellUnixLike(environment: platform.IProcessEnvironment): string {\n\tif (!_TERMINAL_DEFAULT_SHELL_UNIX_LIKE) {\n\t\tlet unixLikeTerminal = 'sh';\n\t\tif (!platform.isWindows && environment.SHELL) {\n\t\t\tunixLikeTerminal = environment.SHELL;\n\t\t\t// Some systems have $SHELL set to /bin/false which breaks the terminal\n\t\t\tif (unixLikeTerminal === '/bin/false') {\n\t\t\t\tunixLikeTerminal = '/bin/bash';\n\t\t\t}\n\t\t}\n\t\tif (platform.isWindows) {\n\t\t\tunixLikeTerminal = '/bin/bash'; // for WSL\n\t\t}\n\t\t_TERMINAL_DEFAULT_SHELL_UNIX_LIKE = unixLikeTerminal;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_UNIX_LIKE;\n}\n\nlet _TERMINAL_DEFAULT_SHELL_WINDOWS: string | null = null;\nfunction getSystemShellWindows(environment: platform.IProcessEnvironment): string {\n\tif (!_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\tconst isAtLeastWindows10 = platform.isWindows && parseFloat(os.release()) >= 10;\n\t\tconst is32ProcessOn64Windows = environment.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\t\tconst powerShellPath = `${environment.windir}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n\t\t_TERMINAL_DEFAULT_SHELL_WINDOWS = isAtLeastWindows10 ? powerShellPath : processes.getWindowsShell(environment);\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n}\n\nlet detectedDistro = LinuxDistro.Unknown;\nif (platform.isLinux) {\n\tconst file = '/etc/os-release';\n\tfileExists(file).then(async exists => {\n\t\tif (!exists) {\n\t\t\treturn;\n\t\t}\n\t\tconst buffer = await readFile(file);\n\t\tconst contents = buffer.toString();\n\t\tif (/NAME=\"?Fedora\"?/.test(contents)) {\n\t\t\tdetectedDistro = LinuxDistro.Fedora;\n\t\t} else if (/NAME=\"?Ubuntu\"?/.test(contents)) {\n\t\t\tdetectedDistro = LinuxDistro.Ubuntu;\n\t\t}\n\t});\n}\n\nexport const linuxDistro = detectedDistro;\n\nexport function getWindowsBuildNumber(): number {\n\tconst osVersion = (/(\\d+)\\.(\\d+)\\.(\\d+)/g).exec(os.release());\n\tlet buildNumber: number = 0;\n\tif (osVersion && osVersion.length === 4) {\n\t\tbuildNumber = parseInt(osVersion[3]);\n\t}\n\treturn buildNumber;\n}\n\nexport function detectAvailableShells(): Promise<IShellDefinition[]> {\n\treturn platform.isWindows ? detectAvailableWindowsShells() : detectAvailableUnixShells();\n}\n\nasync function detectAvailableWindowsShells(): Promise<IShellDefinition[]> {\n\t// Determine the correct System32 path. We want to point to Sysnative\n\t// when the 32-bit version of VS Code is running on a 64-bit machine.\n\t// The reason for this is because PowerShell's important PSReadline\n\t// module doesn't work if this is not the case. See #27915.\n\tconst is32ProcessOn64Windows = process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst system32Path = `${process.env['windir']}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}`;\n\n\tlet useWSLexe = false;\n\n\tif (getWindowsBuildNumber() >= 16299) {\n\t\tuseWSLexe = true;\n\t}\n\n\tconst expectedLocations: { [key: string]: string[] } = {\n\t\t'Command Prompt': [`${system32Path}\\\\cmd.exe`],\n\t\t'Windows PowerShell': [`${system32Path}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`],\n\t\t'PowerShell': [await getShellPathFromRegistry('pwsh')],\n\t\t'WSL Bash': [`${system32Path}\\\\${useWSLexe ? 'wsl.exe' : 'bash.exe'}`],\n\t\t'Git Bash': [\n\t\t\t`${process.env['ProgramW6432']}\\\\Git\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramW6432']}\\\\Git\\\\usr\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramFiles']}\\\\Git\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramFiles']}\\\\Git\\\\usr\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['LocalAppData']}\\\\Programs\\\\Git\\\\bin\\\\bash.exe`,\n\t\t],\n\t\t// See #75945\n\t\t// Cygwin: [\n\t\t// \t`${process.env['HOMEDRIVE']}\\\\cygwin64\\\\bin\\\\bash.exe`,\n\t\t// \t`${process.env['HOMEDRIVE']}\\\\cygwin\\\\bin\\\\bash.exe`\n\t\t// ]\n\t};\n\tconst promises: Promise<IShellDefinition | undefined>[] = [];\n\tObject.keys(expectedLocations).forEach(key => promises.push(validateShellPaths(key, expectedLocations[key])));\n\tconst shells = await Promise.all(promises);\n\treturn coalesce(shells);\n}\n\nasync function detectAvailableUnixShells(): Promise<IShellDefinition[]> {\n\tconst contents = await readFile('/etc/shells', 'utf8');\n\tconst shells = contents.split('\\n').filter(e => e.trim().indexOf('#') !== 0 && e.trim().length > 0);\n\treturn shells.map(e => {\n\t\treturn {\n\t\t\tlabel: basename(e),\n\t\t\tpath: e\n\t\t};\n\t});\n}\n\nasync function validateShellPaths(label: string, potentialPaths: string[]): Promise<IShellDefinition | undefined> {\n\tif (potentialPaths.length === 0) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tconst current = potentialPaths.shift()!;\n\tif (current! === '') {\n\t\treturn validateShellPaths(label, potentialPaths);\n\t}\n\ttry {\n\t\tconst result = await stat(normalize(current));\n\t\tif (result.isFile() || result.isSymbolicLink()) {\n\t\t\treturn {\n\t\t\t\tlabel,\n\t\t\t\tpath: current\n\t\t\t};\n\t\t}\n\t} catch { /* noop */ }\n\treturn validateShellPaths(label, potentialPaths);\n}\n\nasync function getShellPathFromRegistry(shellName: string): Promise<string> {\n\tconst Registry = await import('vscode-windows-registry');\n\ttry {\n\t\tconst shellPath = Registry.GetStringRegKey('HKEY_LOCAL_MACHINE', `SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\App Paths\\\\${shellName}.exe`, '');\n\t\treturn shellPath ? shellPath : '';\n\t} catch (error) {\n\t\treturn '';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment, isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { readFile, exists } from 'vs/base/node/pfs';\nimport * as path from 'vs/base/common/path';\nimport { isString } from 'vs/base/common/types';\nimport { getCaseInsensitive } from 'vs/base/common/objects';\n\nlet mainProcessParentEnv: IProcessEnvironment | undefined;\n\nexport async function getMainProcessParentEnv(baseEnvironment: IProcessEnvironment = process.env as IProcessEnvironment): Promise<IProcessEnvironment> {\n\tif (mainProcessParentEnv) {\n\t\treturn mainProcessParentEnv;\n\t}\n\n\t// For Linux use /proc/<pid>/status to get the parent of the main process and then fetch its\n\t// env using /proc/<pid>/environ.\n\tif (isLinux) {\n\t\tconst mainProcessId = process.ppid;\n\t\tconst codeProcessName = path.basename(process.argv[0]);\n\t\tlet pid: number = 0;\n\t\tlet ppid: number = mainProcessId;\n\t\tlet name: string = codeProcessName;\n\t\tdo {\n\t\t\tpid = ppid;\n\t\t\tconst status = await readFile(`/proc/${pid}/status`, 'utf8');\n\t\t\tconst splitByLine = status.split('\\n');\n\t\t\tsplitByLine.forEach(line => {\n\t\t\t\tif (line.indexOf('Name:') === 0) {\n\t\t\t\t\tname = line.replace(/^Name:\\s+/, '');\n\t\t\t\t}\n\t\t\t\tif (line.indexOf('PPid:') === 0) {\n\t\t\t\t\tppid = parseInt(line.replace(/^PPid:\\s+/, ''));\n\t\t\t\t}\n\t\t\t});\n\t\t} while (name === codeProcessName);\n\t\tconst rawEnv = await readFile(`/proc/${pid}/environ`, 'utf8');\n\t\tconst env: IProcessEnvironment = {};\n\t\trawEnv.split('\\0').forEach(e => {\n\t\t\tconst i = e.indexOf('=');\n\t\t\tenv[e.substr(0, i)] = e.substr(i + 1);\n\t\t});\n\t\tmainProcessParentEnv = env;\n\t}\n\n\t// For macOS we want the \"root\" environment as shells by default run as login shells. It\n\t// doesn't appear to be possible to get the \"root\" environment as `ps eww -o command` for\n\t// PID 1 (the parent of the main process when launched from the dock/finder) returns no\n\t// environment, because of this we will fill in the root environment using a allowlist of\n\t// environment variables that we have.\n\tif (isMacintosh) {\n\t\tmainProcessParentEnv = {};\n\t\t// This list was generated by diffing launching a terminal with {} and the system\n\t\t// terminal launched from finder.\n\t\tconst rootEnvVars = [\n\t\t\t'SHELL',\n\t\t\t'SSH_AUTH_SOCK',\n\t\t\t'Apple_PubSub_Socket_Render',\n\t\t\t'XPC_FLAGS',\n\t\t\t'XPC_SERVICE_NAME',\n\t\t\t'HOME',\n\t\t\t'LOGNAME',\n\t\t\t'TMPDIR'\n\t\t];\n\t\trootEnvVars.forEach(k => {\n\t\t\tif (baseEnvironment[k]) {\n\t\t\t\tmainProcessParentEnv![k] = baseEnvironment[k]!;\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO: Windows should return a fresh environment block, might need native code?\n\tif (isWindows) {\n\t\tmainProcessParentEnv = baseEnvironment;\n\t}\n\n\treturn mainProcessParentEnv!;\n}\n\nexport async function findExecutable(command: string, cwd?: string, paths?: string[], env: IProcessEnvironment = process.env as IProcessEnvironment): Promise<string | undefined> {\n\t// If we have an absolute path then we take it.\n\tif (path.isAbsolute(command)) {\n\t\treturn await exists(command) ? command : undefined;\n\t}\n\tif (cwd === undefined) {\n\t\tcwd = process.cwd();\n\t}\n\tconst dir = path.dirname(command);\n\tif (dir !== '.') {\n\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t// to the current working directory.\n\t\tconst fullPath = path.join(cwd, command);\n\t\treturn await exists(fullPath) ? fullPath : undefined;\n\t}\n\tconst envPath = getCaseInsensitive(env, 'PATH');\n\tif (paths === undefined && isString(envPath)) {\n\t\tpaths = envPath.split(path.delimiter);\n\t}\n\t// No PATH environment. Make path absolute to the cwd.\n\tif (paths === undefined || paths.length === 0) {\n\t\tconst fullPath = path.join(cwd, command);\n\t\treturn await exists(fullPath) ? fullPath : undefined;\n\t}\n\t// We have a simple file name. We get the path variable from the env\n\t// and try to find the executable on the path.\n\tfor (let pathEntry of paths) {\n\t\t// The path entry is absolute.\n\t\tlet fullPath: string;\n\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\tfullPath = path.join(pathEntry, command);\n\t\t} else {\n\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t}\n\n\t\tif (await exists(fullPath)) {\n\t\t\treturn fullPath;\n\t\t}\n\t\tif (isWindows) {\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await exists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await exists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t}\n\tconst fullPath = path.join(cwd, command);\n\treturn await exists(fullPath) ? fullPath : undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport type * as pty from 'node-pty';\nimport * as fs from 'fs';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { getWindowsBuildNumber } from 'vs/workbench/contrib/terminal/node/terminal';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IShellLaunchConfig, ITerminalChildProcess, ITerminalLaunchError } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { exec } from 'child_process';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { stat } from 'vs/base/node/pfs';\nimport { findExecutable } from 'vs/workbench/contrib/terminal/node/terminalEnvironment';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\n\n// Writing large amounts of data can be corrupted for some reason, after looking into this is\n// appears to be a race condition around writing to the FD which may be based on how powerful the\n// hardware is. The workaround for this is to space out when large amounts of data is being written\n// to the terminal. See https://github.com/microsoft/vscode/issues/38137\nconst WRITE_MAX_CHUNK_SIZE = 50;\nconst WRITE_INTERVAL_MS = 5;\n\nexport class TerminalProcess extends Disposable implements ITerminalChildProcess {\n\tprivate _exitCode: number | undefined;\n\tprivate _exitMessage: string | undefined;\n\tprivate _closeTimeout: any;\n\tprivate _ptyProcess: pty.IPty | undefined;\n\tprivate _currentTitle: string = '';\n\tprivate _processStartupComplete: Promise<void> | undefined;\n\tprivate _isDisposed: boolean = false;\n\tprivate _titleInterval: NodeJS.Timer | null = null;\n\tprivate _writeQueue: string[] = [];\n\tprivate _writeTimeout: NodeJS.Timeout | undefined;\n\tprivate _delayedResizer: DelayedResizer | undefined;\n\tprivate readonly _initialCwd: string;\n\tprivate readonly _ptyOptions: pty.IPtyForkOptions | pty.IWindowsPtyForkOptions;\n\n\tpublic get exitMessage(): string | undefined { return this._exitMessage; }\n\n\tprivate readonly _onProcessData = this._register(new Emitter<string>());\n\tpublic get onProcessData(): Event<string> { return this._onProcessData.event; }\n\tprivate readonly _onProcessExit = this._register(new Emitter<number>());\n\tpublic get onProcessExit(): Event<number> { return this._onProcessExit.event; }\n\tprivate readonly _onProcessReady = this._register(new Emitter<{ pid: number, cwd: string }>());\n\tpublic get onProcessReady(): Event<{ pid: number, cwd: string }> { return this._onProcessReady.event; }\n\tprivate readonly _onProcessTitleChanged = this._register(new Emitter<string>());\n\tpublic get onProcessTitleChanged(): Event<string> { return this._onProcessTitleChanged.event; }\n\n\tconstructor(\n\t\tprivate readonly _shellLaunchConfig: IShellLaunchConfig,\n\t\tcwd: string,\n\t\tcols: number,\n\t\trows: number,\n\t\tenv: platform.IProcessEnvironment,\n\t\t/**\n\t\t * environment used for `findExecutable`\n\t\t */\n\t\tprivate readonly _executableEnv: platform.IProcessEnvironment,\n\t\twindowsEnableConpty: boolean,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tlet name: string;\n\t\tif (platform.isWindows) {\n\t\t\tname = path.basename(this._shellLaunchConfig.executable || '');\n\t\t} else {\n\t\t\t// Using 'xterm-256color' here helps ensure that the majority of Linux distributions will use a\n\t\t\t// color prompt as defined in the default ~/.bashrc file.\n\t\t\tname = 'xterm-256color';\n\t\t}\n\t\tthis._initialCwd = cwd;\n\t\tconst useConpty = windowsEnableConpty && process.platform === 'win32' && getWindowsBuildNumber() >= 18309;\n\t\tthis._ptyOptions = {\n\t\t\tname,\n\t\t\tcwd,\n\t\t\tenv,\n\t\t\tcols,\n\t\t\trows,\n\t\t\tuseConpty,\n\t\t\t// This option will force conpty to not redraw the whole viewport on launch\n\t\t\tconptyInheritCursor: useConpty && !!_shellLaunchConfig.initialText\n\t\t};\n\t\t// Delay resizes to avoid conpty not respecting very early resize calls\n\t\tif (platform.isWindows && useConpty && cols === 0 && rows === 0 && this._shellLaunchConfig.executable?.endsWith('Git\\\\bin\\\\bash.exe')) {\n\t\t\tthis._delayedResizer = new DelayedResizer();\n\t\t\tthis._register(this._delayedResizer.onTrigger(dimensions => {\n\t\t\t\tthis._delayedResizer?.dispose();\n\t\t\t\tthis._delayedResizer = undefined;\n\t\t\t\tif (dimensions.cols && dimensions.rows) {\n\t\t\t\t\tthis.resize(dimensions.cols, dimensions.rows);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic async start(): Promise<ITerminalLaunchError | undefined> {\n\t\tconst results = await Promise.all([this._validateCwd(), this._validateExecutable()]);\n\t\tconst firstError = results.find(r => r !== undefined);\n\t\tif (firstError) {\n\t\t\treturn firstError;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.setupPtyProcess(this._shellLaunchConfig, this._ptyOptions);\n\t\t\treturn undefined;\n\t\t} catch (err) {\n\t\t\tthis._logService.trace('IPty#spawn native exception', err);\n\t\t\treturn { message: `A native exception occurred during launch (${err.message})` };\n\t\t}\n\t}\n\n\tprivate async _validateCwd(): Promise<undefined | ITerminalLaunchError> {\n\t\ttry {\n\t\t\tconst result = await stat(this._initialCwd);\n\t\t\tif (!result.isDirectory()) {\n\t\t\t\treturn { message: localize('launchFail.cwdNotDirectory', \"Starting directory (cwd) \\\"{0}\\\" is not a directory\", this._initialCwd.toString()) };\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tif (err?.code === 'ENOENT') {\n\t\t\t\treturn { message: localize('launchFail.cwdDoesNotExist', \"Starting directory (cwd) \\\"{0}\\\" does not exist\", this._initialCwd.toString()) };\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async _validateExecutable(): Promise<undefined | ITerminalLaunchError> {\n\t\tconst slc = this._shellLaunchConfig;\n\t\tif (!slc.executable) {\n\t\t\tthrow new Error('IShellLaunchConfig.executable not set');\n\t\t}\n\t\ttry {\n\t\t\tconst result = await stat(slc.executable);\n\t\t\tif (!result.isFile() && !result.isSymbolicLink()) {\n\t\t\t\treturn { message: localize('launchFail.executableIsNotFileOrSymlink', \"Path to shell executable \\\"{0}\\\" is not a file of a symlink\", slc.executable) };\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tif (err?.code === 'ENOENT') {\n\t\t\t\t// The executable isn't an absolute path, try find it on the PATH or CWD\n\t\t\t\tlet cwd = slc.cwd instanceof URI ? slc.cwd.path : slc.cwd!;\n\t\t\t\tconst envPaths: string[] | undefined = (slc.env && slc.env.PATH) ? slc.env.PATH.split(path.delimiter) : undefined;\n\t\t\t\tconst executable = await findExecutable(slc.executable!, cwd, envPaths, this._executableEnv);\n\t\t\t\tif (!executable) {\n\t\t\t\t\treturn { message: localize('launchFail.executableDoesNotExist', \"Path to shell executable \\\"{0}\\\" does not exist\", slc.executable) };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async setupPtyProcess(shellLaunchConfig: IShellLaunchConfig, options: pty.IPtyForkOptions): Promise<void> {\n\t\tconst args = shellLaunchConfig.args || [];\n\t\tthis._logService.trace('IPty#spawn', shellLaunchConfig.executable, args, options);\n\t\tconst ptyProcess = (await import('node-pty')).spawn(shellLaunchConfig.executable!, args, options);\n\t\tthis._ptyProcess = ptyProcess;\n\t\tthis._processStartupComplete = new Promise<void>(c => {\n\t\t\tthis.onProcessReady(() => c());\n\t\t});\n\t\tptyProcess.onData(data => {\n\t\t\tthis._onProcessData.fire(data);\n\t\t\tif (this._closeTimeout) {\n\t\t\t\tclearTimeout(this._closeTimeout);\n\t\t\t\tthis._queueProcessExit();\n\t\t\t}\n\t\t});\n\t\tptyProcess.onExit(e => {\n\t\t\tthis._exitCode = e.exitCode;\n\t\t\tthis._queueProcessExit();\n\t\t});\n\t\tthis._setupTitlePolling(ptyProcess);\n\t\tthis._sendProcessId(ptyProcess.pid);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tif (this._titleInterval) {\n\t\t\tclearInterval(this._titleInterval);\n\t\t}\n\t\tthis._titleInterval = null;\n\t\tthis._onProcessData.dispose();\n\t\tthis._onProcessExit.dispose();\n\t\tthis._onProcessReady.dispose();\n\t\tthis._onProcessTitleChanged.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setupTitlePolling(ptyProcess: pty.IPty) {\n\t\t// Send initial timeout async to give event listeners a chance to init\n\t\tsetTimeout(() => {\n\t\t\tthis._sendProcessTitle(ptyProcess);\n\t\t}, 0);\n\t\t// Setup polling for non-Windows, for Windows `process` doesn't change\n\t\tif (!platform.isWindows) {\n\t\t\tthis._titleInterval = setInterval(() => {\n\t\t\t\tif (this._currentTitle !== ptyProcess.process) {\n\t\t\t\t\tthis._sendProcessTitle(ptyProcess);\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t}\n\n\t// Allow any trailing data events to be sent before the exit event is sent.\n\t// See https://github.com/Tyriar/node-pty/issues/72\n\tprivate _queueProcessExit() {\n\t\tif (this._closeTimeout) {\n\t\t\tclearTimeout(this._closeTimeout);\n\t\t}\n\t\tthis._closeTimeout = setTimeout(() => this._kill(), 250);\n\t}\n\n\tprivate async _kill(): Promise<void> {\n\t\t// Wait to kill to process until the start up code has run. This prevents us from firing a process exit before a\n\t\t// process start.\n\t\tawait this._processStartupComplete;\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\t// Attempt to kill the pty, it may have already been killed at this\n\t\t// point but we want to make sure\n\t\ttry {\n\t\t\tif (this._ptyProcess) {\n\t\t\t\tthis._logService.trace('IPty#kill');\n\t\t\t\tthis._ptyProcess.kill();\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\t// Swallow, the pty has already been killed\n\t\t}\n\t\tthis._onProcessExit.fire(this._exitCode || 0);\n\t\tthis.dispose();\n\t}\n\n\tprivate _sendProcessId(pid: number) {\n\t\tthis._onProcessReady.fire({ pid, cwd: this._initialCwd });\n\t}\n\n\tprivate _sendProcessTitle(ptyProcess: pty.IPty): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._currentTitle = ptyProcess.process;\n\t\tthis._onProcessTitleChanged.fire(this._currentTitle);\n\t}\n\n\tpublic shutdown(immediate: boolean): void {\n\t\tif (immediate) {\n\t\t\tthis._kill();\n\t\t} else {\n\t\t\tthis._queueProcessExit();\n\t\t}\n\t}\n\n\tpublic input(data: string): void {\n\t\tif (this._isDisposed || !this._ptyProcess) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 0; i <= Math.floor(data.length / WRITE_MAX_CHUNK_SIZE); i++) {\n\t\t\tthis._writeQueue.push(data.substr(i * WRITE_MAX_CHUNK_SIZE, WRITE_MAX_CHUNK_SIZE));\n\t\t}\n\t\tthis._startWrite();\n\t}\n\n\tprivate _startWrite(): void {\n\t\t// Don't write if it's already queued of is there is nothing to write\n\t\tif (this._writeTimeout !== undefined || this._writeQueue.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._doWrite();\n\n\t\t// Don't queue more writes if the queue is empty\n\t\tif (this._writeQueue.length === 0) {\n\t\t\tthis._writeTimeout = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\t// Queue the next write\n\t\tthis._writeTimeout = setTimeout(() => {\n\t\t\tthis._writeTimeout = undefined;\n\t\t\tthis._startWrite();\n\t\t}, WRITE_INTERVAL_MS);\n\t}\n\n\tprivate _doWrite(): void {\n\t\tconst data = this._writeQueue.shift()!;\n\t\tthis._logService.trace('IPty#write', `${data.length} characters`);\n\t\tthis._ptyProcess!.write(data);\n\t}\n\n\tpublic resize(cols: number, rows: number): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof cols !== 'number' || typeof rows !== 'number' || isNaN(cols) || isNaN(rows)) {\n\t\t\treturn;\n\t\t}\n\t\t// Ensure that cols and rows are always >= 1, this prevents a native\n\t\t// exception in winpty.\n\t\tif (this._ptyProcess) {\n\t\t\tcols = Math.max(cols, 1);\n\t\t\trows = Math.max(rows, 1);\n\n\t\t\t// Delay resize if needed\n\t\t\tif (this._delayedResizer) {\n\t\t\t\tthis._delayedResizer.cols = cols;\n\t\t\t\tthis._delayedResizer.rows = rows;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._logService.trace('IPty#resize', cols, rows);\n\t\t\ttry {\n\t\t\t\tthis._ptyProcess.resize(cols, rows);\n\t\t\t} catch (e) {\n\t\t\t\t// Swallow error if the pty has already exited\n\t\t\t\tthis._logService.trace('IPty#resize exception ' + e.message);\n\t\t\t\tif (this._exitCode !== undefined && e.message !== 'ioctl(2) failed, EBADF') {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getInitialCwd(): Promise<string> {\n\t\treturn Promise.resolve(this._initialCwd);\n\t}\n\n\tpublic getCwd(): Promise<string> {\n\t\tif (platform.isMacintosh) {\n\t\t\treturn new Promise<string>(resolve => {\n\t\t\t\tif (!this._ptyProcess) {\n\t\t\t\t\tresolve(this._initialCwd);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._logService.trace('IPty#pid');\n\t\t\t\texec('lsof -OPl -p ' + this._ptyProcess.pid + ' | grep cwd', (error, stdout, stderr) => {\n\t\t\t\t\tif (stdout !== '') {\n\t\t\t\t\t\tresolve(stdout.substring(stdout.indexOf('/'), stdout.length - 1));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (platform.isLinux) {\n\t\t\treturn new Promise<string>(resolve => {\n\t\t\t\tif (!this._ptyProcess) {\n\t\t\t\t\tresolve(this._initialCwd);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._logService.trace('IPty#pid');\n\t\t\t\tfs.readlink('/proc/' + this._ptyProcess.pid + '/cwd', (err, linkedstr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve(this._initialCwd);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(linkedstr);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn new Promise<string>(resolve => {\n\t\t\tresolve(this._initialCwd);\n\t\t});\n\t}\n\n\tpublic getLatency(): Promise<number> {\n\t\treturn Promise.resolve(0);\n\t}\n}\n\n/**\n * Tracks the latest resize event to be trigger at a later point.\n */\nclass DelayedResizer extends Disposable {\n\tpublic rows: number | undefined;\n\tpublic cols: number | undefined;\n\tprivate _timeout: NodeJS.Timeout;\n\n\tprivate readonly _onTrigger = this._register(new Emitter<{ rows?: number, cols?: number }>());\n\tpublic get onTrigger(): Event<{ rows?: number, cols?: number }> { return this._onTrigger.event; }\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => {\n\t\t\tthis._onTrigger.fire({ rows: this.rows, cols: this.cols });\n\t\t}, 1000);\n\t\tthis._register({\n\t\t\tdispose: () => {\n\t\t\t\tclearTimeout(this._timeout);\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tclearTimeout(this._timeout);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\n\nexport const IConfigurationResolverService = createDecorator<IConfigurationResolverService>('configurationResolverService');\n\nexport interface IConfigurationResolverService {\n\treadonly _serviceBrand: undefined;\n\n\tresolve(folder: IWorkspaceFolder | undefined, value: string): string;\n\tresolve(folder: IWorkspaceFolder | undefined, value: string[]): string[];\n\tresolve(folder: IWorkspaceFolder | undefined, value: IStringDictionary<string>): IStringDictionary<string>;\n\n\t/**\n\t * Recursively resolves all variables in the given config and returns a copy of it with substituted values.\n\t * Command variables are only substituted if a \"commandValueMapping\" dictionary is given and if it contains an entry for the command.\n\t */\n\tresolveAny(folder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): any;\n\n\t/**\n\t * Recursively resolves all variables (including commands and user input) in the given config and returns a copy of it with substituted values.\n\t * If a \"variables\" dictionary (with names -> command ids) is given, command variables are first mapped through it before being resolved.\n\t *\n\t * @param section For example, 'tasks' or 'debug'. Used for resolving inputs.\n\t * @param variables Aliases for commands.\n\t */\n\tresolveWithInteractionReplace(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>, target?: ConfigurationTarget): Promise<any>;\n\n\t/**\n\t * Similar to resolveWithInteractionReplace, except without the replace. Returns a map of variables and their resolution.\n\t * Keys in the map will be of the format input:variableName or command:variableName.\n\t */\n\tresolveWithInteraction(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>, target?: ConfigurationTarget): Promise<Map<string, string> | undefined>;\n\n\t/**\n\t * Contributes a variable that can be resolved later. Consumers that use resolveAny, resolveWithInteraction,\n\t * and resolveWithInteractionReplace will have contributed variables resolved.\n\t */\n\tcontributeVariable(variable: string, resolution: () => Promise<string | undefined>): void;\n}\n\nexport interface PromptStringInputInfo {\n\tid: string;\n\ttype: 'promptString';\n\tdescription: string;\n\tdefault?: string;\n\tpassword?: boolean;\n}\n\nexport interface PickStringInputInfo {\n\tid: string;\n\ttype: 'pickString';\n\tdescription: string;\n\toptions: (string | { value: string, label?: string })[];\n\tdefault?: string;\n}\n\nexport interface CommandInputInfo {\n\tid: string;\n\ttype: 'command';\n\tcommand: string;\n\targs?: any;\n}\n\nexport type ConfiguredInput = PromptStringInputInfo | PickStringInputInfo | CommandInputInfo;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as paths from 'vs/base/common/path';\nimport * as process from 'vs/base/common/process';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IProcessEnvironment, isWindows, isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { localize } from 'vs/nls';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ILabelService } from 'vs/platform/label/common/label';\n\nexport interface IVariableResolveContext {\n\tgetFolderUri(folderName: string): uri | undefined;\n\tgetWorkspaceFolderCount(): number;\n\tgetConfigurationValue(folderUri: uri | undefined, section: string): string | undefined;\n\tgetExecPath(): string | undefined;\n\tgetFilePath(): string | undefined;\n\tgetWorkspaceFolderPathForFile?(): string | undefined;\n\tgetSelectedText(): string | undefined;\n\tgetLineNumber(): string | undefined;\n}\n\nexport class AbstractVariableResolverService implements IConfigurationResolverService {\n\n\tstatic readonly VARIABLE_LHS = '${';\n\tstatic readonly VARIABLE_REGEXP = /\\$\\{(.*?)\\}/g;\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _context: IVariableResolveContext;\n\tprivate _labelService?: ILabelService;\n\tprivate _envVariables?: IProcessEnvironment;\n\tprotected _contributedVariables: Map<string, () => Promise<string | undefined>> = new Map();\n\n\n\tconstructor(_context: IVariableResolveContext, _labelService?: ILabelService, _envVariables?: IProcessEnvironment) {\n\t\tthis._context = _context;\n\t\tthis._labelService = _labelService;\n\t\tif (_envVariables) {\n\t\t\tif (isWindows) {\n\t\t\t\t// windows env variables are case insensitive\n\t\t\t\tconst ev: IProcessEnvironment = Object.create(null);\n\t\t\t\tthis._envVariables = ev;\n\t\t\t\tObject.keys(_envVariables).forEach(key => {\n\t\t\t\t\tev[key.toLowerCase()] = _envVariables[key];\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._envVariables = _envVariables;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: string): string;\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: string[]): string[];\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: IStringDictionary<string>): IStringDictionary<string>;\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: any): any {\n\t\treturn this.recursiveResolve(root ? root.uri : undefined, value);\n\t}\n\n\tpublic resolveAnyBase(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): any {\n\n\t\tconst result = objects.deepClone(config) as any;\n\n\t\t// hoist platform specific attributes to top level\n\t\tif (isWindows && result.windows) {\n\t\t\tObject.keys(result.windows).forEach(key => result[key] = result.windows[key]);\n\t\t} else if (isMacintosh && result.osx) {\n\t\t\tObject.keys(result.osx).forEach(key => result[key] = result.osx[key]);\n\t\t} else if (isLinux && result.linux) {\n\t\t\tObject.keys(result.linux).forEach(key => result[key] = result.linux[key]);\n\t\t}\n\n\t\t// delete all platform specific sections\n\t\tdelete result.windows;\n\t\tdelete result.osx;\n\t\tdelete result.linux;\n\n\t\t// substitute all variables recursively in string values\n\t\treturn this.recursiveResolve(workspaceFolder ? workspaceFolder.uri : undefined, result, commandValueMapping, resolvedVariables);\n\t}\n\n\tpublic resolveAny(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): any {\n\t\treturn this.resolveAnyBase(workspaceFolder, config, commandValueMapping);\n\t}\n\n\tpublic resolveAnyMap(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): { newConfig: any, resolvedVariables: Map<string, string> } {\n\t\tconst resolvedVariables = new Map<string, string>();\n\t\tconst newConfig = this.resolveAnyBase(workspaceFolder, config, commandValueMapping, resolvedVariables);\n\t\treturn { newConfig, resolvedVariables };\n\t}\n\n\tpublic resolveWithInteractionReplace(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>): Promise<any> {\n\t\tthrow new Error('resolveWithInteractionReplace not implemented.');\n\t}\n\n\tpublic resolveWithInteraction(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>): Promise<Map<string, string> | undefined> {\n\t\tthrow new Error('resolveWithInteraction not implemented.');\n\t}\n\n\tpublic contributeVariable(variable: string, resolution: () => Promise<string | undefined>): void {\n\t\tif (this._contributedVariables.has(variable)) {\n\t\t\tthrow new Error('Variable ' + variable + ' is contributed twice.');\n\t\t} else {\n\t\t\tthis._contributedVariables.set(variable, resolution);\n\t\t}\n\t}\n\n\tprivate recursiveResolve(folderUri: uri | undefined, value: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): any {\n\t\tif (types.isString(value)) {\n\t\t\treturn this.resolveString(folderUri, value, commandValueMapping, resolvedVariables);\n\t\t} else if (types.isArray(value)) {\n\t\t\treturn value.map(s => this.recursiveResolve(folderUri, s, commandValueMapping, resolvedVariables));\n\t\t} else if (types.isObject(value)) {\n\t\t\tlet result: IStringDictionary<string | IStringDictionary<string> | string[]> = Object.create(null);\n\t\t\tObject.keys(value).forEach(key => {\n\t\t\t\tconst replaced = this.resolveString(folderUri, key, commandValueMapping, resolvedVariables);\n\t\t\t\tresult[replaced] = this.recursiveResolve(folderUri, value[key], commandValueMapping, resolvedVariables);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate resolveString(folderUri: uri | undefined, value: string, commandValueMapping: IStringDictionary<string> | undefined, resolvedVariables?: Map<string, string>): string {\n\n\t\t// loop through all variables occurrences in 'value'\n\t\tconst replaced = value.replace(AbstractVariableResolverService.VARIABLE_REGEXP, (match: string, variable: string) => {\n\t\t\t// disallow attempted nesting, see #77289\n\t\t\tif (variable.includes(AbstractVariableResolverService.VARIABLE_LHS)) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\tlet resolvedValue = this.evaluateSingleVariable(match, variable, folderUri, commandValueMapping);\n\n\t\t\tif (resolvedVariables) {\n\t\t\t\tresolvedVariables.set(variable, resolvedValue);\n\t\t\t}\n\n\t\t\treturn resolvedValue;\n\t\t});\n\n\t\treturn replaced;\n\t}\n\n\tprivate fsPath(displayUri: uri): string {\n\t\treturn this._labelService ? this._labelService.getUriLabel(displayUri, { noPrefix: true }) : displayUri.fsPath;\n\t}\n\n\tprivate evaluateSingleVariable(match: string, variable: string, folderUri: uri | undefined, commandValueMapping: IStringDictionary<string> | undefined): string {\n\n\t\t// try to separate variable arguments from variable name\n\t\tlet argument: string | undefined;\n\t\tconst parts = variable.split(':');\n\t\tif (parts.length > 1) {\n\t\t\tvariable = parts[0];\n\t\t\targument = parts[1];\n\t\t}\n\n\t\t// common error handling for all variables that require an open editor\n\t\tconst getFilePath = (): string => {\n\n\t\t\tconst filePath = this._context.getFilePath();\n\t\t\tif (filePath) {\n\t\t\t\treturn filePath;\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveFile', \"Variable {0} can not be resolved. Please open an editor.\", match));\n\t\t};\n\n\t\t// common error handling for all variables that require an open editor\n\t\tconst getFolderPathForFile = (): string => {\n\n\t\t\tconst filePath = getFilePath();\t\t// throws error if no editor open\n\t\t\tif (this._context.getWorkspaceFolderPathForFile) {\n\t\t\t\tconst folderPath = this._context.getWorkspaceFolderPathForFile();\n\t\t\t\tif (folderPath) {\n\t\t\t\t\treturn folderPath;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveFolderForFile', \"Variable {0}: can not find workspace folder of '{1}'.\", match, paths.basename(filePath)));\n\t\t};\n\n\t\t// common error handling for all variables that require an open folder and accept a folder name argument\n\t\tconst getFolderUri = (): uri => {\n\n\t\t\tif (argument) {\n\t\t\t\tconst folder = this._context.getFolderUri(argument);\n\t\t\t\tif (folder) {\n\t\t\t\t\treturn folder;\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('canNotFindFolder', \"Variable {0} can not be resolved. No such folder '{1}'.\", match, argument));\n\t\t\t}\n\n\t\t\tif (folderUri) {\n\t\t\t\treturn folderUri;\n\t\t\t}\n\n\t\t\tif (this._context.getWorkspaceFolderCount() > 1) {\n\t\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolderMultiRoot', \"Variable {0} can not be resolved in a multi folder workspace. Scope this variable using ':' and a workspace folder name.\", match));\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolder', \"Variable {0} can not be resolved. Please open a folder.\", match));\n\t\t};\n\n\n\t\tswitch (variable) {\n\n\t\t\tcase 'env':\n\t\t\t\tif (argument) {\n\t\t\t\t\tif (this._envVariables) {\n\t\t\t\t\t\tconst env = this._envVariables[isWindows ? argument.toLowerCase() : argument];\n\t\t\t\t\t\tif (types.isString(env)) {\n\t\t\t\t\t\t\treturn env;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// For `env` we should do the same as a normal shell does - evaluates undefined envs to an empty string #46436\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingEnvVarName', \"Variable {0} can not be resolved because no environment variable name is given.\", match));\n\n\t\t\tcase 'config':\n\t\t\t\tif (argument) {\n\t\t\t\t\tconst config = this._context.getConfigurationValue(folderUri, argument);\n\t\t\t\t\tif (types.isUndefinedOrNull(config)) {\n\t\t\t\t\t\tthrow new Error(localize('configNotFound', \"Variable {0} can not be resolved because setting '{1}' not found.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\tif (types.isObject(config)) {\n\t\t\t\t\t\tthrow new Error(localize('configNoString', \"Variable {0} can not be resolved because '{1}' is a structured value.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingConfigName', \"Variable {0} can not be resolved because no settings name is given.\", match));\n\n\t\t\tcase 'command':\n\t\t\t\treturn this.resolveFromMap(match, argument, commandValueMapping, 'command');\n\n\t\t\tcase 'input':\n\t\t\t\treturn this.resolveFromMap(match, argument, commandValueMapping, 'input');\n\n\t\t\tdefault: {\n\n\t\t\t\tswitch (variable) {\n\t\t\t\t\tcase 'workspaceRoot':\n\t\t\t\t\tcase 'workspaceFolder':\n\t\t\t\t\t\treturn normalizeDriveLetter(this.fsPath(getFolderUri()));\n\n\t\t\t\t\tcase 'cwd':\n\t\t\t\t\t\treturn ((folderUri || argument) ? normalizeDriveLetter(this.fsPath(getFolderUri())) : process.cwd());\n\n\t\t\t\t\tcase 'workspaceRootFolderName':\n\t\t\t\t\tcase 'workspaceFolderBasename':\n\t\t\t\t\t\treturn paths.basename(this.fsPath(getFolderUri()));\n\n\t\t\t\t\tcase 'lineNumber':\n\t\t\t\t\t\tconst lineNumber = this._context.getLineNumber();\n\t\t\t\t\t\tif (lineNumber) {\n\t\t\t\t\t\t\treturn lineNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveLineNumber', \"Variable {0} can not be resolved. Make sure to have a line selected in the active editor.\", match));\n\n\t\t\t\t\tcase 'selectedText':\n\t\t\t\t\t\tconst selectedText = this._context.getSelectedText();\n\t\t\t\t\t\tif (selectedText) {\n\t\t\t\t\t\t\treturn selectedText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveSelectedText', \"Variable {0} can not be resolved. Make sure to have some text selected in the active editor.\", match));\n\n\t\t\t\t\tcase 'file':\n\t\t\t\t\t\treturn getFilePath();\n\n\t\t\t\t\tcase 'fileWorkspaceFolder':\n\t\t\t\t\t\treturn getFolderPathForFile();\n\n\t\t\t\t\tcase 'relativeFile':\n\t\t\t\t\t\tif (folderUri || argument) {\n\t\t\t\t\t\t\treturn paths.relative(this.fsPath(getFolderUri()), getFilePath());\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn getFilePath();\n\n\t\t\t\t\tcase 'relativeFileDirname':\n\t\t\t\t\t\tconst dirname = paths.dirname(getFilePath());\n\t\t\t\t\t\tif (folderUri || argument) {\n\t\t\t\t\t\t\tconst relative = paths.relative(this.fsPath(getFolderUri()), dirname);\n\t\t\t\t\t\t\treturn relative.length === 0 ? '.' : relative;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn dirname;\n\n\t\t\t\t\tcase 'fileDirname':\n\t\t\t\t\t\treturn paths.dirname(getFilePath());\n\n\t\t\t\t\tcase 'fileExtname':\n\t\t\t\t\t\treturn paths.extname(getFilePath());\n\n\t\t\t\t\tcase 'fileBasename':\n\t\t\t\t\t\treturn paths.basename(getFilePath());\n\n\t\t\t\t\tcase 'fileBasenameNoExtension':\n\t\t\t\t\t\tconst basename = paths.basename(getFilePath());\n\t\t\t\t\t\treturn (basename.slice(0, basename.length - paths.extname(basename).length));\n\n\t\t\t\t\tcase 'fileDirnameBasename':\n\t\t\t\t\t\treturn paths.basename(paths.dirname(getFilePath()));\n\n\t\t\t\t\tcase 'execPath':\n\t\t\t\t\t\tconst ep = this._context.getExecPath();\n\t\t\t\t\t\tif (ep) {\n\t\t\t\t\t\t\treturn ep;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn match;\n\n\t\t\t\t\tcase 'pathSeparator':\n\t\t\t\t\t\treturn paths.sep;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn this.resolveFromMap(match, variable, commandValueMapping, undefined);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resolveFromMap(match: string, argument: string | undefined, commandValueMapping: IStringDictionary<string> | undefined, prefix: string | undefined): string {\n\t\tif (argument && commandValueMapping) {\n\t\t\tconst v = (prefix === undefined) ? commandValueMapping[argument] : commandValueMapping[prefix + ':' + argument];\n\t\t\tif (typeof v === 'string') {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tthrow new Error(localize('noValueForCommand', \"Variable {0} can not be resolved because the command has no value.\", match));\n\t\t}\n\t\treturn match;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IResourceEditorInput, IEditorOptions, ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IEditorInput, IEditorPane, GroupIdentifier, IEditorInputWithOptions, IUntitledTextResourceEditorInput, IResourceDiffEditorInput, ITextEditorPane, ITextDiffEditorPane, IEditorIdentifier, ISaveOptions, IRevertOptions, EditorsOrder, IVisibleEditorPane, IEditorCloseEvent } from 'vs/workbench/common/editor';\nimport { Event } from 'vs/base/common/event';\nimport { IEditor, IDiffEditor } from 'vs/editor/common/editorCommon';\nimport { IEditorGroup, IEditorReplacement, OpenEditorContext } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport const IEditorService = createDecorator<IEditorService>('editorService');\n\nexport type IResourceEditorInputType = IResourceEditorInput | IUntitledTextResourceEditorInput | IResourceDiffEditorInput;\n\nexport interface IResourceEditorReplacement {\n\treadonly editor: IResourceEditorInputType;\n\treadonly replacement: IResourceEditorInputType;\n}\n\nexport const ACTIVE_GROUP = -1;\nexport type ACTIVE_GROUP_TYPE = typeof ACTIVE_GROUP;\n\nexport const SIDE_GROUP = -2;\nexport type SIDE_GROUP_TYPE = typeof SIDE_GROUP;\n\nexport interface IOpenEditorOverrideEntry {\n\tid: string;\n\tlabel: string;\n\tactive: boolean;\n\tdetail?: string;\n}\n\nexport interface IOpenEditorOverrideHandler {\n\topen(editor: IEditorInput, options: IEditorOptions | ITextEditorOptions | undefined, group: IEditorGroup, context: OpenEditorContext): IOpenEditorOverride | undefined;\n\tgetEditorOverrides?(resource: URI, options: IEditorOptions | undefined, group: IEditorGroup | undefined): IOpenEditorOverrideEntry[];\n}\n\nexport interface IOpenEditorOverride {\n\n\t/**\n\t * If defined, will prevent the opening of an editor and replace the resulting\n\t * promise with the provided promise for the openEditor() call.\n\t */\n\toverride?: Promise<IEditorPane | undefined>;\n}\n\nexport interface ISaveEditorsOptions extends ISaveOptions {\n\n\t/**\n\t * If true, will ask for a location of the editor to save to.\n\t */\n\treadonly saveAs?: boolean;\n}\n\nexport interface IBaseSaveRevertAllEditorOptions {\n\n\t/**\n\t * Whether to include untitled editors as well.\n\t */\n\treadonly includeUntitled?: boolean;\n\n\t/**\n\t * Whether to exclude sticky editors.\n\t */\n\treadonly excludeSticky?: boolean;\n}\n\nexport interface ISaveAllEditorsOptions extends ISaveEditorsOptions, IBaseSaveRevertAllEditorOptions { }\n\nexport interface IRevertAllEditorsOptions extends IRevertOptions, IBaseSaveRevertAllEditorOptions { }\n\nexport interface ICustomEditorInfo {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly providerDisplayName: string;\n}\n\nexport interface ICustomEditorViewTypesHandler {\n\treadonly onDidChangeViewTypes: Event<void>;\n\n\tgetViewTypes(): ICustomEditorInfo[];\n}\n\nexport interface IEditorService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted when the currently active editor changes.\n\t *\n\t * @see `IEditorService.activeEditorPane`\n\t */\n\treadonly onDidActiveEditorChange: Event<void>;\n\n\t/**\n\t * Emitted when any of the current visible editors changes.\n\t *\n\t * @see `IEditorService.visibleEditorPanes`\n\t */\n\treadonly onDidVisibleEditorsChange: Event<void>;\n\n\t/**\n\t * Emitted when an editor is closed.\n\t */\n\treadonly onDidCloseEditor: Event<IEditorCloseEvent>;\n\n\t/**\n\t * The currently active editor pane or `undefined` if none. The editor pane is\n\t * the workbench container for editors of any kind.\n\t *\n\t * @see `IEditorService.activeEditor` for access to the active editor input\n\t */\n\treadonly activeEditorPane: IVisibleEditorPane | undefined;\n\n\t/**\n\t * The currently active editor or `undefined` if none. An editor is active when it is\n\t * located in the currently active editor group. It will be `undefined` if the active\n\t * editor group has no editors open.\n\t */\n\treadonly activeEditor: IEditorInput | undefined;\n\n\t/**\n\t * The currently active text editor control or `undefined` if there is currently no active\n\t * editor or the active editor widget is neither a text nor a diff editor.\n\t *\n\t * @see `IEditorService.activeEditor`\n\t */\n\treadonly activeTextEditorControl: IEditor | IDiffEditor | undefined;\n\n\t/**\n\t * The currently active text editor mode or `undefined` if there is currently no active\n\t * editor or the active editor control is neither a text nor a diff editor. If the active\n\t * editor is a diff editor, the modified side's mode will be taken.\n\t */\n\treadonly activeTextEditorMode: string | undefined;\n\n\t/**\n\t * All editor panes that are currently visible across all editor groups.\n\t *\n\t * @see `IEditorService.visibleEditors` for access to the visible editor inputs\n\t */\n\treadonly visibleEditorPanes: ReadonlyArray<IVisibleEditorPane>;\n\n\t/**\n\t * All editors that are currently visible. An editor is visible when it is opened in an\n\t * editor group and active in that group. Multiple editor groups can be opened at the same time.\n\t */\n\treadonly visibleEditors: ReadonlyArray<IEditorInput>;\n\n\t/**\n\t * All text editor widgets that are currently visible across all editor groups. A text editor\n\t * widget is either a text or a diff editor.\n\t */\n\treadonly visibleTextEditorControls: ReadonlyArray<IEditor | IDiffEditor>;\n\n\t/**\n\t * All editors that are opened across all editor groups in sequential order\n\t * of appearance.\n\t *\n\t * This includes active as well as inactive editors in each editor group.\n\t */\n\treadonly editors: ReadonlyArray<IEditorInput>;\n\n\t/**\n\t * The total number of editors that are opened either inactive or active.\n\t */\n\treadonly count: number;\n\n\t/**\n\t * All editors that are opened across all editor groups with their group\n\t * identifier.\n\t *\n\t * @param order the order of the editors to use\n\t * @param options wether to exclude sticky editors or not\n\t */\n\tgetEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): ReadonlyArray<IEditorIdentifier>;\n\n\t/**\n\t * Open an editor in an editor group.\n\t *\n\t * @param editor the editor to open\n\t * @param options the options to use for the editor\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editor that opened or `undefined` if the operation failed or the editor was not\n\t * opened to be active.\n\t */\n\topenEditor(editor: IEditorInput, options?: IEditorOptions | ITextEditorOptions, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceEditorInput | IUntitledTextResourceEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextEditorPane | undefined>;\n\topenEditor(editor: IResourceDiffEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextDiffEditorPane | undefined>;\n\n\t/**\n\t * Open editors in an editor group.\n\t *\n\t * @param editors the editors to open with associated options\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editors that opened. The array can be empty or have less elements for editors\n\t * that failed to open or were instructed to open as inactive.\n\t */\n\topenEditors(editors: IEditorInputWithOptions[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ReadonlyArray<IEditorPane>>;\n\topenEditors(editors: IResourceEditorInputType[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ReadonlyArray<IEditorPane>>;\n\n\t/**\n\t * Replaces editors in an editor group with the provided replacement.\n\t *\n\t * @param editors the editors to replace\n\t *\n\t * @returns a promise that is resolved when the replaced active\n\t * editor (if any) has finished loading.\n\t */\n\treplaceEditors(editors: IResourceEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\treplaceEditors(editors: IEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\n\t/**\n\t * Find out if the provided editor is opened in any editor group.\n\t *\n\t * Note: An editor can be opened but not actively visible.\n\t *\n\t * @param editor the editor to check for being opened. If a\n\t * `IResourceEditorInput` is passed in, the resource is checked on\n\t * all opened editors. In case of a side by side editor, the\n\t * right hand side resource is considered only.\n\t */\n\tisOpen(editor: IResourceEditorInput): boolean;\n\tisOpen(editor: IEditorInput): boolean;\n\n\t/**\n\t * Get all available editor overrides for the editor input.\n\t */\n\tgetEditorOverrides(resource: URI, options: IEditorOptions | undefined, group: IEditorGroup | undefined): [IOpenEditorOverrideHandler, IOpenEditorOverrideEntry][];\n\n\t/**\n\t * Allows to override the opening of editors by installing a handler that will\n\t * be called each time an editor is about to open allowing to override the\n\t * operation to open a different editor.\n\t */\n\toverrideOpenEditor(handler: IOpenEditorOverrideHandler): IDisposable;\n\n\t/**\n\t * Register handlers for custom editor view types.\n\t * The handler will provide all available custom editors registered\n\t * and also notify the editor service when a custom editor view type is registered/unregistered.\n\t */\n\tregisterCustomEditorViewTypesHandler(source: string, handler: ICustomEditorViewTypesHandler): IDisposable;\n\n\t/**\n\t * Converts a lightweight input to a workbench editor input.\n\t */\n\tcreateEditorInput(input: IResourceEditorInputType): IEditorInput;\n\n\t/**\n\t * Save the provided list of editors.\n\t *\n\t * @returns `true` if all editors saved and `false` otherwise.\n\t */\n\tsave(editors: IEditorIdentifier | IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Save all editors.\n\t *\n\t * @returns `true` if all editors saved and `false` otherwise.\n\t */\n\tsaveAll(options?: ISaveAllEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Reverts the provided list of editors.\n\t *\n\t * @returns `true` if all editors reverted and `false` otherwise.\n\t */\n\trevert(editors: IEditorIdentifier | IEditorIdentifier[], options?: IRevertOptions): Promise<boolean>;\n\n\t/**\n\t * Reverts all editors.\n\t *\n\t * @returns `true` if all editors reverted and `false` otherwise.\n\t */\n\trevertAll(options?: IRevertAllEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Track the provided editors until all have been closed.\n\t *\n\t * @param options use `waitForSaved: true` to wait for the resources\n\t * being saved. If auto-save is enabled, it may be possible to close\n\t * an editor while the save continues in the background.\n\t */\n\twhenClosed(editors: IResourceEditorInput[], options?: { waitForSaved: boolean }): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { withNullAsUndefined, assertIsDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable, Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IEditor, IEditorViewState, ScrollType, IDiffEditor } from 'vs/editor/common/editorCommon';\nimport { IEditorModel, IEditorOptions, ITextEditorOptions, IBaseResourceEditorInput, IResourceEditorInput, EditorActivation, EditorOpenContext, ITextEditorSelection, TextEditorSelectionRevealType } from 'vs/platform/editor/common/editor';\nimport { IInstantiationService, IConstructorSignature0, ServicesAccessor, BrandedService } from 'vs/platform/instantiation/common/instantiation';\nimport { IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { GroupsOrder, IEditorGroup, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ICompositeControl, IComposite } from 'vs/workbench/common/composite';\nimport { ActionRunner, IAction } from 'vs/base/common/actions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IPathData } from 'vs/platform/windows/common/windows';\nimport { coalesce, firstOrDefault } from 'vs/base/common/arrays';\nimport { ACTIVE_GROUP, IResourceEditorInputType, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IExtUri } from 'vs/base/common/resources';\n\n// Editor State Context Keys\nexport const ActiveEditorDirtyContext = new RawContextKey<boolean>('activeEditorIsDirty', false);\nexport const ActiveEditorPinnedContext = new RawContextKey<boolean>('activeEditorIsNotPreview', false);\nexport const ActiveEditorStickyContext = new RawContextKey<boolean>('activeEditorIsPinned', false);\nexport const ActiveEditorReadonlyContext = new RawContextKey<boolean>('activeEditorIsReadonly', false);\n\n// Editor Kind Context Keys\nexport const ActiveEditorContext = new RawContextKey<string | null>('activeEditor', null);\nexport const ActiveEditorAvailableEditorIdsContext = new RawContextKey<string>('activeEditorAvailableEditorIds', '');\nexport const TextCompareEditorVisibleContext = new RawContextKey<boolean>('textCompareEditorVisible', false);\nexport const TextCompareEditorActiveContext = new RawContextKey<boolean>('textCompareEditorActive', false);\n\n// Editor Group Context Keys\nexport const EditorGroupEditorsCountContext = new RawContextKey<number>('groupEditorsCount', 0);\nexport const ActiveEditorGroupEmptyContext = new RawContextKey<boolean>('activeEditorGroupEmpty', false);\nexport const ActiveEditorGroupIndexContext = new RawContextKey<number>('activeEditorGroupIndex', 0);\nexport const ActiveEditorGroupLastContext = new RawContextKey<boolean>('activeEditorGroupLast', false);\nexport const MultipleEditorGroupsContext = new RawContextKey<boolean>('multipleEditorGroups', false);\nexport const SingleEditorGroupsContext = MultipleEditorGroupsContext.toNegated();\n\n// Editor Layout Context Keys\nexport const EditorsVisibleContext = new RawContextKey<boolean>('editorIsOpen', false);\nexport const InEditorZenModeContext = new RawContextKey<boolean>('inZenMode', false);\nexport const IsCenteredLayoutContext = new RawContextKey<boolean>('isCenteredLayout', false);\nexport const SplitEditorsVertically = new RawContextKey<boolean>('splitEditorsVertically', false);\nexport const EditorAreaVisibleContext = new RawContextKey<boolean>('editorAreaVisible', true);\n\n/**\n * Text diff editor id.\n */\nexport const TEXT_DIFF_EDITOR_ID = 'workbench.editors.textDiffEditor';\n\n/**\n * Binary diff editor id.\n */\nexport const BINARY_DIFF_EDITOR_ID = 'workbench.editors.binaryResourceDiffEditor';\n\n/**\n * The editor pane is the container for workbench editors.\n */\nexport interface IEditorPane extends IComposite {\n\n\t/**\n\t * The assigned input of this editor.\n\t */\n\treadonly input: IEditorInput | undefined;\n\n\t/**\n\t * The assigned options of the editor.\n\t */\n\treadonly options: EditorOptions | undefined;\n\n\t/**\n\t * The assigned group this editor is showing in.\n\t */\n\treadonly group: IEditorGroup | undefined;\n\n\t/**\n\t * The minimum width of this editor.\n\t */\n\treadonly minimumWidth: number;\n\n\t/**\n\t * The maximum width of this editor.\n\t */\n\treadonly maximumWidth: number;\n\n\t/**\n\t * The minimum height of this editor.\n\t */\n\treadonly minimumHeight: number;\n\n\t/**\n\t * The maximum height of this editor.\n\t */\n\treadonly maximumHeight: number;\n\n\t/**\n\t * An event to notify whenever minimum/maximum width/height changes.\n\t */\n\treadonly onDidSizeConstraintsChange: Event<{ width: number; height: number; } | undefined>;\n\n\t/**\n\t * The context key service for this editor. Should be overridden by\n\t * editors that have their own ScopedContextKeyService\n\t */\n\treadonly scopedContextKeyService: IContextKeyService | undefined;\n\n\t/**\n\t * Returns the underlying control of this editor. Callers need to cast\n\t * the control to a specific instance as needed, e.g. by using the\n\t * `isCodeEditor` helper method to access the text code editor.\n\t */\n\tgetControl(): IEditorControl | undefined;\n\n\t/**\n\t * Finds out if this editor is visible or not.\n\t */\n\tisVisible(): boolean;\n}\n\n/**\n * Overrides `IEditorPane` where `input` and `group` are known to be set.\n */\nexport interface IVisibleEditorPane extends IEditorPane {\n\treadonly input: IEditorInput;\n\treadonly group: IEditorGroup;\n}\n\n/**\n * The text editor pane is the container for workbench text editors.\n */\nexport interface ITextEditorPane extends IEditorPane {\n\n\t/**\n\t * Returns the underlying text editor widget of this editor.\n\t */\n\tgetControl(): IEditor | undefined;\n\n\t/**\n\t * Returns the current view state of the text editor if any.\n\t */\n\tgetViewState(): IEditorViewState | undefined;\n}\n\nexport function isTextEditorPane(thing: IEditorPane | undefined): thing is ITextEditorPane {\n\tconst candidate = thing as ITextEditorPane | undefined;\n\n\treturn typeof candidate?.getViewState === 'function';\n}\n\n/**\n * The text editor pane is the container for workbench text diff editors.\n */\nexport interface ITextDiffEditorPane extends IEditorPane {\n\n\t/**\n\t * Returns the underlying text editor widget of this editor.\n\t */\n\tgetControl(): IDiffEditor | undefined;\n}\n\n/**\n * Marker interface for the control inside an editor pane. Callers\n * have to cast the control to work with it, e.g. via methods\n * such as `isCodeEditor(control)`.\n */\nexport interface IEditorControl extends ICompositeControl { }\n\nexport interface IFileEditorInputFactory {\n\n\t/**\n\t * Creates new new editor input capable of showing files.\n\t */\n\tcreateFileEditorInput(resource: URI, preferredResource: URI | undefined, preferredName: string | undefined, preferredDescription: string | undefined, preferredEncoding: string | undefined, preferredMode: string | undefined, instantiationService: IInstantiationService): IFileEditorInput;\n\n\t/**\n\t * Check if the provided object is a file editor input.\n\t */\n\tisFileEditorInput(obj: unknown): obj is IFileEditorInput;\n}\n\ninterface ICustomEditorInputFactory {\n\tcreateCustomEditorInput(resource: URI, instantiationService: IInstantiationService): Promise<IEditorInput>;\n\tcanResolveBackup(editorInput: IEditorInput, backupResource: URI): boolean;\n}\n\nexport interface IEditorInputFactoryRegistry {\n\n\t/**\n\t * Registers the file editor input factory to use for file inputs.\n\t */\n\tregisterFileEditorInputFactory(factory: IFileEditorInputFactory): void;\n\n\t/**\n\t * Returns the file editor input factory to use for file inputs.\n\t */\n\tgetFileEditorInputFactory(): IFileEditorInputFactory;\n\n\t/**\n\t * Registers the custom editor input factory to use for custom inputs.\n\t */\n\tregisterCustomEditorInputFactory(scheme: string, factory: ICustomEditorInputFactory): void;\n\n\t/**\n\t * Returns the custom editor input factory to use for custom inputs.\n\t */\n\tgetCustomEditorInputFactory(scheme: string): ICustomEditorInputFactory | undefined;\n\n\t/**\n\t * Registers a editor input factory for the given editor input to the registry. An editor input factory\n\t * is capable of serializing and deserializing editor inputs from string data.\n\t *\n\t * @param editorInputId the identifier of the editor input\n\t * @param factory the editor input factory for serialization/deserialization\n\t */\n\tregisterEditorInputFactory<Services extends BrandedService[]>(editorInputId: string, ctor: { new(...Services: Services): IEditorInputFactory }): IDisposable;\n\n\t/**\n\t * Returns the editor input factory for the given editor input.\n\t *\n\t * @param editorInputId the identifier of the editor input\n\t */\n\tgetEditorInputFactory(editorInputId: string): IEditorInputFactory | undefined;\n\n\t/**\n\t * Starts the registry by providing the required services.\n\t */\n\tstart(accessor: ServicesAccessor): void;\n}\n\nexport interface IEditorInputFactory {\n\n\t/**\n\t * Determines whether the given editor input can be serialized by the factory.\n\t */\n\tcanSerialize(editorInput: IEditorInput): boolean;\n\n\t/**\n\t * Returns a string representation of the provided editor input that contains enough information\n\t * to deserialize back to the original editor input from the deserialize() method.\n\t */\n\tserialize(editorInput: IEditorInput): string | undefined;\n\n\t/**\n\t * Returns an editor input from the provided serialized form of the editor input. This form matches\n\t * the value returned from the serialize() method.\n\t */\n\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput | undefined;\n}\n\nexport interface IUntitledTextResourceEditorInput extends IBaseResourceEditorInput {\n\n\t/**\n\t * Optional resource. If the resource is not provided a new untitled file is created (e.g. Untitled-1).\n\t * If the used scheme for the resource is not `untitled://`, `forceUntitled: true` must be configured to\n\t * force use the provided resource as associated path. As such, the resource will be used when saving\n\t * the untitled editor.\n\t */\n\treadonly resource?: URI;\n\n\t/**\n\t * Optional language of the untitled resource.\n\t */\n\treadonly mode?: string;\n\n\t/**\n\t * Optional contents of the untitled resource.\n\t */\n\treadonly contents?: string;\n\n\t/**\n\t * Optional encoding of the untitled resource.\n\t */\n\treadonly encoding?: string;\n}\n\nexport interface IResourceDiffEditorInput extends IBaseResourceEditorInput {\n\n\t/**\n\t * The left hand side URI to open inside a diff editor.\n\t */\n\treadonly leftResource: URI;\n\n\t/**\n\t * The right hand side URI to open inside a diff editor.\n\t */\n\treadonly rightResource: URI;\n}\n\nexport const enum Verbosity {\n\tSHORT,\n\tMEDIUM,\n\tLONG\n}\n\nexport const enum SaveReason {\n\n\t/**\n\t * Explicit user gesture.\n\t */\n\tEXPLICIT = 1,\n\n\t/**\n\t * Auto save after a timeout.\n\t */\n\tAUTO = 2,\n\n\t/**\n\t * Auto save after editor focus change.\n\t */\n\tFOCUS_CHANGE = 3,\n\n\t/**\n\t * Auto save after window change.\n\t */\n\tWINDOW_CHANGE = 4\n}\n\nexport interface ISaveOptions {\n\n\t/**\n\t * An indicator how the save operation was triggered.\n\t */\n\treason?: SaveReason;\n\n\t/**\n\t * Forces to save the contents of the working copy\n\t * again even if the working copy is not dirty.\n\t */\n\treadonly force?: boolean;\n\n\t/**\n\t * Instructs the save operation to skip any save participants.\n\t */\n\treadonly skipSaveParticipants?: boolean;\n\n\t/**\n\t * A hint as to which file systems should be available for saving.\n\t */\n\treadonly availableFileSystems?: string[];\n}\n\nexport interface IRevertOptions {\n\n\t/**\n\t * Forces to load the contents of the working copy\n\t * again even if the working copy is not dirty.\n\t */\n\treadonly force?: boolean;\n\n\t/**\n\t * A soft revert will clear dirty state of a working copy\n\t * but will not attempt to load it from its persisted state.\n\t *\n\t * This option may be used in scenarios where an editor is\n\t * closed and where we do not require to load the contents.\n\t */\n\treadonly soft?: boolean;\n}\n\nexport interface IMoveResult {\n\teditor: EditorInput | IResourceEditorInputType;\n\toptions?: IEditorOptions;\n}\n\nexport interface IEditorInput extends IDisposable {\n\n\t/**\n\t * Triggered when this input is disposed.\n\t */\n\treadonly onDispose: Event<void>;\n\n\t/**\n\t * Triggered when this input changes its dirty state.\n\t */\n\treadonly onDidChangeDirty: Event<void>;\n\n\t/**\n\t * Triggered when this input changes its label\n\t */\n\treadonly onDidChangeLabel: Event<void>;\n\n\t/**\n\t * Returns the optional associated resource of this input.\n\t *\n\t * This resource should be unique for all editors of the same\n\t * kind and input and is often used to identify the editor input among\n\t * others.\n\t *\n\t * **Note:** DO NOT use this property for anything but identity\n\t * checks. DO NOT use this property to present as label to the user.\n\t * Please refer to `EditorResourceAccessor` documentation in that case.\n\t */\n\treadonly resource: URI | undefined;\n\n\t/**\n\t * Unique type identifier for this inpput.\n\t */\n\tgetTypeId(): string;\n\n\t/**\n\t * Returns the display name of this input.\n\t */\n\tgetName(): string;\n\n\t/**\n\t * Returns the display description of this input.\n\t */\n\tgetDescription(verbosity?: Verbosity): string | undefined;\n\n\t/**\n\t * Returns the display title of this input.\n\t */\n\tgetTitle(verbosity?: Verbosity): string | undefined;\n\n\t/**\n\t * Returns the aria label to be read out by a screen reader.\n\t */\n\tgetAriaLabel(): string;\n\n\t/**\n\t * Returns a type of `IEditorModel` that represents the resolved input.\n\t * Subclasses should override to provide a meaningful model or return\n\t * `null` if the editor does not require a model.\n\t */\n\tresolve(): Promise<IEditorModel | null>;\n\n\t/**\n\t * Returns if this input is readonly or not.\n\t */\n\tisReadonly(): boolean;\n\n\t/**\n\t * Returns if the input is an untitled editor or not.\n\t */\n\tisUntitled(): boolean;\n\n\t/**\n\t * Returns if this input is dirty or not.\n\t */\n\tisDirty(): boolean;\n\n\t/**\n\t * Returns if this input is currently being saved or soon to be\n\t * saved. Based on this assumption the editor may for example\n\t * decide to not signal the dirty state to the user assuming that\n\t * the save is scheduled to happen anyway.\n\t */\n\tisSaving(): boolean;\n\n\t/**\n\t * Saves the editor. The provided groupId helps implementors\n\t * to e.g. preserve view state of the editor and re-open it\n\t * in the correct group after saving.\n\t *\n\t * @returns the resulting editor input (typically the same) of\n\t * this operation or `undefined` to indicate that the operation\n\t * failed or was canceled.\n\t */\n\tsave(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined>;\n\n\t/**\n\t * Saves the editor to a different location. The provided `group`\n\t * helps implementors to e.g. preserve view state of the editor\n\t * and re-open it in the correct group after saving.\n\t *\n\t * @returns the resulting editor input (typically a different one)\n\t * of this operation or `undefined` to indicate that the operation\n\t * failed or was canceled.\n\t */\n\tsaveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined>;\n\n\t/**\n\t * Reverts this input from the provided group.\n\t */\n\trevert(group: GroupIdentifier, options?: IRevertOptions): Promise<void>;\n\n\t/**\n\t * Called to determine how to handle a resource that is renamed that matches\n\t * the editors resource (or is a child of).\n\t *\n\t * Implementors are free to not implement this method to signal no intent\n\t * to participate. If an editor is returned though, it will replace the\n\t * current one with that editor and optional options.\n\t */\n\trename(group: GroupIdentifier, target: URI): IMoveResult | undefined;\n\n\t/**\n\t * Subclasses can set this to false if it does not make sense to split the editor input.\n\t */\n\tsupportsSplitEditor(): boolean;\n\n\t/**\n\t * Returns if the other object matches this input.\n\t */\n\tmatches(other: unknown): boolean;\n\n\t/**\n\t * Returns if this editor is disposed.\n\t */\n\tisDisposed(): boolean;\n}\n\n/**\n * Editor inputs are lightweight objects that can be passed to the workbench API to open inside the editor part.\n * Each editor input is mapped to an editor that is capable of opening it through the Platform facade.\n */\nexport abstract class EditorInput extends Disposable implements IEditorInput {\n\n\tprotected readonly _onDidChangeDirty = this._register(new Emitter<void>());\n\treadonly onDidChangeDirty = this._onDidChangeDirty.event;\n\n\tprotected readonly _onDidChangeLabel = this._register(new Emitter<void>());\n\treadonly onDidChangeLabel = this._onDidChangeLabel.event;\n\n\tprivate readonly _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose = this._onDispose.event;\n\n\tprivate disposed: boolean = false;\n\n\tabstract get resource(): URI | undefined;\n\n\tabstract getTypeId(): string;\n\n\tgetName(): string {\n\t\treturn `Editor ${this.getTypeId()}`;\n\t}\n\n\tgetDescription(verbosity?: Verbosity): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tgetTitle(verbosity?: Verbosity): string {\n\t\treturn this.getName();\n\t}\n\n\tgetAriaLabel(): string {\n\t\treturn this.getTitle(Verbosity.SHORT);\n\t}\n\n\t/**\n\t * Returns the preferred editor for this input. A list of candidate editors is passed in that whee registered\n\t * for the input. This allows subclasses to decide late which editor to use for the input on a case by case basis.\n\t */\n\tgetPreferredEditorId(candidates: string[]): string | undefined {\n\t\treturn firstOrDefault(candidates);\n\t}\n\n\t/**\n\t* Returns a descriptor suitable for telemetry events.\n\t*\n\t* Subclasses should extend if they can contribute.\n\t*/\n\tgetTelemetryDescriptor(): { [key: string]: unknown } {\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"EditorTelemetryDescriptor\" : {\n\t\t\t\t\"typeId\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\treturn { typeId: this.getTypeId() };\n\t}\n\n\tisReadonly(): boolean {\n\t\treturn true;\n\t}\n\n\tisUntitled(): boolean {\n\t\treturn false;\n\t}\n\n\tisDirty(): boolean {\n\t\treturn false;\n\t}\n\n\tisSaving(): boolean {\n\t\treturn false;\n\t}\n\n\tasync resolve(): Promise<IEditorModel | null> {\n\t\treturn null;\n\t}\n\n\tasync save(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this;\n\t}\n\n\tasync saveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this;\n\t}\n\n\tasync revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> { }\n\n\trename(group: GroupIdentifier, target: URI): IMoveResult | undefined {\n\t\treturn undefined;\n\t}\n\n\tsupportsSplitEditor(): boolean {\n\t\treturn true;\n\t}\n\n\tmatches(otherInput: unknown): boolean {\n\t\treturn this === otherInput;\n\t}\n\n\tisDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n\n\tdispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis._onDispose.fire();\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport const enum EncodingMode {\n\n\t/**\n\t * Instructs the encoding support to encode the current input with the provided encoding\n\t */\n\tEncode,\n\n\t/**\n\t * Instructs the encoding support to decode the current input with the provided encoding\n\t */\n\tDecode\n}\n\nexport interface IEncodingSupport {\n\n\t/**\n\t * Gets the encoding of the type if known.\n\t */\n\tgetEncoding(): string | undefined;\n\n\t/**\n\t * Sets the encoding for the type for saving.\n\t */\n\tsetEncoding(encoding: string, mode: EncodingMode): void;\n}\n\nexport interface IModeSupport {\n\n\t/**\n\t * Sets the language mode of the type.\n\t */\n\tsetMode(mode: string): void;\n}\n\nexport interface IEditorInputWithPreferredResource {\n\n\t/**\n\t * An editor may provide an additional preferred resource alongside\n\t * the `resource` property. While the `resource` property serves as\n\t * unique identifier of the editor that should be used whenever we\n\t * compare to other editors, the `preferredResource` should be used\n\t * in places where e.g. the resource is shown to the user.\n\t *\n\t * For example: on Windows and macOS, the same URI with different\n\t * casing may point to the same file. The editor may chose to\n\t * \"normalize\" the URIs so that only one editor opens for different\n\t * URIs. But when displaying the editor label to the user, the\n\t * preferred URI should be used.\n\t *\n\t * Not all editors have a `preferredResouce`. The `EditorResourceAccessor`\n\t * utility can be used to always get the right resource without having\n\t * to do instanceof checks.\n\t */\n\treadonly preferredResource: URI;\n}\n\nexport function isEditorInputWithPreferredResource(obj: unknown): obj is IEditorInputWithPreferredResource {\n\tconst editorInputWithPreferredResource = obj as IEditorInputWithPreferredResource;\n\n\treturn editorInputWithPreferredResource && !!editorInputWithPreferredResource.preferredResource;\n}\n\n/**\n * This is a tagging interface to declare an editor input being capable of dealing with files. It is only used in the editor registry\n * to register this kind of input to the platform.\n */\nexport interface IFileEditorInput extends IEditorInput, IEncodingSupport, IModeSupport, IEditorInputWithPreferredResource {\n\n\t/**\n\t * Gets the resource this file input is about. This will always be the\n\t * canonical form of the resource, so it may differ from the original\n\t * resource that was provided to create the input. Use `preferredResource`\n\t * for the form as it was created.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * Sets the preferred resource to use for this file input.\n\t */\n\tsetPreferredResource(preferredResource: URI): void;\n\n\t/**\n\t * Sets the preferred name to use for this file input.\n\t *\n\t * Note: for certain file schemes the input may decide to ignore this\n\t * name and use our standard naming. Specifically for schemes we own,\n\t * we do not let others override the name.\n\t */\n\tsetPreferredName(name: string): void;\n\n\t/**\n\t * Sets the preferred description to use for this file input.\n\t *\n\t * Note: for certain file schemes the input may decide to ignore this\n\t * description and use our standard naming. Specifically for schemes we own,\n\t * we do not let others override the description.\n\t */\n\tsetPreferredDescription(description: string): void;\n\n\t/**\n\t * Sets the preferred encoding to use for this file input.\n\t */\n\tsetPreferredEncoding(encoding: string): void;\n\n\t/**\n\t * Sets the preferred language mode to use for this file input.\n\t */\n\tsetPreferredMode(mode: string): void;\n\n\t/**\n\t * Forces this file input to open as binary instead of text.\n\t */\n\tsetForceOpenAsBinary(): void;\n\n\t/**\n\t * Figure out if the file input has been resolved or not.\n\t */\n\tisResolved(): boolean;\n}\n\n/**\n * Side by side editor inputs that have a primary and secondary side.\n */\nexport class SideBySideEditorInput extends EditorInput {\n\n\tstatic readonly ID: string = 'workbench.editorinputs.sidebysideEditorInput';\n\n\tconstructor(\n\t\tprotected readonly name: string | undefined,\n\t\tprotected readonly description: string | undefined,\n\t\tprivate readonly _secondary: EditorInput,\n\t\tprivate readonly _primary: EditorInput\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// When the primary or secondary input gets disposed, dispose this diff editor input\n\t\tconst onceSecondaryDisposed = Event.once(this.secondary.onDispose);\n\t\tthis._register(onceSecondaryDisposed(() => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\tconst oncePrimaryDisposed = Event.once(this.primary.onDispose);\n\t\tthis._register(oncePrimaryDisposed(() => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\t// Reemit some events from the primary side to the outside\n\t\tthis._register(this.primary.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\t\tthis._register(this.primary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n\t}\n\n\t/**\n\t * Use `EditorResourceAccessor` utility method to access the resources\n\t * of both sides of the diff editor.\n\t */\n\tget resource(): URI | undefined {\n\t\treturn undefined;\n\t}\n\n\tget primary(): EditorInput {\n\t\treturn this._primary;\n\t}\n\n\tget secondary(): EditorInput {\n\t\treturn this._secondary;\n\t}\n\n\tgetTypeId(): string {\n\t\treturn SideBySideEditorInput.ID;\n\t}\n\n\tgetName(): string {\n\t\tif (!this.name) {\n\t\t\treturn localize('sideBySideLabels', \"{0} - {1}\", this._secondary.getName(), this._primary.getName());\n\t\t}\n\n\t\treturn this.name;\n\t}\n\n\tgetDescription(): string | undefined {\n\t\treturn this.description;\n\t}\n\n\tisReadonly(): boolean {\n\t\treturn this.primary.isReadonly();\n\t}\n\n\tisUntitled(): boolean {\n\t\treturn this.primary.isUntitled();\n\t}\n\n\tisDirty(): boolean {\n\t\treturn this.primary.isDirty();\n\t}\n\n\tisSaving(): boolean {\n\t\treturn this.primary.isSaving();\n\t}\n\n\tsave(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this.primary.save(group, options);\n\t}\n\n\tsaveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this.primary.saveAs(group, options);\n\t}\n\n\trevert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\treturn this.primary.revert(group, options);\n\t}\n\n\tgetTelemetryDescriptor(): { [key: string]: unknown } {\n\t\tconst descriptor = this.primary.getTelemetryDescriptor();\n\n\t\treturn Object.assign(descriptor, super.getTelemetryDescriptor());\n\t}\n\n\tmatches(otherInput: unknown): boolean {\n\t\tif (otherInput === this) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof SideBySideEditorInput) {\n\t\t\treturn this.primary.matches(otherInput.primary) && this.secondary.matches(otherInput.secondary);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport interface ITextEditorModel extends IEditorModel {\n\ttextEditorModel: ITextModel;\n}\n\n/**\n * The editor model is the heavyweight counterpart of editor input. Depending on the editor input, it\n * connects to the disk to retrieve content and may allow for saving it back or reverting it. Editor models\n * are typically cached for some while because they are expensive to construct.\n */\nexport class EditorModel extends Disposable implements IEditorModel {\n\n\tprivate readonly _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose = this._onDispose.event;\n\n\tprivate disposed = false;\n\n\t/**\n\t * Causes this model to load returning a promise when loading is completed.\n\t */\n\tasync load(): Promise<IEditorModel> {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns whether this model was loaded or not.\n\t */\n\tisResolved(): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Find out if this model has been disposed.\n\t */\n\tisDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n\n\t/**\n\t * Subclasses should implement to free resources that have been claimed through loading.\n\t */\n\tdispose(): void {\n\t\tthis.disposed = true;\n\t\tthis._onDispose.fire();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IEditorInputWithOptions {\n\teditor: IEditorInput;\n\toptions?: IEditorOptions | ITextEditorOptions;\n}\n\nexport function isEditorInputWithOptions(obj: unknown): obj is IEditorInputWithOptions {\n\tconst editorInputWithOptions = obj as IEditorInputWithOptions;\n\n\treturn !!editorInputWithOptions && !!editorInputWithOptions.editor;\n}\n\n/**\n * The editor options is the base class of options that can be passed in when opening an editor.\n */\nexport class EditorOptions implements IEditorOptions {\n\n\t/**\n\t * Helper to create EditorOptions inline.\n\t */\n\tstatic create(settings: IEditorOptions): EditorOptions {\n\t\tconst options = new EditorOptions();\n\t\toptions.overwrite(settings);\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Tells the editor to not receive keyboard focus when the editor is being opened.\n\t *\n\t * Will also not activate the group the editor opens in unless the group is already\n\t * the active one. This behaviour can be overridden via the `activation` option.\n\t */\n\tpreserveFocus: boolean | undefined;\n\n\t/**\n\t * This option is only relevant if an editor is opened into a group that is not active\n\t * already and allows to control if the inactive group should become active, restored\n\t * or preserved.\n\t *\n\t * By default, the editor group will become active unless `preserveFocus` or `inactive`\n\t * is specified.\n\t */\n\tactivation: EditorActivation | undefined;\n\n\t/**\n\t * Tells the editor to reload the editor input in the editor even if it is identical to the one\n\t * already showing. By default, the editor will not reload the input if it is identical to the\n\t * one showing.\n\t */\n\tforceReload: boolean | undefined;\n\n\t/**\n\t * Will reveal the editor if it is already opened and visible in any of the opened editor groups.\n\t */\n\trevealIfVisible: boolean | undefined;\n\n\t/**\n\t * Will reveal the editor if it is already opened (even when not visible) in any of the opened editor groups.\n\t */\n\trevealIfOpened: boolean | undefined;\n\n\t/**\n\t * An editor that is pinned remains in the editor stack even when another editor is being opened.\n\t * An editor that is not pinned will always get replaced by another editor that is not pinned.\n\t */\n\tpinned: boolean | undefined;\n\n\t/**\n\t * An editor that is sticky moves to the beginning of the editors list within the group and will remain\n\t * there unless explicitly closed. Operations such as \"Close All\" will not close sticky editors.\n\t */\n\tsticky: boolean | undefined;\n\n\t/**\n\t * The index in the document stack where to insert the editor into when opening.\n\t */\n\tindex: number | undefined;\n\n\t/**\n\t * An active editor that is opened will show its contents directly. Set to true to open an editor\n\t * in the background without loading its contents.\n\t *\n\t * Will also not activate the group the editor opens in unless the group is already\n\t * the active one. This behaviour can be overridden via the `activation` option.\n\t */\n\tinactive: boolean | undefined;\n\n\t/**\n\t * Will not show an error in case opening the editor fails and thus allows to show a custom error\n\t * message as needed. By default, an error will be presented as notification if opening was not possible.\n\t */\n\tignoreError: boolean | undefined;\n\n\t/**\n\t * Allows to override the editor that should be used to display the input:\n\t * - `undefined`: let the editor decide for itself\n\t * - `false`: disable overrides\n\t * - `string`: specific override by id\n\t */\n\toverride?: false | string;\n\n\t/**\n\t * A optional hint to signal in which context the editor opens.\n\t *\n\t * If configured to be `EditorOpenContext.USER`, this hint can be\n\t * used in various places to control the experience. For example,\n\t * if the editor to open fails with an error, a notification could\n\t * inform about this in a modal dialog. If the editor opened through\n\t * some background task, the notification would show in the background,\n\t * not as a modal dialog.\n\t */\n\tcontext: EditorOpenContext | undefined;\n\n\t/**\n\t * Overwrites option values from the provided bag.\n\t */\n\toverwrite(options: IEditorOptions): EditorOptions {\n\t\tif (typeof options.forceReload === 'boolean') {\n\t\t\tthis.forceReload = options.forceReload;\n\t\t}\n\n\t\tif (typeof options.revealIfVisible === 'boolean') {\n\t\t\tthis.revealIfVisible = options.revealIfVisible;\n\t\t}\n\n\t\tif (typeof options.revealIfOpened === 'boolean') {\n\t\t\tthis.revealIfOpened = options.revealIfOpened;\n\t\t}\n\n\t\tif (typeof options.preserveFocus === 'boolean') {\n\t\t\tthis.preserveFocus = options.preserveFocus;\n\t\t}\n\n\t\tif (typeof options.activation === 'number') {\n\t\t\tthis.activation = options.activation;\n\t\t}\n\n\t\tif (typeof options.pinned === 'boolean') {\n\t\t\tthis.pinned = options.pinned;\n\t\t}\n\n\t\tif (typeof options.sticky === 'boolean') {\n\t\t\tthis.sticky = options.sticky;\n\t\t}\n\n\t\tif (typeof options.inactive === 'boolean') {\n\t\t\tthis.inactive = options.inactive;\n\t\t}\n\n\t\tif (typeof options.ignoreError === 'boolean') {\n\t\t\tthis.ignoreError = options.ignoreError;\n\t\t}\n\n\t\tif (typeof options.index === 'number') {\n\t\t\tthis.index = options.index;\n\t\t}\n\n\t\tif (typeof options.override === 'string' || options.override === false) {\n\t\t\tthis.override = options.override;\n\t\t}\n\n\t\tif (typeof options.context === 'number') {\n\t\t\tthis.context = options.context;\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n/**\n * Base Text Editor Options.\n */\nexport class TextEditorOptions extends EditorOptions implements ITextEditorOptions {\n\n\t/**\n\t * Text editor selection.\n\t */\n\tselection: ITextEditorSelection | undefined;\n\n\t/**\n\t * Text editor view state.\n\t */\n\teditorViewState: IEditorViewState | undefined;\n\n\t/**\n\t * Option to control the text editor selection reveal type.\n\t */\n\tselectionRevealType: TextEditorSelectionRevealType | undefined;\n\n\tstatic from(input?: IBaseResourceEditorInput): TextEditorOptions | undefined {\n\t\tif (!input?.options) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn TextEditorOptions.create(input.options);\n\t}\n\n\t/**\n\t * Helper to convert options bag to real class\n\t */\n\tstatic create(options: ITextEditorOptions = Object.create(null)): TextEditorOptions {\n\t\tconst textEditorOptions = new TextEditorOptions();\n\t\ttextEditorOptions.overwrite(options);\n\n\t\treturn textEditorOptions;\n\t}\n\n\t/**\n\t * Overwrites option values from the provided bag.\n\t */\n\toverwrite(options: ITextEditorOptions): TextEditorOptions {\n\t\tsuper.overwrite(options);\n\n\t\tif (options.selection) {\n\t\t\tthis.selection = {\n\t\t\t\tstartLineNumber: options.selection.startLineNumber,\n\t\t\t\tstartColumn: options.selection.startColumn,\n\t\t\t\tendLineNumber: options.selection.endLineNumber ?? options.selection.startLineNumber,\n\t\t\t\tendColumn: options.selection.endColumn ?? options.selection.startColumn\n\t\t\t};\n\t\t}\n\n\t\tif (options.viewState) {\n\t\t\tthis.editorViewState = options.viewState as IEditorViewState;\n\t\t}\n\n\t\tif (typeof options.selectionRevealType !== 'undefined') {\n\t\t\tthis.selectionRevealType = options.selectionRevealType;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns if this options object has objects defined for the editor.\n\t */\n\thasOptionsDefined(): boolean {\n\t\treturn !!this.editorViewState || !!this.selectionRevealType || !!this.selection;\n\t}\n\n\t/**\n\t * Create a TextEditorOptions inline to be used when the editor is opening.\n\t */\n\tstatic fromEditor(editor: IEditor, settings?: IEditorOptions): TextEditorOptions {\n\t\tconst options = TextEditorOptions.create(settings);\n\n\t\t// View state\n\t\toptions.editorViewState = withNullAsUndefined(editor.saveViewState());\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Apply the view state or selection to the given editor.\n\t *\n\t * @return if something was applied\n\t */\n\tapply(editor: IEditor, scrollType: ScrollType): boolean {\n\t\tlet gotApplied = false;\n\n\t\t// First try viewstate\n\t\tif (this.editorViewState) {\n\t\t\teditor.restoreViewState(this.editorViewState);\n\t\t\tgotApplied = true;\n\t\t}\n\n\t\t// Otherwise check for selection\n\t\telse if (this.selection) {\n\t\t\tconst range: IRange = {\n\t\t\t\tstartLineNumber: this.selection.startLineNumber,\n\t\t\t\tstartColumn: this.selection.startColumn,\n\t\t\t\tendLineNumber: this.selection.endLineNumber ?? this.selection.startLineNumber,\n\t\t\t\tendColumn: this.selection.endColumn ?? this.selection.startColumn\n\t\t\t};\n\n\t\t\teditor.setSelection(range);\n\n\t\t\tif (this.selectionRevealType === TextEditorSelectionRevealType.NearTop) {\n\t\t\t\teditor.revealRangeNearTop(range, scrollType);\n\t\t\t} else if (this.selectionRevealType === TextEditorSelectionRevealType.NearTopIfOutsideViewport) {\n\t\t\t\teditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n\t\t\t} else if (this.selectionRevealType === TextEditorSelectionRevealType.CenterIfOutsideViewport) {\n\t\t\t\teditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n\t\t\t} else {\n\t\t\t\teditor.revealRangeInCenter(range, scrollType);\n\t\t\t}\n\n\t\t\tgotApplied = true;\n\t\t}\n\n\t\treturn gotApplied;\n\t}\n}\n\n/**\n * Context passed into `EditorPane#setInput` to give additional\n * context information around why the editor was opened.\n */\nexport interface IEditorOpenContext {\n\n\t/**\n\t * An indicator if the editor input is new for the group the editor is in.\n\t * An editor is new for a group if it was not part of the group before and\n\t * otherwise was already opened in the group and just became the active editor.\n\t *\n\t * This hint can e.g. be used to decide wether to restore view state or not.\n\t */\n\tnewInGroup?: boolean;\n}\n\nexport interface IEditorIdentifier {\n\tgroupId: GroupIdentifier;\n\teditor: IEditorInput;\n}\n\n/**\n * The editor commands context is used for editor commands (e.g. in the editor title)\n * and we must ensure that the context is serializable because it potentially travels\n * to the extension host!\n */\nexport interface IEditorCommandsContext {\n\tgroupId: GroupIdentifier;\n\teditorIndex?: number;\n}\n\nexport class EditorCommandsContextActionRunner extends ActionRunner {\n\n\tconstructor(\n\t\tprivate context: IEditorCommandsContext\n\t) {\n\t\tsuper();\n\t}\n\n\trun(action: IAction): Promise<void> {\n\t\treturn super.run(action, this.context);\n\t}\n}\n\nexport interface IEditorCloseEvent extends IEditorIdentifier {\n\treplaced: boolean;\n\tindex: number;\n\tsticky: boolean;\n}\n\nexport type GroupIdentifier = number;\n\nexport interface IWorkbenchEditorConfiguration {\n\tworkbench: {\n\t\teditor: IEditorPartConfiguration,\n\t\ticonTheme: string;\n\t};\n}\n\ninterface IEditorPartConfiguration {\n\tshowTabs?: boolean;\n\tscrollToSwitchTabs?: boolean;\n\thighlightModifiedTabs?: boolean;\n\ttabCloseButton?: 'left' | 'right' | 'off';\n\ttabSizing?: 'fit' | 'shrink';\n\tpinnedTabSizing?: 'normal' | 'compact' | 'shrink';\n\ttitleScrollbarSizing?: 'default' | 'large';\n\tfocusRecentEditorAfterClose?: boolean;\n\tshowIcons?: boolean;\n\tenablePreview?: boolean;\n\tenablePreviewFromQuickOpen?: boolean;\n\tcloseOnFileDelete?: boolean;\n\topenPositioning?: 'left' | 'right' | 'first' | 'last';\n\topenSideBySideDirection?: 'right' | 'down';\n\tcloseEmptyGroups?: boolean;\n\trevealIfOpen?: boolean;\n\tmouseBackForwardToNavigate?: boolean;\n\tlabelFormat?: 'default' | 'short' | 'medium' | 'long';\n\trestoreViewState?: boolean;\n\tsplitSizing?: 'split' | 'distribute';\n\tsplitOnDragAndDrop?: boolean;\n\tlimit?: {\n\t\tenabled?: boolean;\n\t\tvalue?: number;\n\t\tperEditorGroup?: boolean;\n\t};\n}\n\nexport interface IEditorPartOptions extends IEditorPartConfiguration {\n\thasIcons?: boolean;\n}\n\nexport interface IEditorPartOptionsChangeEvent {\n\toldPartOptions: IEditorPartOptions;\n\tnewPartOptions: IEditorPartOptions;\n}\n\nexport enum SideBySideEditor {\n\tPRIMARY = 1,\n\tSECONDARY = 2,\n\tBOTH = 3\n}\n\nexport interface IEditorResourceAccessorOptions {\n\n\t/**\n\t * Allows to access the `resource(s)` of side by side editors. If not\n\t * specified, a `resource` for a side by side editor will always be\n\t * `undefined`.\n\t */\n\tsupportSideBySide?: SideBySideEditor;\n\n\t/**\n\t * Allows to filter the scheme to consider. A resource scheme that does\n\t * not match a filter will not be considered.\n\t */\n\tfilterByScheme?: string | string[];\n}\n\nclass EditorResourceAccessorImpl {\n\n\t/**\n\t * The original URI of an editor is the URI that was used originally to open\n\t * the editor and should be used whenever the URI is presented to the user,\n\t * e.g. as a label.\n\t *\n\t * In contrast, the canonical URI (#getCanonicalUri) may be different and should\n\t * be used whenever the URI is used to e.g. compare with other editors or when\n\t * caching certain data based on the URI.\n\t *\n\t * For example: on Windows and macOS, the same file URI with different casing may\n\t * point to the same file. The editor may chose to \"normalize\" the URI into a canonical\n\t * form so that only one editor opens for same file URIs with different casing. As\n\t * such, the original URI and the canonical URI can be different.\n\t */\n\tgetOriginalUri(editor: IEditorInput | undefined | null): URI | undefined;\n\tgetOriginalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide?: SideBySideEditor.PRIMARY | SideBySideEditor.SECONDARY }): URI | undefined;\n\tgetOriginalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide: SideBySideEditor.BOTH }): URI | { primary?: URI, secondary?: URI } | undefined;\n\tgetOriginalUri(editor: IEditorInput | undefined | null, options?: IEditorResourceAccessorOptions): URI | { primary?: URI, secondary?: URI } | undefined {\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Optionally support side-by-side editors\n\t\tif (options?.supportSideBySide && editor instanceof SideBySideEditorInput) {\n\t\t\tif (options?.supportSideBySide === SideBySideEditor.BOTH) {\n\t\t\t\treturn {\n\t\t\t\t\tprimary: this.getOriginalUri(editor.primary, { filterByScheme: options.filterByScheme }),\n\t\t\t\t\tsecondary: this.getOriginalUri(editor.secondary, { filterByScheme: options.filterByScheme })\n\t\t\t\t};\n\t\t\t}\n\n\t\t\teditor = options.supportSideBySide === SideBySideEditor.PRIMARY ? editor.primary : editor.secondary;\n\t\t}\n\n\t\t// Original URI is the `preferredResource` of an editor if any\n\t\tconst originalResource = isEditorInputWithPreferredResource(editor) ? editor.preferredResource : editor.resource;\n\t\tif (!originalResource || !options || !options.filterByScheme) {\n\t\t\treturn originalResource;\n\t\t}\n\n\t\treturn this.filterUri(originalResource, options.filterByScheme);\n\t}\n\n\t/**\n\t * The canonical URI of an editor is the true unique identifier of the editor\n\t * and should be used whenever the URI is used e.g. to compare with other\n\t * editors or when caching certain data based on the URI.\n\t *\n\t * In contrast, the original URI (#getOriginalUri) may be different and should\n\t * be used whenever the URI is presented to the user, e.g. as a label.\n\t *\n\t * For example: on Windows and macOS, the same file URI with different casing may\n\t * point to the same file. The editor may chose to \"normalize\" the URI into a canonical\n\t * form so that only one editor opens for same file URIs with different casing. As\n\t * such, the original URI and the canonical URI can be different.\n\t */\n\tgetCanonicalUri(editor: IEditorInput | undefined | null): URI | undefined;\n\tgetCanonicalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide?: SideBySideEditor.PRIMARY | SideBySideEditor.SECONDARY }): URI | undefined;\n\tgetCanonicalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide: SideBySideEditor.BOTH }): URI | { primary?: URI, secondary?: URI } | undefined;\n\tgetCanonicalUri(editor: IEditorInput | undefined | null, options?: IEditorResourceAccessorOptions): URI | { primary?: URI, secondary?: URI } | undefined {\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Optionally support side-by-side editors\n\t\tif (options?.supportSideBySide && editor instanceof SideBySideEditorInput) {\n\t\t\tif (options?.supportSideBySide === SideBySideEditor.BOTH) {\n\t\t\t\treturn {\n\t\t\t\t\tprimary: this.getCanonicalUri(editor.primary, { filterByScheme: options.filterByScheme }),\n\t\t\t\t\tsecondary: this.getCanonicalUri(editor.secondary, { filterByScheme: options.filterByScheme })\n\t\t\t\t};\n\t\t\t}\n\n\t\t\teditor = options.supportSideBySide === SideBySideEditor.PRIMARY ? editor.primary : editor.secondary;\n\t\t}\n\n\t\t// Canonical URI is the `resource` of an editor\n\t\tconst canonicalResource = editor.resource;\n\t\tif (!canonicalResource || !options || !options.filterByScheme) {\n\t\t\treturn canonicalResource;\n\t\t}\n\n\t\treturn this.filterUri(canonicalResource, options.filterByScheme);\n\t}\n\n\tprivate filterUri(resource: URI, filter: string | string[]): URI | undefined {\n\n\t\t// Multiple scheme filter\n\t\tif (Array.isArray(filter)) {\n\t\t\tif (filter.some(scheme => resource.scheme === scheme)) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\t// Single scheme filter\n\t\telse {\n\t\t\tif (filter === resource.scheme) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport const EditorResourceAccessor = new EditorResourceAccessorImpl();\n\nexport const enum CloseDirection {\n\tLEFT,\n\tRIGHT\n}\n\nexport interface IEditorMemento<T> {\n\n\tsaveEditorState(group: IEditorGroup, resource: URI, state: T): void;\n\tsaveEditorState(group: IEditorGroup, editor: IEditorInput, state: T): void;\n\n\tloadEditorState(group: IEditorGroup, resource: URI): T | undefined;\n\tloadEditorState(group: IEditorGroup, editor: IEditorInput): T | undefined;\n\n\tclearEditorState(resource: URI, group?: IEditorGroup): void;\n\tclearEditorState(editor: IEditorInput, group?: IEditorGroup): void;\n\n\tclearEditorStateOnDispose(resource: URI, editor: IEditorInput): void;\n\n\tmoveEditorState(source: URI, target: URI, comparer: IExtUri): void;\n}\n\nclass EditorInputFactoryRegistry implements IEditorInputFactoryRegistry {\n\tprivate instantiationService: IInstantiationService | undefined;\n\tprivate fileEditorInputFactory: IFileEditorInputFactory | undefined;\n\tprivate customEditorInputFactoryInstances: Map<string, ICustomEditorInputFactory> = new Map();\n\n\tprivate readonly editorInputFactoryConstructors: Map<string, IConstructorSignature0<IEditorInputFactory>> = new Map();\n\tprivate readonly editorInputFactoryInstances: Map<string, IEditorInputFactory> = new Map();\n\n\tstart(accessor: ServicesAccessor): void {\n\t\tconst instantiationService = this.instantiationService = accessor.get(IInstantiationService);\n\n\t\tthis.editorInputFactoryConstructors.forEach((ctor, key) => {\n\t\t\tthis.createEditorInputFactory(key, ctor, instantiationService);\n\t\t});\n\n\t\tthis.editorInputFactoryConstructors.clear();\n\t}\n\n\tprivate createEditorInputFactory(editorInputId: string, ctor: IConstructorSignature0<IEditorInputFactory>, instantiationService: IInstantiationService): void {\n\t\tconst instance = instantiationService.createInstance(ctor);\n\t\tthis.editorInputFactoryInstances.set(editorInputId, instance);\n\t}\n\n\tregisterFileEditorInputFactory(factory: IFileEditorInputFactory): void {\n\t\tthis.fileEditorInputFactory = factory;\n\t}\n\n\tgetFileEditorInputFactory(): IFileEditorInputFactory {\n\t\treturn assertIsDefined(this.fileEditorInputFactory);\n\t}\n\n\tregisterCustomEditorInputFactory(scheme: string, factory: ICustomEditorInputFactory): void {\n\t\tthis.customEditorInputFactoryInstances.set(scheme, factory);\n\t}\n\n\tgetCustomEditorInputFactory(scheme: string): ICustomEditorInputFactory | undefined {\n\t\treturn this.customEditorInputFactoryInstances.get(scheme);\n\t}\n\n\tregisterEditorInputFactory(editorInputId: string, ctor: IConstructorSignature0<IEditorInputFactory>): IDisposable {\n\t\tif (!this.instantiationService) {\n\t\t\tthis.editorInputFactoryConstructors.set(editorInputId, ctor);\n\t\t} else {\n\t\t\tthis.createEditorInputFactory(editorInputId, ctor, this.instantiationService);\n\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.editorInputFactoryConstructors.delete(editorInputId);\n\t\t\tthis.editorInputFactoryInstances.delete(editorInputId);\n\t\t});\n\t}\n\n\tgetEditorInputFactory(editorInputId: string): IEditorInputFactory | undefined {\n\t\treturn this.editorInputFactoryInstances.get(editorInputId);\n\t}\n}\n\nexport const Extensions = {\n\tEditorInputFactories: 'workbench.contributions.editor.inputFactories'\n};\n\nRegistry.add(Extensions.EditorInputFactories, new EditorInputFactoryRegistry());\n\nexport async function pathsToEditors(paths: IPathData[] | undefined, fileService: IFileService): Promise<(IResourceEditorInput | IUntitledTextResourceEditorInput)[]> {\n\tif (!paths || !paths.length) {\n\t\treturn [];\n\t}\n\n\tconst editors = await Promise.all(paths.map(async path => {\n\t\tconst resource = URI.revive(path.fileUri);\n\t\tif (!resource || !fileService.canHandleResource(resource)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst exists = (typeof path.exists === 'boolean') ? path.exists : await fileService.exists(resource);\n\t\tif (!exists && path.openOnlyIfExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst options: ITextEditorOptions = (exists && typeof path.lineNumber === 'number') ? {\n\t\t\tselection: {\n\t\t\t\tstartLineNumber: path.lineNumber,\n\t\t\t\tstartColumn: path.columnNumber || 1\n\t\t\t},\n\t\t\tpinned: true,\n\t\t\toverride: path.overrideId\n\t\t} : {\n\t\t\t\tpinned: true,\n\t\t\t\toverride: path.overrideId\n\t\t\t};\n\n\t\tlet input: IResourceEditorInput | IUntitledTextResourceEditorInput;\n\t\tif (!exists) {\n\t\t\tinput = { resource, options, forceUntitled: true };\n\t\t} else {\n\t\t\tinput = { resource, options, forceFile: true };\n\t\t}\n\n\t\treturn input;\n\t}));\n\n\treturn coalesce(editors);\n}\n\nexport const enum EditorsOrder {\n\n\t/**\n\t * Editors sorted by most recent activity (most recent active first)\n\t */\n\tMOST_RECENTLY_ACTIVE,\n\n\t/**\n\t * Editors sorted by sequential order\n\t */\n\tSEQUENTIAL\n}\n\nexport function computeEditorAriaLabel(input: IEditorInput, index: number | undefined, group: IEditorGroup | undefined, groupCount: number): string {\n\tlet ariaLabel = input.getAriaLabel();\n\tif (group && !group.isPinned(input)) {\n\t\tariaLabel = localize('preview', \"{0}, preview\", ariaLabel);\n\t}\n\n\tif (group && group.isSticky(index ?? input)) {\n\t\tariaLabel = localize('pinned', \"{0}, pinned\", ariaLabel);\n\t}\n\n\t// Apply group information to help identify in\n\t// which group we are (only if more than one group\n\t// is actually opened)\n\tif (group && groupCount > 1) {\n\t\tariaLabel = `${ariaLabel}, ${group.ariaLabel}`;\n\t}\n\n\treturn ariaLabel;\n}\n\n\n//#region Editor Group Column\n\n/**\n * A way to address editor groups through a column based system\n * where `0` is the first column. Will fallback to `SIDE_GROUP`\n * in case the column does not exist yet.\n */\nexport type EditorGroupColumn = number;\n\nexport function viewColumnToEditorGroup(editorGroupService: IEditorGroupsService, viewColumn?: EditorGroupColumn): GroupIdentifier {\n\tif (typeof viewColumn !== 'number' || viewColumn === ACTIVE_GROUP) {\n\t\treturn ACTIVE_GROUP; // prefer active group when position is undefined or passed in as such\n\t}\n\n\tconst groups = editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE);\n\n\tlet candidateGroup = groups[viewColumn];\n\tif (candidateGroup) {\n\t\treturn candidateGroup.id; // found direct match\n\t}\n\n\tlet firstGroup = groups[0];\n\tif (groups.length === 1 && firstGroup.count === 0) {\n\t\treturn firstGroup.id; // first editor should always open in first group independent from position provided\n\t}\n\n\treturn SIDE_GROUP; // open to the side if group not found or we are instructed to\n}\n\nexport function editorGroupToViewColumn(editorGroupService: IEditorGroupsService, editorGroup: IEditorGroup | GroupIdentifier): EditorGroupColumn {\n\tlet group = (typeof editorGroup === 'number') ? editorGroupService.getGroup(editorGroup) : editorGroup;\n\tgroup = group ?? editorGroupService.activeGroup;\n\n\treturn editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE).indexOf(group);\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IEnvironmentVariableService, ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { serializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport { ITerminalConfiguration, ITerminalEnvironment, ITerminalLaunchError, TERMINAL_CONFIG_SECTION } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { SideBySideEditor, EditorResourceAccessor } from 'vs/workbench/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILabelService } from 'vs/platform/label/common/label';\n\nexport const REMOTE_TERMINAL_CHANNEL_NAME = 'remoteterminal';\n\nexport interface IShellLaunchConfigDto {\n\tname?: string;\n\texecutable?: string;\n\targs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: { [key: string]: string | null; };\n\thideFromUser?: boolean;\n}\n\nexport interface ISingleTerminalConfiguration<T> {\n\tuserValue: T | undefined;\n\tvalue: T | undefined;\n\tdefaultValue: T | undefined;\n}\n\nexport interface ICompleteTerminalConfiguration {\n\t'terminal.integrated.automationShell.windows': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.automationShell.osx': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.automationShell.linux': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shell.windows': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shell.osx': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shell.linux': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shellArgs.windows': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shellArgs.osx': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shellArgs.linux': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.env.windows': ISingleTerminalConfiguration<ITerminalEnvironment>;\n\t'terminal.integrated.env.osx': ISingleTerminalConfiguration<ITerminalEnvironment>;\n\t'terminal.integrated.env.linux': ISingleTerminalConfiguration<ITerminalEnvironment>;\n\t'terminal.integrated.inheritEnv': boolean;\n\t'terminal.integrated.cwd': string;\n\t'terminal.integrated.detectLocale': 'auto' | 'off' | 'on';\n}\n\nexport type ITerminalEnvironmentVariableCollections = [string, ISerializableEnvironmentVariableCollection][];\n\nexport interface IWorkspaceFolderData {\n\turi: UriComponents;\n\tname: string;\n\tindex: number;\n}\n\nexport interface ICreateTerminalProcessArguments {\n\tconfiguration: ICompleteTerminalConfiguration;\n\tresolvedVariables: { [name: string]: string; };\n\tenvVariableCollections: ITerminalEnvironmentVariableCollections;\n\tshellLaunchConfig: IShellLaunchConfigDto;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tworkspaceFolders: IWorkspaceFolderData[];\n\tactiveWorkspaceFolder: IWorkspaceFolderData | null;\n\tactiveFileResource: UriComponents | undefined;\n\tshouldPersistTerminal: boolean;\n\tcols: number;\n\trows: number;\n\tisWorkspaceShellAllowed: boolean;\n\tresolverEnv: { [key: string]: string | null; } | undefined\n}\n\nexport interface ICreateTerminalProcessResult {\n\tterminalId: number;\n\tresolvedShellLaunchConfig: IShellLaunchConfigDto;\n}\n\nexport interface IStartTerminalProcessArguments {\n\tid: number;\n}\n\nexport interface ISendInputToTerminalProcessArguments {\n\tid: number;\n\tdata: string;\n}\n\nexport interface IShutdownTerminalProcessArguments {\n\tid: number;\n\timmediate: boolean;\n}\n\nexport interface IResizeTerminalProcessArguments {\n\tid: number;\n\tcols: number;\n\trows: number;\n}\n\nexport interface IGetTerminalInitialCwdArguments {\n\tid: number;\n}\n\nexport interface IGetTerminalCwdArguments {\n\tid: number;\n}\n\nexport interface ISendCommandResultToTerminalProcessArguments {\n\tid: number;\n\treqId: number;\n\tisError: boolean;\n\tpayload: any;\n}\n\nexport interface IOrphanQuestionReplyArgs {\n\tid: number;\n}\n\nexport interface IListTerminalsArgs {\n\tisInitialization: boolean;\n}\n\nexport interface IRemoteTerminalDescriptionDto {\n\tid: number;\n\tpid: number;\n\ttitle: string;\n\tcwd: string;\n\tworkspaceId: string;\n\tworkspaceName: string;\n}\n\nexport interface ITriggerTerminalDataReplayArguments {\n\tid: number;\n}\n\nexport interface IRemoteTerminalProcessReadyEvent {\n\ttype: 'ready';\n\tpid: number;\n\tcwd: string;\n}\nexport interface IRemoteTerminalProcessTitleChangedEvent {\n\ttype: 'titleChanged';\n\ttitle: string;\n}\nexport interface IRemoteTerminalProcessDataEvent {\n\ttype: 'data';\n\tdata: string;\n}\nexport interface ReplayEntry { cols: number; rows: number; data: string; }\nexport interface IRemoteTerminalProcessReplayEvent {\n\ttype: 'replay';\n\tevents: ReplayEntry[];\n}\nexport interface IRemoteTerminalProcessExitEvent {\n\ttype: 'exit';\n\texitCode: number | undefined;\n}\nexport interface IRemoteTerminalProcessExecCommandEvent {\n\ttype: 'execCommand';\n\treqId: number;\n\tcommandId: string;\n\tcommandArgs: any[];\n}\nexport interface IRemoteTerminalProcessOrphanQuestionEvent {\n\ttype: 'orphan?';\n}\nexport type IRemoteTerminalProcessEvent = (\n\tIRemoteTerminalProcessReadyEvent\n\t| IRemoteTerminalProcessTitleChangedEvent\n\t| IRemoteTerminalProcessDataEvent\n\t| IRemoteTerminalProcessReplayEvent\n\t| IRemoteTerminalProcessExitEvent\n\t| IRemoteTerminalProcessExecCommandEvent\n\t| IRemoteTerminalProcessOrphanQuestionEvent\n);\n\nexport interface IOnTerminalProcessEventArguments {\n\tid: number;\n}\n\nexport class RemoteTerminalChannelClient {\n\n\tconstructor(\n\t\tprivate readonly _remoteAuthority: string,\n\t\tprivate readonly _channel: IChannel,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@IConfigurationResolverService private readonly _resolverService: IConfigurationResolverService,\n\t\t@IEnvironmentVariableService private readonly _environmentVariableService: IEnvironmentVariableService,\n\t\t@IRemoteAuthorityResolverService private readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t) { }\n\n\tprivate _readSingleTerminalConfiguration<T>(key: string): ISingleTerminalConfiguration<T> {\n\t\tconst result = this._configurationService.inspect<T>(key);\n\t\treturn {\n\t\t\tuserValue: result.userValue,\n\t\t\tvalue: result.value,\n\t\t\tdefaultValue: result.defaultValue,\n\t\t};\n\t}\n\n\tpublic async createTerminalProcess(shellLaunchConfig: IShellLaunchConfigDto, activeWorkspaceRootUri: URI | undefined, shouldPersistTerminal: boolean, cols: number, rows: number, isWorkspaceShellAllowed: boolean): Promise<ICreateTerminalProcessResult> {\n\t\tconst terminalConfig = this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION);\n\t\tconst configuration: ICompleteTerminalConfiguration = {\n\t\t\t'terminal.integrated.automationShell.windows': this._readSingleTerminalConfiguration('terminal.integrated.automationShell.windows'),\n\t\t\t'terminal.integrated.automationShell.osx': this._readSingleTerminalConfiguration('terminal.integrated.automationShell.osx'),\n\t\t\t'terminal.integrated.automationShell.linux': this._readSingleTerminalConfiguration('terminal.integrated.automationShell.linux'),\n\t\t\t'terminal.integrated.shell.windows': this._readSingleTerminalConfiguration('terminal.integrated.shell.windows'),\n\t\t\t'terminal.integrated.shell.osx': this._readSingleTerminalConfiguration('terminal.integrated.shell.osx'),\n\t\t\t'terminal.integrated.shell.linux': this._readSingleTerminalConfiguration('terminal.integrated.shell.linux'),\n\t\t\t'terminal.integrated.shellArgs.windows': this._readSingleTerminalConfiguration('terminal.integrated.shellArgs.windows'),\n\t\t\t'terminal.integrated.shellArgs.osx': this._readSingleTerminalConfiguration('terminal.integrated.shellArgs.osx'),\n\t\t\t'terminal.integrated.shellArgs.linux': this._readSingleTerminalConfiguration('terminal.integrated.shellArgs.linux'),\n\t\t\t'terminal.integrated.env.windows': this._readSingleTerminalConfiguration('terminal.integrated.env.windows'),\n\t\t\t'terminal.integrated.env.osx': this._readSingleTerminalConfiguration('terminal.integrated.env.osx'),\n\t\t\t'terminal.integrated.env.linux': this._readSingleTerminalConfiguration('terminal.integrated.env.linux'),\n\t\t\t'terminal.integrated.inheritEnv': terminalConfig.inheritEnv,\n\t\t\t'terminal.integrated.cwd': terminalConfig.cwd,\n\t\t\t'terminal.integrated.detectLocale': terminalConfig.detectLocale,\n\t\t};\n\n\t\t// We will use the resolver service to resolve all the variables in the config / launch config\n\t\t// But then we will keep only some variables, since the rest need to be resolved on the remote side\n\t\tconst resolvedVariables = Object.create(null);\n\t\tconst lastActiveWorkspace = activeWorkspaceRootUri ? withNullAsUndefined(this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri)) : undefined;\n\t\tlet allResolvedVariables: Map<string, string> | undefined = undefined;\n\t\ttry {\n\t\t\tallResolvedVariables = await this._resolverService.resolveWithInteraction(lastActiveWorkspace, {\n\t\t\t\tshellLaunchConfig,\n\t\t\t\tconfiguration\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis._logService.error(err);\n\t\t}\n\t\tif (allResolvedVariables) {\n\t\t\tfor (const [name, value] of allResolvedVariables.entries()) {\n\t\t\t\tif (/^config:/.test(name) || name === 'selectedText' || name === 'lineNumber') {\n\t\t\t\t\tresolvedVariables[name] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst envVariableCollections: ITerminalEnvironmentVariableCollections = [];\n\t\tfor (const [k, v] of this._environmentVariableService.collections.entries()) {\n\t\t\tenvVariableCollections.push([k, serializeEnvironmentVariableCollection(v.map)]);\n\t\t}\n\n\t\tconst resolverResult = await this._remoteAuthorityResolverService.resolveAuthority(this._remoteAuthority);\n\t\tconst resolverEnv = resolverResult.options && resolverResult.options.extensionHostEnv;\n\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst workspaceFolders = workspace.folders;\n\t\tconst activeWorkspaceFolder = activeWorkspaceRootUri ? this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri) : null;\n\n\t\tconst activeFileResource = EditorResourceAccessor.getOriginalUri(this._editorService.activeEditor, {\n\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t\tfilterByScheme: [Schemas.file, Schemas.userData, Schemas.vscodeRemote]\n\t\t});\n\n\t\tconst args: ICreateTerminalProcessArguments = {\n\t\t\tconfiguration,\n\t\t\tresolvedVariables,\n\t\t\tenvVariableCollections,\n\t\t\tshellLaunchConfig,\n\t\t\tworkspaceId: workspace.id,\n\t\t\tworkspaceName: this._labelService.getWorkspaceLabel(workspace),\n\t\t\tworkspaceFolders,\n\t\t\tactiveWorkspaceFolder,\n\t\t\tactiveFileResource,\n\t\t\tshouldPersistTerminal,\n\t\t\tcols,\n\t\t\trows,\n\t\t\tisWorkspaceShellAllowed,\n\t\t\tresolverEnv\n\t\t};\n\t\treturn await this._channel.call<ICreateTerminalProcessResult>('$createTerminalProcess', args);\n\t}\n\n\tpublic async startTerminalProcess(terminalId: number): Promise<ITerminalLaunchError | void> {\n\t\tconst args: IStartTerminalProcessArguments = {\n\t\t\tid: terminalId\n\t\t};\n\t\treturn this._channel.call<ITerminalLaunchError | void>('$startTerminalProcess', args);\n\t}\n\n\tpublic onTerminalProcessEvent(terminalId: number): Event<IRemoteTerminalProcessEvent> {\n\t\tconst args: IOnTerminalProcessEventArguments = {\n\t\t\tid: terminalId\n\t\t};\n\t\treturn this._channel.listen<IRemoteTerminalProcessEvent>('$onTerminalProcessEvent', args);\n\t}\n\n\tpublic sendInputToTerminalProcess(id: number, data: string): Promise<void> {\n\t\tconst args: ISendInputToTerminalProcessArguments = {\n\t\t\tid, data\n\t\t};\n\t\treturn this._channel.call<void>('$sendInputToTerminalProcess', args);\n\t}\n\n\tpublic shutdownTerminalProcess(id: number, immediate: boolean): Promise<void> {\n\t\tconst args: IShutdownTerminalProcessArguments = {\n\t\t\tid, immediate\n\t\t};\n\t\treturn this._channel.call<void>('$shutdownTerminalProcess', args);\n\t}\n\n\tpublic resizeTerminalProcess(id: number, cols: number, rows: number): Promise<void> {\n\t\tconst args: IResizeTerminalProcessArguments = {\n\t\t\tid, cols, rows\n\t\t};\n\t\treturn this._channel.call<void>('$resizeTerminalProcess', args);\n\t}\n\n\tpublic getTerminalInitialCwd(id: number): Promise<string> {\n\t\tconst args: IGetTerminalInitialCwdArguments = {\n\t\t\tid\n\t\t};\n\t\treturn this._channel.call<string>('$getTerminalInitialCwd', args);\n\t}\n\n\tpublic getTerminalCwd(id: number): Promise<string> {\n\t\tconst args: IGetTerminalCwdArguments = {\n\t\t\tid\n\t\t};\n\t\treturn this._channel.call<string>('$getTerminalCwd', args);\n\t}\n\n\tpublic sendCommandResultToTerminalProcess(id: number, reqId: number, isError: boolean, payload: any): Promise<void> {\n\t\tconst args: ISendCommandResultToTerminalProcessArguments = {\n\t\t\tid,\n\t\t\treqId,\n\t\t\tisError,\n\t\t\tpayload\n\t\t};\n\t\treturn this._channel.call<void>('$sendCommandResultToTerminalProcess', args);\n\t}\n\n\tpublic orphanQuestionReply(id: number): Promise<void> {\n\t\tconst args: IOrphanQuestionReplyArgs = {\n\t\t\tid\n\t\t};\n\t\treturn this._channel.call<void>('$orphanQuestionReply', args);\n\t}\n\n\tpublic listTerminals(isInitialization: boolean): Promise<IRemoteTerminalDescriptionDto[]> {\n\t\tconst args: IListTerminalsArgs = {\n\t\t\tisInitialization\n\t\t};\n\t\treturn this._channel.call<IRemoteTerminalDescriptionDto[]>('$listTerminals', args);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Severity } from 'vs/platform/notification/common/notification';\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tlet aKeys = Object.keys(a);\n\t\tlet bKeys: Set<string> = new Set<string>();\n\t\tfor (let key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\nexport interface ILog {\n\terror(source: string, message: string): void;\n\twarn(source: string, message: string): void;\n\tinfo(source: string, message: string): void;\n}\n\nexport class Logger implements ILog {\n\n\tprivate readonly _messageHandler: (severity: Severity, source: string, message: string) => void;\n\n\tconstructor(\n\t\tmessageHandler: (severity: Severity, source: string, message: string) => void\n\t) {\n\t\tthis._messageHandler = messageHandler;\n\t}\n\n\tpublic error(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Info, source, message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'vs/base/common/semver/semver';\nimport * as json from 'vs/base/common/json';\nimport * as arrays from 'vs/base/common/arrays';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { getGalleryExtensionId, groupByExtension, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isValidExtensionVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Translations, ILog } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst MANIFEST_FILE = 'package.json';\n\nexport interface NlsConfiguration {\n\treadonly devMode: boolean;\n\treadonly locale: string | undefined;\n\treadonly pseudo: boolean;\n\treadonly translations: Translations;\n}\n\nabstract class ExtensionManifestHandler {\n\n\tprotected readonly _ourVersion: string;\n\tprotected readonly _log: ILog;\n\tprotected readonly _absoluteFolderPath: string;\n\tprotected readonly _isBuiltin: boolean;\n\tprotected readonly _isUnderDevelopment: boolean;\n\tprotected readonly _absoluteManifestPath: string;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean) {\n\t\tthis._ourVersion = ourVersion;\n\t\tthis._log = log;\n\t\tthis._absoluteFolderPath = absoluteFolderPath;\n\t\tthis._isBuiltin = isBuiltin;\n\t\tthis._isUnderDevelopment = isUnderDevelopment;\n\t\tthis._absoluteManifestPath = path.join(absoluteFolderPath, MANIFEST_FILE);\n\t}\n}\n\nclass ExtensionManifestParser extends ExtensionManifestHandler {\n\n\tpublic parse(): Promise<IExtensionDescription> {\n\t\treturn pfs.readFile(this._absoluteManifestPath).then((manifestContents) => {\n\t\t\tconst errors: json.ParseError[] = [];\n\t\t\tconst manifest = json.parse(manifestContents.toString(), errors);\n\t\t\tif (json.getNodeType(manifest) !== 'object') {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseInvalidType', \"Invalid manifest file {0}: Not an JSON object.\", this._absoluteManifestPath));\n\t\t\t} else if (errors.length === 0) {\n\t\t\t\tif (manifest.__metadata) {\n\t\t\t\t\tmanifest.uuid = manifest.__metadata.id;\n\t\t\t\t}\n\t\t\t\tmanifest.isUserBuiltin = !!manifest.__metadata?.isBuiltin;\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\treturn manifest;\n\t\t\t} else {\n\t\t\t\terrors.forEach(e => {\n\t\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", this._absoluteManifestPath, e.offset, e.length, getParseErrorMessage(e.error)));\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}, (err) => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('fileReadFail', \"Cannot read file {0}: {1}.\", this._absoluteManifestPath, err.message));\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\nclass ExtensionManifestNLSReplacer extends ExtensionManifestHandler {\n\n\tprivate readonly _nlsConfig: NlsConfiguration;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration) {\n\t\tsuper(ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\tthis._nlsConfig = nlsConfig;\n\t}\n\n\tpublic replaceNLS(extensionDescription: IExtensionDescription): Promise<IExtensionDescription> {\n\t\tinterface MessageBag {\n\t\t\t[key: string]: string;\n\t\t}\n\n\t\tinterface TranslationBundle {\n\t\t\tcontents: {\n\t\t\t\tpackage: MessageBag;\n\t\t\t};\n\t\t}\n\n\t\tinterface LocalizedMessages {\n\t\t\tvalues: MessageBag | undefined;\n\t\t\tdefault: string | null;\n\t\t}\n\n\t\tconst reportErrors = (localized: string | null, errors: json.ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized, getParseErrorMessage(error.error)));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: string | null): void => {\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized));\n\t\t};\n\n\t\tlet extension = path.extname(this._absoluteManifestPath);\n\t\tlet basename = this._absoluteManifestPath.substr(0, this._absoluteManifestPath.length - extension.length);\n\n\t\tconst translationId = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\tlet translationPath = this._nlsConfig.translations[translationId];\n\t\tlet localizedMessages: Promise<LocalizedMessages | undefined>;\n\t\tif (translationPath) {\n\t\t\tlocalizedMessages = pfs.readFile(translationPath, 'utf8').then<LocalizedMessages, LocalizedMessages>((content) => {\n\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\tlet translationBundle: TranslationBundle = json.parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationPath, errors);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else if (json.getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationPath);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else {\n\t\t\t\t\tlet values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: `${basename}.nls.json` };\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t});\n\t\t} else {\n\t\t\tlocalizedMessages = pfs.fileExists(basename + '.nls' + extension).then<LocalizedMessages | undefined, LocalizedMessages | undefined>(exists => {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn ExtensionManifestNLSReplacer.findMessageBundles(this._nlsConfig, basename).then((messageBundle) => {\n\t\t\t\t\tif (!messageBundle.localized) {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t}\n\t\t\t\t\treturn pfs.readFile(messageBundle.localized, 'utf8').then(messageBundleContent => {\n\t\t\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\t\t\tlet messages: MessageBag = json.parse(messageBundleContent, errors);\n\t\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t} else if (json.getNodeType(messages) !== 'object') {\n\t\t\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t});\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn localizedMessages.then((localizedMessages) => {\n\t\t\tif (localizedMessages === undefined) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\treturn ExtensionManifestNLSReplacer.resolveOriginalMessageBundle(localizedMessages.default, errors).then((defaults) => {\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(localizedMessages.default, errors);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t} else if (json.getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(localizedMessages.default);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\tExtensionManifestNLSReplacer._replaceNLStrings(this._nlsConfig, extensionDescription, localized, defaults, this._log, this._absoluteFolderPath);\n\t\t\t\treturn extensionDescription;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn extensionDescription;\n\t\t});\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate static resolveOriginalMessageBundle(originalMessageBundle: string | null, errors: json.ParseError[]) {\n\t\treturn new Promise<{ [key: string]: string; } | null>((c, e) => {\n\t\t\tif (originalMessageBundle) {\n\t\t\t\tpfs.readFile(originalMessageBundle).then(originalBundleContent => {\n\t\t\t\t\tc(json.parse(originalBundleContent.toString(), errors));\n\t\t\t\t}, (err) => {\n\t\t\t\t\tc(null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tc(null);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate static findMessageBundles(nlsConfig: NlsConfiguration, basename: string): Promise<{ localized: string; original: string | null; }> {\n\t\treturn new Promise<{ localized: string; original: string | null; }>((c, e) => {\n\t\t\tfunction loop(basename: string, locale: string): void {\n\t\t\t\tlet toCheck = `${basename}.nls.${locale}.json`;\n\t\t\t\tpfs.fileExists(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: `${basename}.nls.json` });\n\t\t\t\t\t}\n\t\t\t\t\tlet index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: `${basename}.nls.json`, original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(basename, locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (nlsConfig.devMode || nlsConfig.pseudo || !nlsConfig.locale) {\n\t\t\t\treturn c({ localized: basename + '.nls.json', original: null });\n\t\t\t}\n\t\t\tloop(basename, nlsConfig.locale);\n\t\t});\n\t}\n\n\t/**\n\t * This routine makes the following assumptions:\n\t * The root element is an object literal\n\t */\n\tprivate static _replaceNLStrings<T extends object>(nlsConfig: NlsConfiguration, literal: T, messages: { [key: string]: string; }, originalMessages: { [key: string]: string } | null, log: ILog, messageScope: string): void {\n\t\tfunction processEntry(obj: any, key: string | number, command?: boolean) {\n\t\t\tlet value = obj[key];\n\t\t\tif (types.isString(value)) {\n\t\t\t\tlet str = <string>value;\n\t\t\t\tlet length = str.length;\n\t\t\t\tif (length > 1 && str[0] === '%' && str[length - 1] === '%') {\n\t\t\t\t\tlet messageKey = str.substr(1, length - 2);\n\t\t\t\t\tlet message = messages[messageKey];\n\t\t\t\t\t// If the messages come from a language pack they might miss some keys\n\t\t\t\t\t// Fill them from the original messages.\n\t\t\t\t\tif (message === undefined && originalMessages) {\n\t\t\t\t\t\tmessage = originalMessages[messageKey];\n\t\t\t\t\t}\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tif (nlsConfig.pseudo) {\n\t\t\t\t\t\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\t\t\t\t\t\tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobj[key] = command && (key === 'title' || key === 'category') && originalMessages ? { value: message, original: originalMessages[messageKey] } : message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.warn(messageScope, nls.localize('missingNLSKey', \"Couldn't find message for key {0}.\", messageKey));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isObject(value)) {\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tif (value.hasOwnProperty(k)) {\n\t\t\t\t\t\tk === 'commands' ? processEntry(value, k, true) : processEntry(value, k, command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isArray(value)) {\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\tprocessEntry(value, i, command);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key in literal) {\n\t\t\tif (literal.hasOwnProperty(key)) {\n\t\t\t\tprocessEntry(literal, key);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Relax the readonly properties here, it is the one place where we check and normalize values\nexport interface IRelaxedExtensionDescription {\n\tid: string;\n\tuuid?: string;\n\tidentifier: ExtensionIdentifier;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\tisUserBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tenableProposedApi?: boolean;\n}\n\nclass ExtensionManifestValidator extends ExtensionManifestHandler {\n\tvalidate(_extensionDescription: IExtensionDescription): IExtensionDescription | null {\n\t\tlet extensionDescription = <IRelaxedExtensionDescription>_extensionDescription;\n\t\textensionDescription.isBuiltin = this._isBuiltin;\n\t\textensionDescription.isUserBuiltin = !this._isBuiltin && !!extensionDescription.isUserBuiltin;\n\t\textensionDescription.isUnderDevelopment = this._isUnderDevelopment;\n\n\t\tlet notices: string[] = [];\n\t\tif (!ExtensionManifestValidator.isValidExtensionDescription(this._ourVersion, this._absoluteFolderPath, extensionDescription, notices)) {\n\t\t\tnotices.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, error);\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\n\t\t// in this case the notices are warnings\n\t\tnotices.forEach((error) => {\n\t\t\tthis._log.warn(this._absoluteFolderPath, error);\n\t\t});\n\n\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\tif (!extensionDescription.publisher) {\n\t\t\textensionDescription.publisher = 'undefined_publisher';\n\t\t}\n\n\t\t// id := `publisher.name`\n\t\textensionDescription.id = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\textensionDescription.identifier = new ExtensionIdentifier(extensionDescription.id);\n\n\t\textensionDescription.extensionLocation = URI.file(this._absoluteFolderPath);\n\n\t\treturn extensionDescription;\n\t}\n\n\tprivate static isValidExtensionDescription(version: string, extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\n\t\tif (!ExtensionManifestValidator.baseIsValidExtensionDescription(extensionFolderPath, extensionDescription, notices)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!semver.valid(extensionDescription.version)) {\n\t\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isValidExtensionVersion(version, extensionDescription, notices);\n\t}\n\n\tprivate static baseIsValidExtensionDescription(extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\t\tif (!extensionDescription) {\n\t\t\tnotices.push(nls.localize('extensionDescription.empty', \"Got empty extension description\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.publisher !== 'undefined' && typeof extensionDescription.publisher !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.name !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.version !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\t\treturn false;\n\t\t}\n\t\tif (!extensionDescription.engines) {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.engines.vscode !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.extensionDependencies !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.extensionDependencies)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.activationEvents !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.activationEvents)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof extensionDescription.main === 'undefined' && typeof extensionDescription.browser === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.main !== 'undefined') {\n\t\t\tif (typeof extensionDescription.main !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tconst normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.main);\n\t\t\t\tif (!normalizedAbsolutePath.startsWith(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.browser !== 'undefined') {\n\t\t\tif (typeof extensionDescription.browser !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.browser1', \"property `{0}` can be omitted or must be of type `string`\", 'browser'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tconst normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.browser);\n\t\t\t\tif (!normalizedAbsolutePath.startsWith(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.browser2', \"Expected `browser` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.browser3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'browser'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _isStringArray(arr: string[]): boolean {\n\t\tif (!Array.isArray(arr)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (typeof arr[i] !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class ExtensionScannerInput {\n\n\tpublic mtime: number | undefined;\n\n\tconstructor(\n\t\tpublic readonly ourVersion: string,\n\t\tpublic readonly commit: string | undefined,\n\t\tpublic readonly locale: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly absoluteFolderPath: string,\n\t\tpublic readonly isBuiltin: boolean,\n\t\tpublic readonly isUnderDevelopment: boolean,\n\t\tpublic readonly translations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNLSConfig(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tdevMode: input.devMode,\n\t\t\tlocale: input.locale,\n\t\t\tpseudo: input.locale === 'pseudo',\n\t\t\ttranslations: input.translations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\ta.ourVersion === b.ourVersion\n\t\t\t&& a.commit === b.commit\n\t\t\t&& a.locale === b.locale\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.absoluteFolderPath === b.absoluteFolderPath\n\t\t\t&& a.isBuiltin === b.isBuiltin\n\t\t\t&& a.isUnderDevelopment === b.isUnderDevelopment\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& Translations.equals(a.translations, b.translations)\n\t\t);\n\t}\n}\n\nexport interface IExtensionReference {\n\tname: string;\n\tpath: string;\n}\n\nexport interface IExtensionResolver {\n\tresolveExtensions(): Promise<IExtensionReference[]>;\n}\n\nclass DefaultExtensionResolver implements IExtensionResolver {\n\n\tconstructor(private root: string) { }\n\n\tresolveExtensions(): Promise<IExtensionReference[]> {\n\t\treturn pfs.readDirsInDir(this.root)\n\t\t\t.then(folders => folders.map(name => ({ name, path: path.join(this.root, name) })));\n\t}\n}\n\nexport class ExtensionScanner {\n\n\t/**\n\t * Read the extension defined in `absoluteFolderPath`\n\t */\n\tprivate static scanExtension(version: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration): Promise<IExtensionDescription | null> {\n\t\tabsoluteFolderPath = path.normalize(absoluteFolderPath);\n\n\t\tlet parser = new ExtensionManifestParser(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\treturn parser.parse().then<IExtensionDescription | null>((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet nlsReplacer = new ExtensionManifestNLSReplacer(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t\t\treturn nlsReplacer.replaceNLS(extensionDescription);\n\t\t}).then((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet validator = new ExtensionManifestValidator(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\t\treturn validator.validate(extensionDescription);\n\t\t});\n\t}\n\n\t/**\n\t * Scan a list of extensions defined in `absoluteFolderPath`\n\t */\n\tpublic static async scanExtensions(input: ExtensionScannerInput, log: ILog, resolver: IExtensionResolver | null = null): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\tif (!resolver) {\n\t\t\tresolver = new DefaultExtensionResolver(absoluteFolderPath);\n\t\t}\n\n\t\ttry {\n\t\t\tlet obsolete: { [folderName: string]: boolean; } = {};\n\t\t\tif (!isBuiltin) {\n\t\t\t\ttry {\n\t\t\t\t\tconst obsoleteFileContents = await pfs.readFile(path.join(absoluteFolderPath, '.obsolete'), 'utf8');\n\t\t\t\t\tobsolete = JSON.parse(obsoleteFileContents);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Don't care\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet refs = await resolver.resolveExtensions();\n\n\t\t\t// Ensure the same extension order\n\t\t\trefs.sort((a, b) => a.name < b.name ? -1 : 1);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\trefs = refs.filter(ref => ref.name.indexOf('.') !== 0); // Do not consider user extension folder starting with `.`\n\t\t\t}\n\n\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\tlet _extensionDescriptions = await Promise.all(refs.map(r => this.scanExtension(input.ourVersion, log, r.path, isBuiltin, isUnderDevelopment, nlsConfig)));\n\t\t\tlet extensionDescriptions = arrays.coalesce(_extensionDescriptions);\n\t\t\textensionDescriptions = extensionDescriptions.filter(item => item !== null && !obsolete[new ExtensionIdentifierWithVersion({ id: getGalleryExtensionId(item.publisher, item.name) }, item.version).key()]);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\t// Filter out outdated extensions\n\t\t\t\tconst byExtension: IExtensionDescription[][] = groupByExtension(extensionDescriptions, e => ({ id: e.identifier.value, uuid: e.uuid }));\n\t\t\t\textensionDescriptions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t\t}\n\n\t\t\textensionDescriptions.sort((a, b) => {\n\t\t\t\tif (a.extensionLocation.fsPath < b.extensionLocation.fsPath) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn extensionDescriptions;\n\t\t} catch (err) {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Combination of scanExtension and scanExtensions: If an extension manifest is found at root, we load just this extension,\n\t * otherwise we assume the folder contains multiple extensions.\n\t */\n\tpublic static scanOneOrMultipleExtensions(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\treturn pfs.fileExists(path.join(absoluteFolderPath, MANIFEST_FILE)).then((exists) => {\n\t\t\tif (exists) {\n\t\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig).then((extensionDescription) => {\n\t\t\t\t\tif (extensionDescription === null) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn [extensionDescription];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.scanExtensions(input, log);\n\t\t}, (err) => {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tpublic static scanSingleExtension(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription | null> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t}\n\n\tpublic static mergeBuiltinExtensions(builtinExtensions: Promise<IExtensionDescription[]>, extraBuiltinExtensions: Promise<IExtensionDescription[]>): Promise<IExtensionDescription[]> {\n\t\treturn Promise.all([builtinExtensions, extraBuiltinExtensions]).then(([builtinExtensions, extraBuiltinExtensions]) => {\n\t\t\tlet resultMap: { [id: string]: IExtensionDescription; } = Object.create(null);\n\t\t\tfor (let i = 0, len = builtinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(builtinExtensions[i].identifier)] = builtinExtensions[i];\n\t\t\t}\n\t\t\t// Overwrite with extensions found in extra\n\t\t\tfor (let i = 0, len = extraBuiltinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(extraBuiltinExtensions[i].identifier)] = extraBuiltinExtensions[i];\n\t\t\t}\n\n\t\t\tlet resultArr = Object.keys(resultMap).map((id) => resultMap[id]);\n\t\t\tresultArr.sort((a, b) => {\n\t\t\t\tconst aLastSegment = path.basename(a.extensionLocation.fsPath);\n\t\t\t\tconst bLastSegment = path.basename(b.extensionLocation.fsPath);\n\t\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\treturn resultArr;\n\t\t});\n\t}\n}\n","import { field, logger } from '@coder/logger';\nimport * as os from 'os';\nimport * as path from 'path';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport * as resources from 'vs/base/common/resources';\nimport { ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileType, FileWriteOptions, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IRemoteAgentEnvironment, RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ITelemetryData, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { getTranslations } from 'vs/server/node/nls';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { IFileChangeDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { IEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { MergedEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableCollection';\nimport { deserializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport * as terminal from 'vs/workbench/contrib/terminal/common/remoteTerminalChannel';\nimport { IShellLaunchConfig, ITerminalEnvironment, ITerminalLaunchError } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { TerminalDataBufferer } from 'vs/workbench/contrib/terminal/common/terminalDataBuffering';\nimport * as terminalEnvironment from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\nimport { getSystemShell } from 'vs/workbench/contrib/terminal/node/terminal';\nimport { getMainProcessParentEnv } from 'vs/workbench/contrib/terminal/node/terminalEnvironment';\nimport { TerminalProcess } from 'vs/workbench/contrib/terminal/node/terminalProcess';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport { ExtensionScanner, ExtensionScannerInput } from 'vs/workbench/services/extensions/node/extensionPoints';\n\n/**\n * Extend the file provider to allow unwatching.\n */\nclass Watcher extends DiskFileSystemProvider {\n\tpublic readonly watches = new Map<number, IDisposable>();\n\n\tpublic dispose(): void {\n\t\tthis.watches.forEach((w) => w.dispose());\n\t\tthis.watches.clear();\n\t\tsuper.dispose();\n\t}\n\n\tpublic _watch(req: number, resource: URI, opts: IWatchOptions): void {\n\t\tthis.watches.set(req, this.watch(resource, opts));\n\t}\n\n\tpublic unwatch(req: number): void {\n\t\tthis.watches.get(req)!.dispose();\n\t\tthis.watches.delete(req);\n\t}\n}\n\nexport class FileProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly provider: DiskFileSystemProvider;\n\tprivate readonly watchers = new Map<string, Watcher>();\n\n\tpublic constructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.provider = new DiskFileSystemProvider(this.logService);\n\t}\n\n\tpublic listen(context: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'filechange': return this.filechange(context, args[0]);\n\t\t\tcase 'readFileStream': return this.readFileStream(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate filechange(context: RemoteAgentConnectionContext, session: string): Event<IFileChangeDto[]> {\n\t\tconst emitter = new Emitter<IFileChangeDto[]>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst provider = new Watcher(this.logService);\n\t\t\t\tthis.watchers.set(session, provider);\n\t\t\t\tconst transformer = getUriTransformer(context.remoteAuthority);\n\t\t\t\tprovider.onDidChangeFile((events) => {\n\t\t\t\t\temitter.fire(events.map((event) => ({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tresource: transformer.transformOutgoing(event.resource),\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tprovider.onDidErrorOccur((event) => this.logService.error(event));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.watchers.get(session)!.dispose();\n\t\t\t\tthis.watchers.delete(session);\n\t\t\t},\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate readFileStream(resource: UriComponents, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst fileStream = this.provider.readFileStream(this.transform(resource), opts, cts.token);\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tfileStream.on('data', (data) => emitter.fire(VSBuffer.wrap(data)));\n\t\t\t\tfileStream.on('error', (error) => emitter.fire(error));\n\t\t\t\tfileStream.on('end', () => emitter.fire('end'));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => cts.cancel(),\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tpublic call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(args[0]);\n\t\t\tcase 'open': return this.open(args[0], args[1]);\n\t\t\tcase 'close': return this.close(args[0]);\n\t\t\tcase 'read': return this.read(args[0], args[1], args[2]);\n\t\t\tcase 'readFile': return this.readFile(args[0]);\n\t\t\tcase 'write': return this.write(args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 'writeFile': return this.writeFile(args[0], args[1], args[2]);\n\t\t\tcase 'delete': return this.delete(args[0], args[1]);\n\t\t\tcase 'mkdir': return this.mkdir(args[0]);\n\t\t\tcase 'readdir': return this.readdir(args[0]);\n\t\t\tcase 'rename': return this.rename(args[0], args[1], args[2]);\n\t\t\tcase 'copy': return this.copy(args[0], args[1], args[2]);\n\t\t\tcase 'watch': return this.watch(args[0], args[1], args[2], args[3]);\n\t\t\tcase 'unwatch': return this.unwatch(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.watchers.forEach((w) => w.dispose());\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate async stat(resource: UriComponents): Promise<IStat> {\n\t\treturn this.provider.stat(this.transform(resource));\n\t}\n\n\tprivate async open(resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.provider.open(this.transform(resource), opts);\n\t}\n\n\tprivate async close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, 0, length);\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate async readFile(resource: UriComponents): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(await this.provider.readFile(this.transform(resource)));\n\t}\n\n\tprivate write(fd: number, pos: number, buffer: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, buffer.buffer, offset, length);\n\t}\n\n\tprivate writeFile(resource: UriComponents, buffer: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.provider.writeFile(this.transform(resource), buffer.buffer, opts);\n\t}\n\n\tprivate async delete(resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.provider.delete(this.transform(resource), opts);\n\t}\n\n\tprivate async mkdir(resource: UriComponents): Promise<void> {\n\t\treturn this.provider.mkdir(this.transform(resource));\n\t}\n\n\tprivate async readdir(resource: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this.provider.readdir(this.transform(resource));\n\t}\n\n\tprivate async rename(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.rename(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate copy(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.copy(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate async watch(session: string, req: number, resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tthis.watchers.get(session)!._watch(req, this.transform(resource), opts);\n\t}\n\n\tprivate async unwatch(session: string, req: number): Promise<void> {\n\t\tthis.watchers.get(session)!.unwatch(req);\n\t}\n\n\tprivate transform(resource: UriComponents): URI {\n\t\t// Used for walkthrough content.\n\t\tif (/^\\/static[^/]*\\//.test(resource.path)) {\n\t\t\treturn URI.file(this.environmentService.appRoot + resource.path.replace(/^\\/static[^/]*\\//, '/'));\n\t\t// Used by the webview service worker to load resources.\n\t\t} else if (resource.path === '/vscode-resource' && resource.query) {\n\t\t\ttry {\n\t\t\t\tconst query = JSON.parse(resource.query);\n\t\t\t\tif (query.requestResourcePath) {\n\t\t\t\t\treturn URI.file(query.requestResourcePath);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Carry on. */ }\n\t\t}\n\t\treturn URI.from(resource);\n\t}\n}\n\n// See ../../workbench/services/remote/common/remoteAgentEnvironmentChannel.ts\nexport class ExtensionEnvironmentChannel implements IServerChannel {\n\tpublic constructor(\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly telemetry: ITelemetryService,\n\t\tprivate readonly connectionToken: string,\n\t) {}\n\n\tpublic listen(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic async call(context: any, command: string, args: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getEnvironmentData':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.getEnvironmentData(),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'scanExtensions':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.scanExtensions(args.language),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'getDiagnosticInfo': return this.getDiagnosticInfo();\n\t\t\tcase 'disableTelemetry': return this.disableTelemetry();\n\t\t\tcase 'logTelemetry': return this.logTelemetry(args[0], args[1]);\n\t\t\tcase 'flushTelemetry': return this.flushTelemetry();\n\t\t}\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tprivate async getEnvironmentData(): Promise<IRemoteAgentEnvironment> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: this.connectionToken,\n\t\t\tappRoot: URI.file(this.environment.appRoot),\n\t\t\tsettingsPath: this.environment.settingsResource,\n\t\t\tlogsPath: URI.file(this.environment.logsPath),\n\t\t\textensionsPath: URI.file(this.environment.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(path.join(this.environment.logsPath, 'extension-host')),\n\t\t\tglobalStorageHome: this.environment.globalStorageHome,\n\t\t\tworkspaceStorageHome: this.environment.workspaceStorageHome,\n\t\t\tuserHome: this.environment.userHome,\n\t\t\tos: platform.OS,\n\t\t};\n\t}\n\n\tprivate async scanExtensions(language: string): Promise<IExtensionDescription[]> {\n\t\tconst translations = await getTranslations(language, this.environment.userDataPath);\n\n\t\tconst scanMultiple = (isBuiltin: boolean, isUnderDevelopment: boolean, paths: string[]): Promise<IExtensionDescription[][]> => {\n\t\t\treturn Promise.all(paths.map((path) => {\n\t\t\t\treturn ExtensionScanner.scanExtensions(new ExtensionScannerInput(\n\t\t\t\t\tproduct.version,\n\t\t\t\t\tproduct.commit,\n\t\t\t\t\tlanguage,\n\t\t\t\t\t!!process.env.VSCODE_DEV,\n\t\t\t\t\tpath,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\tisUnderDevelopment,\n\t\t\t\t\ttranslations,\n\t\t\t\t), this.log);\n\t\t\t}));\n\t\t};\n\n\t\tconst scanBuiltin = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(true, false, [this.environment.builtinExtensionsPath, ...this.environment.extraBuiltinExtensionPaths]);\n\t\t};\n\n\t\tconst scanInstalled = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(false, true, [this.environment.extensionsPath!, ...this.environment.extraExtensionPaths]);\n\t\t};\n\n\t\treturn Promise.all([scanBuiltin(), scanInstalled()]).then((allExtensions) => {\n\t\t\tconst uniqueExtensions = new Map<string, IExtensionDescription>();\n\t\t\tallExtensions.forEach((multipleExtensions) => {\n\t\t\t\tmultipleExtensions.forEach((extensions) => {\n\t\t\t\t\textensions.forEach((extension) => {\n\t\t\t\t\t\tconst id = ExtensionIdentifier.toKey(extension.identifier);\n\t\t\t\t\t\tif (uniqueExtensions.has(id)) {\n\t\t\t\t\t\t\tconst oldPath = uniqueExtensions.get(id)!.extensionLocation.fsPath;\n\t\t\t\t\t\t\tconst newPath = extension.extensionLocation.fsPath;\n\t\t\t\t\t\t\tthis.log.warn(`${oldPath} has been overridden ${newPath}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuniqueExtensions.set(id, extension)\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Array.from(uniqueExtensions.values());\n\t\t});\n\t}\n\n\tprivate getDiagnosticInfo(): Promise<IDiagnosticInfo> {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async disableTelemetry(): Promise<void> {\n\t\tthis.telemetry.setEnabled(false);\n\t}\n\n\tprivate async logTelemetry(eventName: string, data: ITelemetryData): Promise<void> {\n\t\tthis.telemetry.publicLog(eventName, data);\n\t}\n\n\tprivate async flushTelemetry(): Promise<void> {\n\t\t// We always send immediately at the moment.\n\t}\n}\n\nclass VariableResolverService extends AbstractVariableResolverService {\n\tconstructor(\n\t\tremoteAuthority: string,\n\t\targs: terminal.ICreateTerminalProcessArguments,\n\t\tenv: platform.IProcessEnvironment,\n\t) {\n\t\tsuper({\n\t\t\tgetFolderUri: (name: string): URI | undefined => {\n\t\t\t\tconst folder = args.workspaceFolders.find((f) => f.name === name);\n\t\t\t\treturn folder && URI.revive(folder.uri);\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn args.workspaceFolders.length;\n\t\t\t},\n\t\t\t// In ../../workbench/contrib/terminal/common/remoteTerminalChannel.ts it\n\t\t\t// looks like there are `config:` entries which must be for this? Not sure\n\t\t\t// how/if the URI comes into play though.\n\t\t\tgetConfigurationValue: (_: URI, section: string): string | undefined => {\n\t\t\t\treturn args.resolvedVariables[`config:${section}`];\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\t// Assuming that resolverEnv is just for use in the resolver and not for\n\t\t\t\t// the terminal itself.\n\t\t\t\treturn (args.resolverEnv && args.resolverEnv['VSCODE_EXEC_PATH']) || env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\t// This is just a guess; this is the only file-related thing we're sent\n\t\t\t// and none of these resolver methods seem to get called so I don't know\n\t\t\t// how to test.\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tconst resource = transformIncoming(remoteAuthority, args.activeFileResource);\n\t\t\t\tif (!resource) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// See ../../editor/standalone/browser/simpleServices.ts;\n\t\t\t\t// `BaseConfigurationResolverService` calls `getUriLabel` from there.\n\t\t\t\tif (resource.scheme === 'file') {\n\t\t\t\t\treturn resource.fsPath;\n\t\t\t\t}\n\t\t\t\treturn resource.path;\n\t\t\t},\n\t\t\t// It looks like these are set here although they aren't on the types:\n\t\t\t// ../../workbench/contrib/terminal/common/remoteTerminalChannel.ts\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\treturn args.resolvedVariables.selectedText;\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\treturn args.resolvedVariables.selectedText;\n\t\t\t},\n\t\t}, undefined, env);\n\t}\n}\n\nclass Terminal {\n\tprivate readonly process: TerminalProcess;\n\tprivate _pid: number = -1;\n\tprivate _title: string = '';\n\tpublic readonly workspaceId: string;\n\tpublic readonly workspaceName: string;\n\tprivate readonly persist: boolean;\n\n\tprivate readonly _onDispose = new Emitter<void>();\n\tpublic get onDispose(): Event<void> { return this._onDispose.event; }\n\n\tprivate _isOrphan = true;\n\tpublic get isOrphan(): boolean { return this._isOrphan; }\n\n\t// These are replayed when a client reconnects.\n\tprivate cols: number;\n\tprivate rows: number;\n\tprivate replayData: string[] = [];\n\t// This is based on string length and is pretty arbitrary.\n\tprivate readonly maxReplayData = 10000;\n\tprivate totalReplayData = 0;\n\n\t// According to the release notes the terminals are supposed to dispose after\n\t// a short timeout; in our case we'll use 48 hours so you can get them back\n\t// the next day or over the weekend.\n\tprivate disposeTimeout: NodeJS.Timeout | undefined;\n\tprivate disposeDelay = 48 * 60 * 60 * 1000;\n\n\tprivate buffering = false;\n\tprivate readonly _onEvent = new Emitter<terminal.IRemoteTerminalProcessEvent>({\n\t\t// Don't bind to data until something is listening.\n\t\tonFirstListenerAdd: () => {\n\t\t\tlogger.debug('Terminal bound', field('id', this.id));\n\t\t\tthis._isOrphan = false;\n\t\t\tif (!this.buffering) {\n\t\t\t\tthis.buffering = true;\n\t\t\t\tthis.bufferer.startBuffering(this.id, this.process.onProcessData);\n\t\t\t}\n\t\t},\n\n\t\t// Replay stored events.\n\t\tonFirstListenerDidAdd: () => {\n\t\t\t// We only need to replay if the terminal is being reconnected which is\n\t\t\t// true if there is a dispose timeout.\n\t\t\tif (typeof this.disposeTimeout !== 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(this.disposeTimeout);\n\t\t\tthis.disposeTimeout = undefined;\n\n\t\t\tlogger.debug('Terminal replaying', field('id', this.id));\n\t\t\tthis._onEvent.fire({\n\t\t\t\ttype: 'replay',\n\t\t\t\tevents: [{\n\t\t\t\t\tcols: this.cols,\n\t\t\t\t\trows: this.rows,\n\t\t\t\t\tdata: this.replayData.join(''),\n\t\t\t\t}]\n\t\t\t});\n\t\t},\n\n\t\tonLastListenerRemove: () => {\n\t\t\tlogger.debug('Terminal unbound', field('id', this.id));\n\t\t\tthis._isOrphan = true;\n\t\t\tif (!this.persist) { // Used by debug consoles.\n\t\t\t\tthis.dispose();\n\t\t\t} else {\n\t\t\t\tthis.disposeTimeout = setTimeout(() => {\n\t\t\t\t\tthis.dispose();\n\t\t\t\t}, this.disposeDelay);\n\t\t\t}\n\t\t}\n\t});\n\n\tpublic get onEvent(): Event<terminal.IRemoteTerminalProcessEvent> { return this._onEvent.event; }\n\n\t// Buffer to reduce the number of messages going to the renderer.\n\tprivate readonly bufferer = new TerminalDataBufferer((_, data) => {\n\t\tthis._onEvent.fire({\n\t\t\ttype: 'data',\n\t\t\tdata,\n\t\t});\n\n\t\t// No need to store data if we aren't persisting.\n\t\tif (!this.persist) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.replayData.push(data);\n\t\tthis.totalReplayData += data.length;\n\n\t\tlet overflow = this.totalReplayData - this.maxReplayData;\n\t\tif (overflow <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Drop events until doing so would put us under budget.\n\t\tlet deleteCount = 0;\n\t\tfor (; deleteCount < this.replayData.length\n\t\t\t&& this.replayData[deleteCount].length <= overflow; ++deleteCount) {\n\t\t\toverflow -= this.replayData[deleteCount].length;\n\t\t}\n\n\t\tif (deleteCount > 0) {\n\t\t\tthis.replayData.splice(0, deleteCount);\n\t\t}\n\n\t\t// Dropping any more events would put us under budget; trim the first event\n\t\t// instead if still over budget.\n\t\tif (overflow > 0 && this.replayData.length > 0) {\n\t\t\tthis.replayData[0] = this.replayData[0].substring(overflow);\n\t\t}\n\n\t\tthis.totalReplayData = this.replayData.reduce((p, c) => p + c.length, 0);\n\t});\n\n\tpublic get pid(): number {\n\t\treturn this._pid;\n\t}\n\n\tpublic get title(): string {\n\t\treturn this._title;\n\t}\n\n\tpublic constructor(\n\t\tpublic readonly id: number,\n\t\tconfig: IShellLaunchConfig & { cwd: string },\n\t\targs: terminal.ICreateTerminalProcessArguments,\n\t\tenv: platform.IProcessEnvironment,\n\t\tlogService: ILogService,\n\t) {\n\t\tthis.workspaceId = args.workspaceId;\n\t\tthis.workspaceName = args.workspaceName;\n\n\t\tthis.cols = args.cols;\n\t\tthis.rows = args.rows;\n\n\t\t// TODO: Don't persist terminals until we make it work with things like\n\t\t// htop, vim, etc.\n\t\t// this.persist = args.shouldPersistTerminal;\n\t\tthis.persist = false;\n\n\t\tthis.process = new TerminalProcess(\n\t\t\tconfig,\n\t\t\tconfig.cwd,\n\t\t\tthis.cols,\n\t\t\tthis.rows,\n\t\t\tenv,\n\t\t\tprocess.env as platform.IProcessEnvironment, // Environment used for `findExecutable`.\n\t\t\tfalse, // windowsEnableConpty: boolean,\n\t\t\tlogService,\n\t\t);\n\n\t\t// The current pid and title aren't exposed so they have to be tracked.\n\t\tthis.process.onProcessReady((event) => {\n\t\t\tthis._pid = event.pid;\n\t\t\tthis._onEvent.fire({\n\t\t\t\ttype: 'ready',\n\t\t\t\tpid: event.pid,\n\t\t\t\tcwd: event.cwd,\n\t\t\t});\n\t\t});\n\n\t\tthis.process.onProcessTitleChanged((title) => {\n\t\t\tthis._title = title;\n\t\t\tthis._onEvent.fire({\n\t\t\t\ttype: 'titleChanged',\n\t\t\t\ttitle,\n\t\t\t});\n\t\t});\n\n\t\tthis.process.onProcessExit((exitCode) => {\n\t\t\tlogger.debug('Terminal exited', field('id', this.id), field('code', exitCode));\n\t\t\tthis._onEvent.fire({\n\t\t\t\ttype: 'exit',\n\t\t\t\texitCode,\n\t\t\t});\n\t\t\tthis.dispose();\n\t\t});\n\n\t\t// TODO: I think `execCommand` must have something to do with running\n\t\t// commands on the terminal that will do things in VS Code but we already\n\t\t// have that functionality via a socket so I'm not sure what this is for.\n\t\t// type: 'execCommand';\n\t\t// reqId: number;\n\t\t// commandId: string;\n\t\t// commandArgs: any[];\n\n\t\t// TODO: Maybe this is to ask if the terminal is currently attached to\n\t\t// anything? But we already know that on account of whether anything is\n\t\t// listening to our event emitter.\n\t\t// type: 'orphan?';\n\t}\n\n\tpublic dispose() {\n\t\tlogger.debug('Terminal disposing', field('id', this.id));\n\t\tthis._onEvent.dispose();\n\t\tthis.bufferer.dispose();\n\t\tthis.process.dispose();\n\t\tthis.process.shutdown(true);\n\t\tthis._onDispose.fire();\n\t\tthis._onDispose.dispose();\n\t}\n\n\tpublic shutdown(immediate: boolean): void {\n\t\treturn this.process.shutdown(immediate);\n\t}\n\n\tpublic getCwd(): Promise<string> {\n\t\treturn this.process.getCwd();\n\t}\n\n\tpublic getInitialCwd(): Promise<string> {\n\t\treturn this.process.getInitialCwd();\n\t}\n\n\tpublic start(): Promise<ITerminalLaunchError | undefined> {\n\t\treturn this.process.start();\n\t}\n\n\tpublic input(data: string): void {\n\t\treturn this.process.input(data);\n\t}\n\n\tpublic resize(cols: number, rows: number): void {\n\t\tthis.cols = cols;\n\t\tthis.rows = rows;\n\t\treturn this.process.resize(cols, rows);\n\t}\n}\n\n// References: - ../../workbench/api/node/extHostTerminalService.ts\n//             - ../../workbench/contrib/terminal/browser/terminalProcessManager.ts\nexport class TerminalProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly terminals = new Map<number, Terminal>();\n\tprivate id = 0;\n\n\tpublic constructor (private readonly logService: ILogService) {\n\n\t}\n\n\tpublic listen(_: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase '$onTerminalProcessEvent': return this.onTerminalProcessEvent(args);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate onTerminalProcessEvent(args: terminal.IOnTerminalProcessEventArguments): Event<terminal.IRemoteTerminalProcessEvent> {\n\t\treturn this.getTerminal(args.id).onEvent;\n\t}\n\n\tpublic call(context: RemoteAgentConnectionContext, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase '$createTerminalProcess': return this.createTerminalProcess(context.remoteAuthority, args);\n\t\t\tcase '$startTerminalProcess': return this.startTerminalProcess(args);\n\t\t\tcase '$sendInputToTerminalProcess': return this.sendInputToTerminalProcess(args);\n\t\t\tcase '$shutdownTerminalProcess': return this.shutdownTerminalProcess(args);\n\t\t\tcase '$resizeTerminalProcess': return this.resizeTerminalProcess(args);\n\t\t\tcase '$getTerminalInitialCwd': return this.getTerminalInitialCwd(args);\n\t\t\tcase '$getTerminalCwd': return this.getTerminalCwd(args);\n\t\t\tcase '$sendCommandResultToTerminalProcess': return this.sendCommandResultToTerminalProcess(args);\n\t\t\tcase '$orphanQuestionReply': return this.orphanQuestionReply(args[0]);\n\t\t\tcase '$listTerminals': return this.listTerminals(args[0]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.terminals.forEach((t) => t.dispose());\n\t}\n\n\tprivate async createTerminalProcess(remoteAuthority: string, args: terminal.ICreateTerminalProcessArguments): Promise<terminal.ICreateTerminalProcessResult> {\n\t\tconst terminalId = this.id++;\n\t\tlogger.debug('Creating terminal', field('id', terminalId), field('terminals', this.terminals.size));\n\n\t\tconst shellLaunchConfig: IShellLaunchConfig = {\n\t\t\tname: args.shellLaunchConfig.name,\n\t\t\texecutable: args.shellLaunchConfig.executable,\n\t\t\targs: args.shellLaunchConfig.args,\n\t\t\t// TODO: Should we transform if it's a string as well? The incoming\n\t\t\t// transform only takes `UriComponents` so I suspect it's not necessary.\n\t\t\tcwd: typeof args.shellLaunchConfig.cwd !== 'string'\n\t\t\t\t? transformIncoming(remoteAuthority, args.shellLaunchConfig.cwd)\n\t\t\t\t: args.shellLaunchConfig.cwd,\n\t\t\tenv: args.shellLaunchConfig.env,\n\t\t};\n\n\t\tconst activeWorkspaceUri = transformIncoming(remoteAuthority, args.activeWorkspaceFolder?.uri);\n\t\tconst activeWorkspace = activeWorkspaceUri && args.activeWorkspaceFolder ? {\n\t\t\t...args.activeWorkspaceFolder,\n\t\t\turi: activeWorkspaceUri,\n\t\t\ttoResource: (relativePath: string) => resources.joinPath(activeWorkspaceUri, relativePath),\n\t\t} : undefined;\n\n\t\tconst resolverService = new VariableResolverService(remoteAuthority, args, process.env as platform.IProcessEnvironment);\n\t\tconst resolver = terminalEnvironment.createVariableResolver(activeWorkspace, resolverService);\n\n\t\tconst getDefaultShellAndArgs = (): { executable: string; args: string[] | string } => {\n\t\t\tif (shellLaunchConfig.executable) {\n\t\t\t\tconst executable = resolverService.resolve(activeWorkspace, shellLaunchConfig.executable);\n\t\t\t\tlet resolvedArgs: string[] | string = [];\n\t\t\t\tif (shellLaunchConfig.args && Array.isArray(shellLaunchConfig.args)) {\n\t\t\t\t\tfor (const arg of shellLaunchConfig.args) {\n\t\t\t\t\t\tresolvedArgs.push(resolverService.resolve(activeWorkspace, arg));\n\t\t\t\t\t}\n\t\t\t\t} else if (shellLaunchConfig.args) {\n\t\t\t\t\tresolvedArgs = resolverService.resolve(activeWorkspace, shellLaunchConfig.args);\n\t\t\t\t}\n\t\t\t\treturn { executable, args: resolvedArgs };\n\t\t\t}\n\n\t\t\tconst executable = terminalEnvironment.getDefaultShell(\n\t\t\t\t(key) => args.configuration[key],\n\t\t\t\targs.isWorkspaceShellAllowed,\n\t\t\t\tgetSystemShell(platform.platform),\n\t\t\t\tprocess.env.hasOwnProperty('PROCESSOR_ARCHITEW6432'),\n\t\t\t\tprocess.env.windir,\n\t\t\t\tresolver,\n\t\t\t\tthis.logService,\n\t\t\t\tfalse, // useAutomationShell\n\t\t\t);\n\n\t\t\tconst resolvedArgs = terminalEnvironment.getDefaultShellArgs(\n\t\t\t\t(key) => args.configuration[key],\n\t\t\t\targs.isWorkspaceShellAllowed,\n\t\t\t\tfalse, // useAutomationShell\n\t\t\t\tresolver,\n\t\t\t\tthis.logService,\n\t\t\t);\n\n\t\t\treturn { executable, args: resolvedArgs };\n\t\t};\n\n\t\tconst getInitialCwd = (): string => {\n\t\t\treturn terminalEnvironment.getCwd(\n\t\t\t\tshellLaunchConfig,\n\t\t\t\tos.homedir(),\n\t\t\t\tresolver,\n\t\t\t\tactiveWorkspaceUri,\n\t\t\t\targs.configuration['terminal.integrated.cwd'],\n\t\t\t\tthis.logService,\n\t\t\t);\n\t\t};\n\n\t\t// Use a separate var so Typescript recognizes these properties are no\n\t\t// longer undefined.\n\t\tconst resolvedShellLaunchConfig = {\n\t\t\t...shellLaunchConfig,\n\t\t\t...getDefaultShellAndArgs(),\n\t\t\tcwd: getInitialCwd(),\n\t\t};\n\n\t\tlogger.debug('Resolved shell launch configuration', field('id', terminalId));\n\n\t\t// Use instead of `terminal.integrated.env.${platform}` to make types work.\n\t\tconst getEnvFromConfig = (): terminal.ISingleTerminalConfiguration<ITerminalEnvironment> => {\n\t\t\tif (platform.isWindows) {\n\t\t\t\treturn args.configuration['terminal.integrated.env.windows'];\n\t\t\t} else if (platform.isMacintosh) {\n\t\t\t\treturn args.configuration['terminal.integrated.env.osx'];\n\t\t\t}\n\t\t\treturn args.configuration['terminal.integrated.env.linux'];\n\t\t};\n\n\t\tconst getNonInheritedEnv = async (): Promise<platform.IProcessEnvironment> => {\n\t\t\tconst env = await getMainProcessParentEnv();\n\t\t\tenv.VSCODE_IPC_HOOK_CLI = process.env['VSCODE_IPC_HOOK_CLI']!;\n\t\t\treturn env;\n\t\t};\n\n\t\tconst env = terminalEnvironment.createTerminalEnvironment(\n\t\t\tshellLaunchConfig,\n\t\t\tgetEnvFromConfig(),\n\t\t\tresolver,\n\t\t\targs.isWorkspaceShellAllowed,\n\t\t\tproduct.version,\n\t\t\targs.configuration['terminal.integrated.detectLocale'],\n\t\t\targs.configuration['terminal.integrated.inheritEnv'] !== false\n\t\t\t\t? process.env as platform.IProcessEnvironment\n\t\t\t\t: await getNonInheritedEnv()\n\t\t);\n\n\t\t// Apply extension environment variable collections to the environment.\n\t\tif (!shellLaunchConfig.strictEnv) {\n\t\t\t// They come in an array and in serialized format.\n\t\t\tconst envVariableCollections = new Map<string, IEnvironmentVariableCollection>();\n\t\t\tfor (const [k, v] of args.envVariableCollections) {\n\t\t\t\tenvVariableCollections.set(k, { map: deserializeEnvironmentVariableCollection(v) });\n\t\t\t}\n\t\t\tconst mergedCollection = new MergedEnvironmentVariableCollection(envVariableCollections);\n\t\t\tmergedCollection.applyToProcessEnvironment(env);\n\t\t}\n\n\t\tlogger.debug('Resolved terminal environment', field('id', terminalId));\n\n\t\tconst terminal = new Terminal(terminalId, resolvedShellLaunchConfig, args, env, this.logService);\n\t\tthis.terminals.set(terminalId, terminal);\n\t\tlogger.debug('Created terminal', field('id', terminalId));\n\t\tterminal.onDispose(() => this.terminals.delete(terminalId));\n\n\t\treturn {\n\t\t\tterminalId,\n\t\t\tresolvedShellLaunchConfig,\n\t\t};\n\t}\n\n\tprivate getTerminal(id: number): Terminal {\n\t\tconst terminal = this.terminals.get(id);\n\t\tif (!terminal) {\n\t\t\tthrow new Error(`terminal with id ${id} does not exist`);\n\t\t}\n\t\treturn terminal;\n\t}\n\n\tprivate async startTerminalProcess(args: terminal.IStartTerminalProcessArguments): Promise<ITerminalLaunchError | void> {\n\t\treturn this.getTerminal(args.id).start();\n\t}\n\n\tprivate async sendInputToTerminalProcess(args: terminal.ISendInputToTerminalProcessArguments): Promise<void> {\n\t\treturn this.getTerminal(args.id).input(args.data);\n\t}\n\n\tprivate async shutdownTerminalProcess(args: terminal.IShutdownTerminalProcessArguments): Promise<void> {\n\t\treturn this.getTerminal(args.id).shutdown(args.immediate);\n\t}\n\n\tprivate async resizeTerminalProcess(args: terminal.IResizeTerminalProcessArguments): Promise<void> {\n\t\treturn this.getTerminal(args.id).resize(args.cols, args.rows);\n\t}\n\n\tprivate async getTerminalInitialCwd(args: terminal.IGetTerminalInitialCwdArguments): Promise<string> {\n\t\treturn this.getTerminal(args.id).getInitialCwd();\n\t}\n\n\tprivate async getTerminalCwd(args: terminal.IGetTerminalCwdArguments): Promise<string> {\n\t\treturn this.getTerminal(args.id).getCwd();\n\t}\n\n\tprivate async sendCommandResultToTerminalProcess(_: terminal.ISendCommandResultToTerminalProcessArguments): Promise<void> {\n\t\t// NOTE: Not required unless we implement the `execCommand` event, see above.\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async orphanQuestionReply(_: terminal.IOrphanQuestionReplyArgs): Promise<void> {\n\t\t// NOTE: Not required unless we implement the `orphan?` event, see above.\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async listTerminals(_: terminal.IListTerminalsArgs): Promise<terminal.IRemoteTerminalDescriptionDto[]> {\n\t\t// TODO: args.isInitialization. Maybe this is to have slightly different\n\t\t// behavior when first listing terminals but I don't know what you'd want to\n\t\t// do differently. Maybe it's to reset the terminal dispose timeouts or\n\t\t// something like that, but why not do it each time you list?\n\t\tconst terminals = await Promise.all(Array.from(this.terminals).map(async ([id, terminal]) => {\n\t\t\tconst cwd = await terminal.getCwd();\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\tpid: terminal.pid,\n\t\t\t\ttitle: terminal.title,\n\t\t\t\tcwd,\n\t\t\t\tworkspaceId: terminal.workspaceId,\n\t\t\t\tworkspaceName: terminal.workspaceName,\n\t\t\t\tisOrphan: terminal.isOrphan,\n\t\t\t};\n\t\t}));\n\t\t// Only returned orphaned terminals so we don't end up attaching to\n\t\t// terminals already attached elsewhere.\n\t\treturn terminals.filter((t) => t.isOrphan);\n\t}\n}\n\nfunction transformIncoming(remoteAuthority: string, uri: UriComponents | undefined): URI | undefined {\n\tconst transformer = getUriTransformer(remoteAuthority);\n\treturn uri ? URI.revive(transformer.transformIncoming(uri)) : uri;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, IFileChange, IStat, IWatchOptions, FileOpenOptions, IFileSystemProviderWithFileReadWriteCapability, FileWriteOptions, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileFolderCopyCapability, FileReadStreamOptions, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { newWriteableStream, ReadableStreamEvents, ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport class RemoteFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly session: string = generateUuid();\n\tprivate readonly channel: IChannel;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChange.event;\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n\n\tprivate _capabilities!: FileSystemProviderCapabilities;\n\tget capabilities(): FileSystemProviderCapabilities { return this._capabilities; }\n\n\tconstructor(remoteAgentService: IRemoteAgentService) {\n\t\tsuper();\n\n\t\tconst connection = remoteAgentService.getConnection()!;\n\t\tthis.channel = connection.getChannel<IChannel>(REMOTE_FILE_SYSTEM_CHANNEL_NAME);\n\n\t\t// Initially assume case sensitivity until remote environment is resolved\n\t\tthis.setCaseSensitive(true);\n\t\t(async () => {\n\t\t\tconst remoteAgentEnvironment = await remoteAgentService.getEnvironment();\n\t\t\tthis.setCaseSensitive(remoteAgentEnvironment?.os === OperatingSystem.Linux);\n\t\t})();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.channel.listen<IFileChangeDto[] | string>('filechange', [this.session])(eventsOrError => {\n\t\t\tif (Array.isArray(eventsOrError)) {\n\t\t\t\tconst events = eventsOrError;\n\t\t\t\tthis._onDidChange.fire(events.map(event => ({ resource: URI.revive(event.resource), type: event.type })));\n\t\t\t} else {\n\t\t\t\tconst error = eventsOrError;\n\t\t\t\tthis._onDidWatchErrorOccur.fire(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetCaseSensitive(isCaseSensitive: boolean) {\n\t\tlet capabilities = (\n\t\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.FileOpenReadWriteClose\n\t\t\t| FileSystemProviderCapabilities.FileReadStream\n\t\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t);\n\n\t\tif (isCaseSensitive) {\n\t\t\tcapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\n\t\tthis._capabilities = capabilities;\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.channel.call('stat', [resource]);\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.channel.call('open', [resource, opts]);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this.channel.call('close', [fd]);\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst [bytes, bytesRead]: [VSBuffer, number] = await this.channel.call('read', [fd, pos, length]);\n\n\t\t// copy back the data that was written into the buffer on the remote\n\t\t// side. we need to do this because buffers are not referenced by\n\t\t// pointer, but only by value and as such cannot be directly written\n\t\t// to from the other process.\n\t\tdata.set(bytes.buffer.slice(0, bytesRead), offset);\n\n\t\treturn bytesRead;\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst buff = <VSBuffer>await this.channel.call('readFile', [resource]);\n\n\t\treturn buff.buffer;\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t// Reading as file stream goes through an event to the remote side\n\t\tconst listener = this.channel.listen<ReadableStreamEventPayload<VSBuffer>>('readFileStream', [resource, opts])(dataOrErrorOrEnd => {\n\n\t\t\t// data\n\t\t\tif (dataOrErrorOrEnd instanceof VSBuffer) {\n\t\t\t\tstream.write(dataOrErrorOrEnd.buffer);\n\t\t\t}\n\n\t\t\t// end or error\n\t\t\telse {\n\t\t\t\tif (dataOrErrorOrEnd === 'end') {\n\t\t\t\t\tstream.end();\n\t\t\t\t} else {\n\n\t\t\t\t\t// Since we receive data through a IPC channel, it is likely\n\t\t\t\t\t// that the error was not serialized, or only partially. To\n\t\t\t\t\t// ensure our API use is correct, we convert the data to an\n\t\t\t\t\t// error here to forward it properly.\n\t\t\t\t\tlet error = dataOrErrorOrEnd;\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = new Error(toErrorMessage(error));\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.end(error);\n\t\t\t\t}\n\n\t\t\t\t// Signal to the remote side that we no longer listen\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Support cancellation\n\t\ttoken.onCancellationRequested(() => {\n\n\t\t\t// Ensure to end the stream properly with an error\n\t\t\t// to indicate the cancellation.\n\t\t\tstream.end(canceled());\n\n\t\t\t// Ensure to dispose the listener upon cancellation. This will\n\t\t\t// bubble through the remote side as event and allows to stop\n\t\t\t// reading the file.\n\t\t\tlistener.dispose();\n\t\t});\n\n\t\treturn stream;\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this.channel.call('write', [fd, pos, VSBuffer.wrap(data), offset, length]);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.channel.call('writeFile', [resource, VSBuffer.wrap(content), opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('copy', [resource, target, opts]);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis.channel.call('watch', [this.session, req, resource, opts]);\n\n\t\treturn toDisposable(() => this.channel.call('unwatch', [this.session, req]));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Event } from 'vs/base/common/event';\nimport { PersistentConnectionEvent, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly socketFactory: ISocketFactory;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\t/**\n\t * Get the remote environment. In case of an error, returns `null`.\n\t */\n\tgetEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\t/**\n\t * Get the remote environment. Can return an error.\n\t */\n\tgetRawEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\n\twhenExtensionsReady(): Promise<void>;\n\t/**\n\t * Scan remote extensions.\n\t */\n\tscanExtensions(skipExtensions?: ExtensionIdentifier[]): Promise<IExtensionDescription[]>;\n\t/**\n\t * Scan a single remote extension.\n\t */\n\tscanSingleExtension(extensionLocation: URI, isBuiltin: boolean): Promise<IExtensionDescription | null>;\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined>;\n\tdisableTelemetry(): Promise<void>;\n\tlogTelemetry(eventName: string, data?: ITelemetryData): Promise<void>;\n\tflushTelemetry(): Promise<void>;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\treadonly onReconnecting: Event<void>;\n\treadonly onDidStateChange: Event<PersistentConnectionEvent>;\n\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R>;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { assertIsDefined } from 'vs/base/common/types';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (!targetDirName.startsWith(targetPath)) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(mkdirp(targetDirName)).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => mkdirp(targetFileName).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise<ZipFile>((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(zipfile));\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise<Readable>((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(stream));\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as semver from 'vs/base/common/semver/semver';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as path from 'vs/base/common/path';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ILocalExtension, IGalleryMetadata, ExtensionManagementError } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType, IExtensionManifest, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, groupByExtension, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { Limiter, Queue } from 'vs/base/common/async';\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { localizeManifest } from 'vs/platform/extensionManagement/common/extensionNls';\nimport { localize } from 'vs/nls';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { CancellationToken } from 'vscode';\nimport { extract, ExtractError } from 'vs/base/node/zip';\nimport { isWindows } from 'vs/base/common/platform';\nimport { flatten } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { FileAccess } from 'vs/base/common/network';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\n\nexport type IMetadata = Partial<IGalleryMetadata & { isMachineScoped: boolean; isBuiltin: boolean }>;\nexport type ILocalExtensionManifest = IExtensionManifest & { __metadata?: IMetadata };\ntype IRelaxedLocalExtension = Omit<ILocalExtension, 'isBuiltin'> & { isBuiltin: boolean };\n\nexport class ExtensionsScanner extends Disposable {\n\n\tprivate readonly systemExtensionsPath: string;\n\tprivate readonly extensionsPath: string;\n\tprivate readonly uninstalledPath: string;\n\tprivate readonly uninstalledFileLimiter: Queue<any>;\n\n\tconstructor(\n\t\tprivate readonly beforeRemovingExtension: (e: ILocalExtension) => Promise<void>,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tasync scanExtensions(type: ExtensionType | null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await Promise.all(promises);\n\t\t\treturn flatten(result);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\tlet [uninstalled, extensions] = await Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions()]);\n\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tif (excludeOutdated) {\n\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t}\n\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\treturn extensions;\n\t}\n\n\tasync scanAllUserExtensions(): Promise<ILocalExtension[]> {\n\t\treturn this.scanExtensionsInDirs(this.extensionsPath, this.environmentService.extraExtensionPaths, ExtensionType.User);\n\t}\n\n\tasync extractUserExtension(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(this.extensionsPath, `.${folderName}`);\n\t\tconst extensionPath = path.join(this.extensionsPath, folderName);\n\n\t\ttry {\n\t\t\tawait pfs.rimraf(extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.rimraf(extensionPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow new ExtensionManagementError(localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifierWithVersion.id), INSTALL_ERROR_DELETING);\n\t\t}\n\n\t\tawait this.extractAtLocation(identifierWithVersion, zipPath, tempPath, token);\n\t\ttry {\n\t\t\tawait this.rename(identifierWithVersion, tempPath, extensionPath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\tthis.logService.info('Renamed to', extensionPath);\n\t\t} catch (error) {\n\t\t\tthis.logService.info('Rename failed. Deleting from extracted location', tempPath);\n\t\t\ttry {\n\t\t\t\tpfs.rimraf(tempPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet local: ILocalExtension | null = null;\n\t\ttry {\n\t\t\tlocal = await this.scanExtension(folderName, this.extensionsPath, ExtensionType.User);\n\t\t} catch (e) { /*ignore */ }\n\n\t\tif (local) {\n\t\t\treturn local;\n\t\t}\n\t\tthrow new Error(localize('cannot read', \"Cannot read the extension from {0}\", this.extensionsPath));\n\t}\n\n\tasync saveMetadataForLocalExtension(local: ILocalExtension, metadata: IMetadata): Promise<ILocalExtension> {\n\t\tthis.setMetadata(local, metadata);\n\n\t\t// unset if false\n\t\tmetadata.isMachineScoped = metadata.isMachineScoped || undefined;\n\t\tmetadata.isBuiltin = metadata.isBuiltin || undefined;\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\tconst raw = await pfs.readFile(manifestPath, 'utf8');\n\t\tconst { manifest } = await this.parseManifest(raw);\n\t\t(manifest as ILocalExtensionManifest).__metadata = metadata;\n\t\tawait pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t'));\n\t\treturn local;\n\t}\n\n\tgetUninstalledExtensions(): Promise<{ [id: string]: boolean; }> {\n\t\treturn this.withUninstalledExtensions(uninstalled => uninstalled);\n\t}\n\n\tasync withUninstalledExtensions<T>(fn: (uninstalled: IStringDictionary<boolean>) => T): Promise<T> {\n\t\treturn this.uninstalledFileLimiter.queue(async () => {\n\t\t\tlet raw: string | undefined;\n\t\t\ttry {\n\t\t\t\traw = await pfs.readFile(this.uninstalledPath, 'utf8');\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code !== 'ENOENT') {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet uninstalled = {};\n\t\t\tif (raw) {\n\t\t\t\ttry {\n\t\t\t\t\tuninstalled = JSON.parse(raw);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t}\n\n\t\t\tconst result = fn(uninstalled);\n\n\t\t\tif (Object.keys(uninstalled).length) {\n\t\t\t\tawait pfs.writeFile(this.uninstalledPath, JSON.stringify(uninstalled));\n\t\t\t} else {\n\t\t\t\tawait pfs.rimraf(this.uninstalledPath);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tasync removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\tawait pfs.rimraf(extension.location.fsPath);\n\t\tthis.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath);\n\t}\n\n\tasync removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\tawait this.removeExtension(extension, 'uninstalled');\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]);\n\t}\n\n\tprivate async extractAtLocation(identifier: IExtensionIdentifier, zipPath: string, location: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${location}`);\n\n\t\t// Clean the location\n\t\ttry {\n\t\t\tawait pfs.rimraf(location);\n\t\t} catch (e) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING);\n\t\t}\n\n\t\ttry {\n\t\t\tawait extract(zipPath, location, { sourcePath: 'extension', overwrite: true }, token);\n\t\t\tthis.logService.info(`Extracted extension to ${location}:`, identifier.id);\n\t\t} catch (e) {\n\t\t\ttry { await pfs.rimraf(location); } catch (e) { /* Ignore */ }\n\t\t\tthrow new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING);\n\t\t}\n\t}\n\n\tprivate async rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait pfs.rename(extractPath, renamePath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(error.message || localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING);\n\t\t}\n\t}\n\n\tprivate async scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = this.scanDefaultSystemExtensions();\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.scanDevSystemExtensions();\n\t\tconst [systemExtensions, devSystemExtensions] = await Promise.all([systemExtensionsPromise, devSystemExtensionsPromise]);\n\t\treturn [...systemExtensions, ...devSystemExtensions];\n\t}\n\n\tprivate async scanExtensionsInDir(dir: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\tconst extensionsFolders = await pfs.readdir(dir)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\treturn <string[]>[];\n\t\t\t});\n\t\tconst extensions = await Promise.all<ILocalExtension>(extensionsFolders.map(extensionFolder => limiter.queue(() => this.scanExtension(extensionFolder, dir, type))));\n\t\treturn extensions.filter(e => e && e.identifier);\n\t}\n\n\tprivate async scanExtension(folderName: string, root: string, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\tif (type === ExtensionType.User && folderName.indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\treturn null;\n\t\t}\n\t\tconst extensionPath = path.join(root, folderName);\n\t\ttry {\n\t\t\tconst children = await pfs.readdir(extensionPath);\n\t\t\tconst { manifest, metadata } = await this.readManifest(extensionPath);\n\t\t\tconst readme = children.filter(child => /^readme(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\tconst readmeUrl = readme ? URI.file(path.join(extensionPath, readme)) : undefined;\n\t\t\tconst changelog = children.filter(child => /^changelog(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\tconst changelogUrl = changelog ? URI.file(path.join(extensionPath, changelog)) : undefined;\n\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, location: URI.file(extensionPath), readmeUrl, changelogUrl, publisherDisplayName: null, publisherId: null, isMachineScoped: false, isBuiltin: type === ExtensionType.System };\n\t\t\tif (metadata) {\n\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t}\n\t\t\treturn local;\n\t\t} catch (e) {\n\t\t\tthis.logService.trace(e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate async scanDefaultSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst result = await this.scanExtensionsInDirs(this.systemExtensionsPath, this.environmentService.extraBuiltinExtensionPaths, ExtensionType.System);\n\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\treturn result;\n\t}\n\n\tprivate async scanDevSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst devSystemExtensionsList = this.getDevSystemExtensionsList();\n\t\tif (devSystemExtensionsList.length) {\n\t\t\tconst result = await this.scanExtensionsInDir(this.devSystemExtensionsPath, ExtensionType.System);\n\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate setMetadata(local: IRelaxedLocalExtension, metadata: IMetadata): void {\n\t\tlocal.publisherDisplayName = metadata.publisherDisplayName || null;\n\t\tlocal.publisherId = metadata.publisherId || null;\n\t\tlocal.identifier.uuid = metadata.id;\n\t\tlocal.isMachineScoped = !!metadata.isMachineScoped;\n\t\tlocal.isBuiltin = local.type === ExtensionType.System || !!metadata.isBuiltin;\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promise.all(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.beforeRemovingExtension(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promise.all(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate async removeOutdatedExtensions(): Promise<void> {\n\t\tconst extensions = await this.scanAllUserExtensions();\n\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t// Outdated extensions\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\tawait Promise.all(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t}\n\n\tprivate getDevSystemExtensionsList(): string[] {\n\t\treturn (this.productService.builtInExtensions || []).map(e => e.name);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(FileAccess.asFileUri('', require).fsPath, '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate async readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IMetadata | null; }> {\n\t\tconst promises = [\n\t\t\tpfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t\t.then(raw => this.parseManifest(raw)),\n\t\t\tpfs.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t\t.then(raw => JSON.parse(raw))\n\t\t];\n\n\t\tconst [{ manifest, metadata }, translations] = await Promise.all(promises);\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t}\n\n\tprivate parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IMetadata | null; }> {\n\t\treturn new Promise((c, e) => {\n\t\t\ttry {\n\t\t\t\tconst manifest = JSON.parse(raw);\n\t\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\t\tc({ manifest, metadata });\n\t\t\t} catch (err) {\n\t\t\t\te(new Error(localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async scanExtensionsInDirs(dir: string, dirs: string[], type: ExtensionType): Promise<ILocalExtension[]>{\n\t\tconst results = await Promise.all([dir, ...dirs].map((path) => this.scanExtensionsInDir(path, type)));\n\t\treturn results.reduce((flat, current) => flat.concat(current), []);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE,\n\tExtensionManagementError,\n\tInstallOptions,\n\tUninstallOptions\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createCancelablePromise, CancelablePromise } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { joinPath } from 'vs/base/common/resources';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\nimport { ExtensionsScanner, ILocalExtensionManifest, IMetadata } from 'vs/platform/extensionManagement/node/extensionsScanner';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\n\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst ERROR_UNKNOWN = 'unknown';\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata?: IMetadata;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly extensionsScanner: ExtensionsScanner;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions = new Map<string, CancelablePromise<ILocalExtension>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionsDownloader: ExtensionsDownloader;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tconst extensionLifecycle = this._register(instantiationService.createInstance(ExtensionsLifecycle));\n\t\tthis.extensionsScanner = this._register(instantiationService.createInstance(ExtensionsScanner, extension => extensionLifecycle.postUninstall(extension)));\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionsDownloader = this._register(instantiationService.createInstance(ExtensionsDownloader));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tasync zip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\tconst files = await this.collectFiles(extension);\n\t\tconst location = await zip(joinPath(this.environmentService.tmpDir, generateUuid()).fsPath, files);\n\t\treturn URI.file(location);\n\t}\n\n\tasync unzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\tconst local = await this.install(zipLocation);\n\t\treturn local.identifier;\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tprivate async collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tconst files = await collectFilesFromDirectory(extension.location.fsPath);\n\t\treturn files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f }));\n\t}\n\n\tasync install(vsix: URI, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(async token => {\n\n\t\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, product.version)) {\n\t\t\t\tthrow new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, product.version));\n\t\t\t}\n\n\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\tconst installedExtensions = await this.getInstalled(ExtensionType.User);\n\t\t\tconst existing = installedExtensions.find(i => areSameExtensions(identifier, i.identifier));\n\t\t\tif (existing) {\n\t\t\t\toptions.isMachineScoped = options.isMachineScoped || existing.isMachineScoped;\n\t\t\t\toptions.isBuiltin = options.isBuiltin || existing.isBuiltin;\n\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name));\n\t\t\t\t\t}\n\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\tawait this.uninstallExtension(existing);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\t\tconst existing = await this.unsetUninstalledAndGetLocal(identifierWithVersion);\n\t\t\t\tif (existing) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\n\t\t\tlet metadata: IGalleryMetadata | undefined;\n\t\t\ttry {\n\t\t\t\tmetadata = await this.getGalleryMetadata(getGalleryExtensionId(manifest.publisher, manifest.name));\n\t\t\t} catch (e) { /* Ignore */ }\n\n\t\t\ttry {\n\t\t\t\tconst local = await this.installFromZipPath(identifierWithVersion, zipPath, { ...(metadata || {}), ...options }, options, operation, token);\n\t\t\t\tthis.logService.info('Successfully installed the extension:', identifier.id);\n\t\t\t\treturn local;\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn vsix;\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\n\t\tconst downloadedLocation = joinPath(this.environmentService.tmpDir, generateUuid());\n\t\tawait this.downloadService.download(vsix, downloadedLocation);\n\t\treturn downloadedLocation;\n\t}\n\n\tprivate async installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IMetadata | undefined, options: InstallOptions, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.installExtension({ zipPath, identifierWithVersion, metadata }, token);\n\t\t\ttry {\n\t\t\t\tawait this.installDependenciesAndPackExtensions(local, undefined, options);\n\t\t\t} catch (error) {\n\t\t\t\tif (isNonEmptyArray(local.manifest.extensionDependencies)) {\n\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, local.identifier.id, error.message);\n\t\t\t\t}\n\t\t\t\tif (isNonEmptyArray(local.manifest.extensionPack)) {\n\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, local.identifier.id, error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidInstallExtension.fire({ identifier: identifierWithVersion, zipPath, local, operation });\n\t\t\treturn local;\n\t\t} catch (error) {\n\t\t\tthis._onDidInstallExtension.fire({ identifier: identifierWithVersion, zipPath, operation, error });\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(InstallOperation.Install), getGalleryExtensionTelemetryData(extension), undefined, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\t\t\tcancellablePromise = createCancelablePromise(token => this.doInstallFromGallery(extension, options, token));\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\tcancellablePromise.finally(() => this.installingExtensions.delete(key));\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async doInstallFromGallery(extension: IGalleryExtension, options: InstallOptions, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst startTime = new Date().getTime();\n\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\ttry {\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\tconst existingExtension = installed.find(i => areSameExtensions(i.identifier, extension.identifier));\n\t\t\tif (existingExtension) {\n\t\t\t\toperation = InstallOperation.Update;\n\t\t\t}\n\n\t\t\tconst installableExtension = await this.downloadInstallableExtension(extension, operation);\n\t\t\tinstallableExtension.metadata.isMachineScoped = options.isMachineScoped || existingExtension?.isMachineScoped;\n\t\t\tinstallableExtension.metadata.isBuiltin = options.isBuiltin || existingExtension?.isBuiltin;\n\t\t\tconst local = await this.installExtension(installableExtension, token);\n\n\t\t\ttry { await this.extensionsDownloader.delete(URI.file(installableExtension.zipPath)); } catch (error) { /* Ignore */ }\n\n\t\t\tif (!options.donotIncludePackAndDependencies) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.installDependenciesAndPackExtensions(local, existingExtension, options);\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttry { await this.uninstall(local); } catch (error) { /* Ignore */ }\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, extension.version)) {\n\t\t\t\tawait this.setUninstalled(existingExtension);\n\t\t\t}\n\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t\treturn local;\n\n\t\t} catch (error) {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS);\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\t\tif (!compatibleExtension) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).\", extension.identifier.id, product.version), INSTALL_ERROR_INCOMPATIBLE);\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\tconst galleryExtension = await this.findGalleryExtension(extension);\n\t\tif (!galleryExtension) {\n\t\t\tthrow new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\"));\n\t\t}\n\n\t\tawait this.setUninstalled(extension);\n\t\ttry {\n\t\t\tawait this.extensionsScanner.removeUninstalledExtension(extension);\n\t\t} catch (e) {\n\t\t\tthrow new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e)));\n\t\t}\n\n\t\tawait this.installFromGallery(galleryExtension);\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate async isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst report = await this.getExtensionsReport();\n\t\treturn getMaliciousExtensionsSet(report).has(extension.identifier.id);\n\t}\n\n\tprivate async downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<Required<InstallableExtension>> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tlet zipPath;\n\t\ttry {\n\t\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\t\tconst zip = await this.extensionsDownloader.downloadExtension(extension, operation);\n\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t\tzipPath = zip.fsPath;\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING);\n\t\t}\n\n\t\ttry {\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn (<Required<InstallableExtension>>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata });\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING);\n\t\t}\n\t}\n\n\tprivate async installExtension(installableExtension: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion);\n\t\t\tif (local) {\n\t\t\t\treturn installableExtension.metadata ? this.extensionsScanner.saveMetadataForLocalExtension(local, installableExtension.metadata) : local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isMacintosh) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED);\n\t\t\t} else {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED);\n\t\t\t}\n\t\t}\n\t\treturn this.extractAndInstall(installableExtension, token);\n\t}\n\n\tprivate async unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\tconst isUninstalled = await this.isUninstalled(identifierWithVersion);\n\t\tif (!isUninstalled) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.id);\n\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\tawait this.unsetUninstalled(identifierWithVersion);\n\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.id);\n\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\treturn installed.find(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion)) || null;\n\t}\n\n\tprivate async extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\tlet local = await this.extensionsScanner.extractUserExtension(identifierWithVersion, zipPath, token);\n\t\tthis.logService.info('Installation completed.', identifierWithVersion.id);\n\t\tif (metadata) {\n\t\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, metadata);\n\t\t}\n\t\treturn local;\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | undefined, options: InstallOptions): Promise<void> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\tif (installed.manifest.extensionPack) {\n\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\tconst installed = await this.getInstalled();\n\t\t\t// filter out installed extensions\n\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\tif (names.length) {\n\t\t\t\tconst galleryResult = await this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None);\n\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\ttry {\n\t\t\t\t\tawait Promise.all(extensionsToInstall.map(e => this.installFromGallery(e, options)));\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttry { await this.rollback(extensionsToInstall); } catch (e) { /* ignore */ }\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\tconst extensionsToUninstall = installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))); // Check with version because we want to rollback the exact version\n\t\tawait Promise.all(extensionsToUninstall.map(local => this.uninstall(local)));\n\t}\n\n\tasync uninstall(extension: ILocalExtension, options: UninstallOptions = {}): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\tconst extensionToUninstall = installed.find(e => areSameExtensions(e.identifier, extension.identifier));\n\t\tif (!extensionToUninstall) {\n\t\t\tthrow new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name));\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.checkForDependenciesAndUninstall(extensionToUninstall, installed, options);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), ...metadata });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tasync updateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateExtensionScope', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), isMachineScoped });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tprivate async getGalleryMetadata(extensionName: string): Promise<IGalleryMetadata | undefined> {\n\t\tconst galleryExtension = await this.findGalleryExtensionByName(extensionName);\n\t\treturn galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : undefined;\n\t}\n\n\tprivate async findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\tconst galleryExtension = await this.findGalleryExtensionById(local.identifier.uuid);\n\t\t\treturn galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id);\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate async findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate async findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate async checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[], options: UninstallOptions): Promise<void> {\n\t\ttry {\n\t\t\tawait this.preUninstallExtension(extension);\n\t\t\tconst packedExtensions = options.donotIncludePack ? [] : this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\tawait this.uninstallExtensions(extension, packedExtensions, installed, options);\n\t\t} catch (error) {\n\t\t\tawait this.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\tthrow error;\n\t\t}\n\t\tawait this.postUninstallExtension(extension);\n\t}\n\n\tprivate async uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], options: UninstallOptions): Promise<void> {\n\t\tconst extensionsToUninstall = [extension, ...otherExtensionsToUninstall];\n\t\tif (!options.donotCheckDependents) {\n\t\t\tfor (const e of extensionsToUninstall) {\n\t\t\t\tthis.checkForDependents(e, extensionsToUninstall, installed, extension);\n\t\t\t}\n\t\t}\n\t\tawait Promise.all([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]);\n\t}\n\n\tprivate checkForDependents(extension: ILocalExtension, extensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], extensionToUninstall: ILocalExtension): void {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\tthrow new Error(this.getDependentsErrorMessage(extension, remainingDependents, extensionToUninstall));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getDependentsErrorMessage(dependingExtension: ILocalExtension, dependents: ILocalExtension[], extensionToUninstall: ILocalExtension): string {\n\t\tif (extensionToUninstall === dependingExtension) {\n\t\t\tif (dependents.length === 1) {\n\t\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall '{0}' extension. '{1}' extension depends on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t\t}\n\t\t\tif (dependents.length === 2) {\n\t\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t\t}\n\t\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleIndirectDependentError', \"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this.\",\n\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => !i.isBuiltin && extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate async doUninstall(extension: ILocalExtension): Promise<void> {\n\t\ttry {\n\t\t\tawait this.preUninstallExtension(extension);\n\t\t\tawait this.uninstallExtension(extension);\n\t\t} catch (error) {\n\t\t\tawait this.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\tthrow error;\n\t\t}\n\t\tawait this.postUninstallExtension(extension);\n\t}\n\n\tprivate async preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tconst exists = await pfs.exists(extension.location.fsPath);\n\t\tif (!exists) {\n\t\t\tthrow new Error(nls.localize('notExists', \"Could not find extension\"));\n\t\t}\n\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t}\n\n\tprivate async uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(async () => {\n\t\t\t\tconst userExtensions = await this.extensionsScanner.scanUserExtensions(false);\n\t\t\t\tawait this.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier)));\n\t\t\t});\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t\tpromise.finally(() => this.uninstallingExtensions.delete(local.identifier.id));\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn this.extensionsScanner.scanExtensions(type);\n\t}\n\n\tremoveDeprecatedExtensions(): Promise<void> {\n\t\treturn this.extensionsScanner.cleanUp();\n\t}\n\n\tprivate async isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\tconst uninstalled = await this.filterUninstalled(identifier);\n\t\treturn uninstalled.length === 1;\n\t}\n\n\tprivate filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\treturn this.extensionsScanner.withUninstalledExtensions(allUninstalled => {\n\t\t\tconst uninstalled: string[] = [];\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate setUninstalled(...extensions: ILocalExtension[]): Promise<{ [id: string]: boolean }> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\treturn this.extensionsScanner.withUninstalledExtensions(uninstalled => {\n\t\t\tids.forEach(id => uninstalled[id.key()] = true);\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate unsetUninstalled(extensionIdentifier: ExtensionIdentifierWithVersion): Promise<void> {\n\t\treturn this.extensionsScanner.withUninstalledExtensions<void>(uninstalled => delete uninstalled[extensionIdentifier.key()]);\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate async updateReportCache(): Promise<IReportedExtension[]> {\n\t\ttry {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\t\t\tconst result = await this.galleryService.getExtensionsReport();\n\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLogError(eventName, { ...extensionData, success: !error, duration, errorcode });\n\t}\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as tarStream from 'tar-stream';\nimport * as util from 'util';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { mkdirp } from 'vs/base/node/pfs';\nimport * as vszip from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\n\n// We will be overriding these, so keep a reference to the original.\nconst vszipExtract = vszip.extract;\nconst vszipBuffer = vszip.buffer;\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\t/**\n\t * Source path within the TAR/ZIP archive. Only the files\n\t * contained in this path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport const tar = async (tarPath: string, files: IFile[]): Promise<string> => {\n\tconst pack = tarStream.pack();\n\tconst chunks: Buffer[] = [];\n\tconst ended = new Promise<Buffer>((resolve) => {\n\t\tpack.on('end', () => resolve(Buffer.concat(chunks)));\n\t});\n\tpack.on('data', (chunk: Buffer) => chunks.push(chunk));\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tpack.entry({ name: file.path }, file.contents);\n\t}\n\tpack.finalize();\n\tawait util.promisify(fs.writeFile)(tarPath, await ended);\n\treturn tarPath;\n};\n\nexport const extract = async (archivePath: string, extractPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\ttry {\n\t\tawait extractTar(archivePath, extractPath, options, token);\n\t} catch (error) {\n\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\tawait vszipExtract(archivePath, extractPath, options, token);\n\t\t}\n\t}\n};\n\nexport const buffer = (targetPath: string, filePath: string): Promise<Buffer> => {\n\treturn new Promise<Buffer>(async (resolve, reject) => {\n\t\ttry {\n\t\t\tlet done: boolean = false;\n\t\t\tawait extractAssets(targetPath, new RegExp(filePath), (assetPath: string, data: Buffer) => {\n\t\t\t\tif (path.normalize(assetPath) === path.normalize(filePath)) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!done) {\n\t\t\t\tthrow new Error('couldn\\'t find asset ' + filePath);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\t\tvszipBuffer(targetPath, filePath).then(resolve).catch(reject);\n\t\t\t} else {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst extractAssets = async (tarPath: string, match: RegExp, callback: (path: string, data: Buffer) => void): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst name = header.name;\n\t\t\tif (match.test(name)) {\n\t\t\t\textractData(stream).then((data) => {\n\t\t\t\t\tcallback(name, data);\n\t\t\t\t\tnext();\n\t\t\t\t}).catch(fail);\n\t\t\t} else {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume(); // Just drain it.\n\t\t\t}\n\t\t});\n\t\textractor.on('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\nconst extractData = (stream: NodeJS.ReadableStream): Promise<Buffer> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst fileData: Buffer[] = [];\n\t\tstream.on('error', reject);\n\t\tstream.on('end', () => resolve(Buffer.concat(fileData)));\n\t\tstream.on('data', (data) => fileData.push(data));\n\t});\n};\n\nconst extractTar = async (tarPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst nextEntry = (): void => {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume();\n\t\t\t};\n\n\t\t\tconst rawName = path.normalize(header.name);\n\t\t\tif (token.isCancellationRequested || !sourcePathRegex.test(rawName)) {\n\t\t\t\treturn nextEntry();\n\t\t\t}\n\n\t\t\tconst fileName = rawName.replace(sourcePathRegex, '');\n\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\treturn mkdirp(targetFileName).then(nextEntry);\n\t\t\t}\n\n\t\t\tconst dirName = path.dirname(fileName);\n\t\t\tconst targetDirName = path.join(targetPath, dirName);\n\t\t\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\t\t\treturn fail(new Error(nls.localize('invalid file', 'Error extracting {0}. Invalid file.', fileName)));\n\t\t\t}\n\n\t\t\tawait mkdirp(targetDirName, undefined);\n\n\t\t\tconst fstream = fs.createWriteStream(targetFileName, { mode: header.mode });\n\t\t\tfstream.once('close', () => next());\n\t\t\tfstream.once('error', fail);\n\t\t\tstream.pipe(fstream);\n\t\t});\n\t\textractor.once('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\n/**\n * Override original functionality so we can use a custom marketplace with\n * either tars or zips.\n */\nexport const enableCustomMarketplace = (): void => {\n\t(<any>product).extensionsGallery = { // Use `any` to override readonly.\n\t\tserviceUrl: process.env.SERVICE_URL || 'https://extensions.coder.com/api',\n\t\titemUrl: process.env.ITEM_URL || '',\n\t\tcontrolUrl: '',\n\t\trecommendationsUrl: '',\n\t\t...(product.extensionsGallery || {}),\n\t};\n\n\tconst target = vszip as typeof vszip;\n\ttarget.zip = tar;\n\ttarget.extract = extract;\n\ttarget.buffer = buffer;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as streams from 'vs/base/common/stream';\nimport { createGunzip } from 'zlib';\nimport { parse as parseUrl } from 'url';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { canceled } from 'vs/base/common/errors';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\nimport { getProxyAgent, Agent } from 'vs/platform/request/node/proxy';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = {\n\t\t\t\t...(options.headers || {}),\n\t\t\t\t'Proxy-Authorization': this.authorization\n\t\t\t};\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn new Promise<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}, token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStreamEvents<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { raceTimeout } from 'vs/base/common/async';\nimport * as semver from 'vs/base/common/semver/semver';\nimport product from 'vs/platform/product/common/product';\nimport * as path from 'vs/base/common/path';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, IExtensionGalleryService, IGalleryExtension, ILocalExtension, InstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { mkdirp, writeFile } from 'vs/base/node/pfs';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { ILogService, getLogLevel, LogLevel, ConsoleLogService, MultiplexLogService } from 'vs/platform/log/common/log';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { areSameExtensions, adoptToGalleryExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { URI } from 'vs/base/common/uri';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, isLanguagePackExtension, EXTENSION_CATEGORIES } from 'vs/platform/extensions/common/extensions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { Schemas } from 'vs/base/common/network';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { buildTelemetryMessage } from 'vs/platform/telemetry/node/telemetry';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst notInstalled = (id: string) => localize('notInstalled', \"Extension '{0}' is not installed.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-dotnettools.csharp');\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\ntype InstallExtensionInfo = { id: string, version?: string, installOptions: InstallOptions };\n\nexport class Main {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t) { }\n\n\tasync run(argv: NativeParsedArgs): Promise<void> {\n\t\tif (argv['install-source']) {\n\t\t\tawait this.setInstallSource(argv['install-source']);\n\t\t} else if (argv['list-extensions']) {\n\t\t\tawait this.listExtensions(!!argv['show-versions'], argv['category']);\n\t\t} else if (argv['install-extension'] || argv['install-builtin-extension']) {\n\t\t\tawait this.installExtensions(argv['install-extension'] || [], argv['install-builtin-extension'] || [], !!argv['do-not-sync'], !!argv['force']);\n\t\t} else if (argv['uninstall-extension']) {\n\t\t\tawait this.uninstallExtension(argv['uninstall-extension'], !!argv['force']);\n\t\t} else if (argv['locate-extension']) {\n\t\t\tawait this.locateExtension(argv['locate-extension']);\n\t\t} else if (argv['telemetry']) {\n\t\t\tconsole.log(buildTelemetryMessage(this.environmentService.appRoot, this.environmentService.extensionsPath));\n\t\t}\n\t}\n\n\tprivate setInstallSource(installSource: string): Promise<void> {\n\t\treturn writeFile(this.environmentService.installSourcePath, installSource.slice(0, 30));\n\t}\n\n\tprivate async listExtensions(showVersions: boolean, category?: string): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst categories = EXTENSION_CATEGORIES.map(c => c.toLowerCase());\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\tconsole.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\tconsole.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\tconsole.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\textensions.forEach(e => console.log(getId(e.manifest, showVersions)));\n\t}\n\n\tasync installExtensions(extensions: string[], builtinExtensionIds: string[], isMachineScoped: boolean, force: boolean): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\tconsole.log(localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst checkIfNotInstalled = (id: string, version?: string): boolean => {\n\t\t\tconst installedExtension = installed.find(i => areSameExtensions(i.identifier, { id }));\n\t\t\tif (installedExtension) {\n\t\t\t\tif (!version && !force) {\n\t\t\t\t\tconsole.log(localize('alreadyInstalled-checkAndUpdate', \"Extension '{0}' v{1} is already installed. Use '--force' option to update to latest version or provide '@<version>' to install a specific version, for example: '{2}@1.2.3'.\", id, installedExtension.manifest.version, id));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (version && installedExtension.manifest.version === version) {\n\t\t\t\t\tconsole.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", `${id}@${version}`));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tconst vsixs: string[] = [];\n\t\tconst installExtensionInfos: InstallExtensionInfo[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tif (/\\.vsix$/i.test(extension)) {\n\t\t\t\tvsixs.push(extension);\n\t\t\t} else {\n\t\t\t\tconst [id, version] = getIdAndVersion(extension);\n\t\t\t\tif (checkIfNotInstalled(id, version)) {\n\t\t\t\t\tinstallExtensionInfos.push({ id, version, installOptions: { isBuiltin: false, isMachineScoped } });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (const extension of builtinExtensionIds) {\n\t\t\tconst [id, version] = getIdAndVersion(extension);\n\t\t\tif (checkIfNotInstalled(id, version)) {\n\t\t\t\tinstallExtensionInfos.push({ id, version, installOptions: { isBuiltin: true, isMachineScoped: false } });\n\t\t\t}\n\t\t}\n\n\t\tif (vsixs.length) {\n\t\t\tawait Promise.all(vsixs.map(async vsix => {\n\t\t\t\ttry {\n\t\t\t\t\tconst manifest = await this.installVSIX(vsix, force);\n\t\t\t\t\tif (manifest) {\n\t\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\t\tfailed.push(vsix);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tif (installExtensionInfos.length) {\n\n\t\t\tconst galleryExtensions = await this.getGalleryExtensions(installExtensionInfos);\n\n\t\t\tawait Promise.all(installExtensionInfos.map(async extensionInfo => {\n\t\t\t\tconst gallery = galleryExtensions.get(extensionInfo.id.toLowerCase());\n\t\t\t\tif (gallery) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst manifest = await this.installFromGallery(extensionInfo, gallery, installed, force);\n\t\t\t\t\t\tif (manifest) {\n\t\t\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\t\t\tfailed.push(extensionInfo.id);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(`${notFound(extensionInfo.version ? `${extensionInfo.id}@${extensionInfo.version}` : extensionInfo.id)}\\n${useId}`);\n\t\t\t\t\tfailed.push(extensionInfo.id);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t}\n\n\t\tif (installedExtensionsManifests.some(manifest => isLanguagePackExtension(manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\n\t\tif (failed.length) {\n\t\t\tthrow new Error(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', ')));\n\t\t}\n\t}\n\n\tprivate async installVSIX(vsix: string, force: boolean): Promise<IExtensionManifest | null> {\n\t\tvsix = path.isAbsolute(vsix) ? vsix : path.join(process.cwd(), vsix);\n\t\tconst manifest = await getManifest(vsix);\n\t\tconst valid = await this.validate(manifest, force);\n\t\tif (valid) {\n\t\t\ttry {\n\t\t\t\tawait this.extensionManagementService.install(URI.file(vsix));\n\t\t\t\tconsole.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", getBaseLabel(vsix)));\n\t\t\t\treturn manifest;\n\t\t\t} catch (error) {\n\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", getBaseLabel(vsix)));\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<Map<string, IGalleryExtension>> {\n\t\tconst extensionIds = extensions.filter(({ version }) => version === undefined).map(({ id }) => id);\n\t\tconst extensionsWithIdAndVersion = extensions.filter(({ version }) => version !== undefined);\n\n\t\tconst galleryExtensions = new Map<string, IGalleryExtension>();\n\t\tawait Promise.all([\n\t\t\t(async () => {\n\t\t\t\tconst result = await this.extensionGalleryService.getExtensions(extensionIds, CancellationToken.None);\n\t\t\t\tresult.forEach(extension => galleryExtensions.set(extension.identifier.id.toLowerCase(), extension));\n\t\t\t})(),\n\t\t\tPromise.all(extensionsWithIdAndVersion.map(async ({ id, version }) => {\n\t\t\t\tconst extension = await this.extensionGalleryService.getCompatibleExtension({ id }, version);\n\t\t\t\tif (extension) {\n\t\t\t\t\tgalleryExtensions.set(extension.identifier.id.toLowerCase(), extension);\n\t\t\t\t}\n\t\t\t}))\n\t\t]);\n\n\t\treturn galleryExtensions;\n\t}\n\n\tprivate async installFromGallery({ id, version, installOptions }: InstallExtensionInfo, galleryExtension: IGalleryExtension, installed: ILocalExtension[], force: boolean): Promise<IExtensionManifest | null> {\n\t\tconst manifest = await this.extensionGalleryService.getManifest(galleryExtension, CancellationToken.None);\n\t\tconst installedExtension = installed.find(e => areSameExtensions(e.identifier, galleryExtension.identifier));\n\t\tif (installedExtension) {\n\t\t\tif (galleryExtension.version === installedExtension.manifest.version) {\n\t\t\t\tconsole.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconsole.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, galleryExtension.version));\n\t\t}\n\n\t\ttry {\n\t\t\tif (installOptions.isBuiltin) {\n\t\t\t\tconsole.log(localize('installing builtin ', \"Installing builtin extension '{0}' v{1}...\", id, galleryExtension.version));\n\t\t\t} else {\n\t\t\t\tconsole.log(localize('installing', \"Installing extension '{0}' v{1}...\", id, galleryExtension.version));\n\t\t\t}\n\t\t\tawait this.extensionManagementService.installFromGallery(galleryExtension, installOptions);\n\t\t\tconsole.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, galleryExtension.version));\n\t\t\treturn manifest;\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\tconsole.log(localize('cancelInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async validate(manifest: IExtensionManifest, force: boolean): Promise<boolean> {\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.find(local => areSameExtensions(extensionIdentifier, local.identifier) && semver.gt(local.manifest.version, manifest.version));\n\n\t\tif (newer && !force) {\n\t\t\tconsole.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async uninstallExtension(extensions: string[], force: boolean): Promise<void> {\n\t\tasync function getExtensionId(extensionDescription: string): Promise<string> {\n\t\t\tif (!/\\.vsix$/i.test(extensionDescription)) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\n\t\t\tconst zipPath = path.isAbsolute(extensionDescription) ? extensionDescription : path.join(process.cwd(), extensionDescription);\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn getId(manifest);\n\t\t}\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\t\tconst extensionToUninstall = installed.find(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionToUninstall) {\n\t\t\t\tthrow new Error(`${notInstalled(id)}\\n${useId}`);\n\t\t\t}\n\t\t\tif (extensionToUninstall.type === ExtensionType.System) {\n\t\t\t\tconsole.log(localize('builtin', \"Extension '{0}' is a Built-in extension and cannot be installed\", id));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (extensionToUninstall.isBuiltin && !force) {\n\t\t\t\tconsole.log(localize('forceUninstall', \"Extension '{0}' is marked as a Built-in extension by user. Please use '--force' option to uninstall it.\", id));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall);\n\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\tconsole.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t}\n\n\t\tif (uninstalledExtensions.some(e => isLanguagePackExtension(e.manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t}\n\n\tprivate async locateExtension(extensions: string[]): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\tconsole.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async updateLocalizationsCache(): Promise<void> {\n\t\tconst localizationService = this.instantiationService.createInstance(LocalizationsService);\n\t\tawait localizationService.update();\n\t\tlocalizationService.dispose();\n\t}\n}\n\nconst eventPrefix = 'monacoworkbench';\n\nexport async function main(argv: NativeParsedArgs): Promise<void> {\n\tconst services = new ServiceCollection();\n\tconst disposables = new DisposableStore();\n\n\tconst environmentService = new NativeEnvironmentService(argv);\n\tconst logLevel = getLogLevel(environmentService);\n\tconst loggers: ILogService[] = [];\n\tloggers.push(new SpdLogService('cli', environmentService.logsPath, logLevel));\n\tif (logLevel === LogLevel.Trace) {\n\t\tloggers.push(new ConsoleLogService(logLevel));\n\t}\n\tconst logService = new MultiplexLogService(loggers);\n\tprocess.once('exit', () => logService.dispose());\n\tlogService.info('main', argv);\n\n\tawait Promise.all<void | undefined>([environmentService.appSettingsHome.fsPath, environmentService.extensionsPath]\n\t\t.map((path): undefined | Promise<void> => path ? mkdirp(path) : undefined));\n\n\t// Files\n\tconst fileService = new FileService(logService);\n\tdisposables.add(fileService);\n\tservices.set(IFileService, fileService);\n\n\tconst diskFileSystemProvider = new DiskFileSystemProvider(logService);\n\tdisposables.add(diskFileSystemProvider);\n\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\tdisposables.add(configurationService);\n\tawait configurationService.initialize();\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(INativeEnvironmentService, environmentService);\n\n\tservices.set(ILogService, logService);\n\tservices.set(IConfigurationService, configurationService);\n\tservices.set(IStateService, new SyncDescriptor(StateService));\n\tservices.set(IProductService, { _serviceBrand: undefined, ...product });\n\n\tconst instantiationService: IInstantiationService = new InstantiationService(services);\n\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst stateService = accessor.get(IStateService);\n\n\t\tconst { appRoot, extensionsPath, extensionDevelopmentLocationURI, isBuilt, installSourcePath } = environmentService;\n\n\t\tconst services = new ServiceCollection();\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\n\t\tconst appenders: AppInsightsAppender[] = [];\n\t\tif (isBuilt && !extensionDevelopmentLocationURI && !environmentService.disableTelemetry && product.enableTelemetry) {\n\t\t\tif (product.aiConfig && product.aiConfig.asimovKey) {\n\t\t\t\tappenders.push(new AppInsightsAppender(eventPrefix, null, product.aiConfig.asimovKey));\n\t\t\t}\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappender: combinedAppender(...appenders),\n\t\t\t\tsendErrorTelemetry: false,\n\t\t\t\tcommonProperties: resolveCommonProperties(product.commit, product.version, stateService.getItem('telemetry.machineId'), product.msftInternalDomains, installSourcePath),\n\t\t\t\tpiiPaths: [appRoot, extensionsPath]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tconst instantiationService2 = instantiationService.createChild(services);\n\t\tconst main = instantiationService2.createInstance(Main);\n\n\t\ttry {\n\t\t\tawait main.run(argv);\n\n\t\t\t// Flush the remaining data in AI adapter.\n\t\t\t// If it does not complete in 1 second, exit the process.\n\t\t\tawait raceTimeout(combinedAppender(...appenders).flush(), 1000);\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t});\n}\n","import { field } from '@coder/logger';\nimport * as fs from 'fs';\nimport * as net from 'net';\nimport * as path from 'path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { getMachineId } from 'vs/base/node/id';\nimport { ClientConnectionEvent, createChannelReceiver, IPCServer, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { main } from 'vs/code/node/cliProcessMain';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { getLogLevel, ILoggerService, ILogService } from 'vs/platform/log/common/log';\nimport { LoggerChannel } from 'vs/platform/log/common/logIpc';\nimport { LoggerService } from 'vs/platform/log/node/loggerService';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestChannel } from 'vs/platform/request/common/requestIpc';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport ErrorTelemetry from 'vs/platform/telemetry/browser/errorTelemetry';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { TelemetryLogAppender } from 'vs/platform/telemetry/common/telemetryLogAppender';\nimport { TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { TelemetryChannel } from 'vs/server/common/telemetry';\nimport { Query, VscodeOptions, WorkbenchOptions } from 'vs/server/ipc';\nimport { ExtensionEnvironmentChannel, FileProviderChannel, TerminalProviderChannel } from 'vs/server/node/channel';\nimport { Connection, ExtensionHostConnection, ManagementConnection } from 'vs/server/node/connection';\nimport { TelemetryClient } from 'vs/server/node/insights';\nimport { logger } from 'vs/server/node/logger';\nimport { getLocaleFromConfig, getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { REMOTE_TERMINAL_CHANNEL_NAME } from 'vs/workbench/contrib/terminal/common/remoteTerminalChannel';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from 'vs/workbench/services/remote/common/remoteAgentFileSystemChannel';\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { localize } from 'vs/nls';\n\nexport class Vscode {\n\tpublic readonly _onDidClientConnect = new Emitter<ClientConnectionEvent>();\n\tpublic readonly onDidClientConnect = this._onDidClientConnect.event;\n\tprivate readonly ipc = new IPCServer<RemoteAgentConnectionContext>(this.onDidClientConnect);\n\n\tprivate readonly maxExtraOfflineConnections = 0;\n\tprivate readonly connections = new Map<ConnectionType, Map<string, Connection>>();\n\n\tprivate readonly services = new ServiceCollection();\n\tprivate servicesPromise?: Promise<void>;\n\n\tpublic async cli(args: NativeParsedArgs): Promise<void> {\n\t\treturn main(args);\n\t}\n\n\tpublic async initialize(options: VscodeOptions): Promise<WorkbenchOptions> {\n\t\tconst transformer = getUriTransformer(options.remoteAuthority);\n\t\tif (!this.servicesPromise) {\n\t\t\tthis.servicesPromise = this.initializeServices(options.args);\n\t\t}\n\t\tawait this.servicesPromise;\n\t\tconst environment = this.services.get(IEnvironmentService) as INativeEnvironmentService;\n\t\tconst startPath = options.startPath;\n\t\tconst parseUrl = (url: string): URI => {\n\t\t\t// This might be a fully-specified URL or just a path.\n\t\t\ttry {\n\t\t\t\treturn URI.parse(url, true);\n\t\t\t} catch (error) {\n\t\t\t\treturn URI.from({\n\t\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\t\tauthority: options.remoteAuthority,\n\t\t\t\t\tpath: url,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\treturn {\n\t\t\tworkbenchWebConfiguration: {\n\t\t\t\tworkspaceUri: startPath && startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tfolderUri: startPath && !startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\tlogLevel: getLogLevel(environment),\n\t\t\t\tworkspaceProvider: {\n\t\t\t\t\tpayload: [\n\t\t\t\t\t\t['userDataPath', environment.userDataPath],\n\t\t\t\t\t\t['enableProposedApi', JSON.stringify(options.args['enable-proposed-api'] || [])]\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\thomeIndicator: {\n\t\t\t\t\thref: options.args.home || 'https://github.com/cdr/code-server',\n\t\t\t\t\ticon: 'code',\n\t\t\t\t\ttitle: localize('home', \"Home\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tremoteUserDataUri: transformer.transformOutgoing(URI.file(environment.userDataPath)),\n\t\t\tproductConfiguration: product,\n\t\t\tnlsConfiguration: await getNlsConfiguration(environment.args.locale || await getLocaleFromConfig(environment.userDataPath), environment.userDataPath),\n\t\t\tcommit: product.commit || 'development',\n\t\t};\n\t}\n\n\tpublic async handleWebSocket(socket: net.Socket, query: Query): Promise<true> {\n\t\tif (!query.reconnectionToken) {\n\t\t\tthrow new Error('Reconnection token is missing from query parameters');\n\t\t}\n\t\tconst protocol = new Protocol(socket, {\n\t\t\treconnectionToken: <string>query.reconnectionToken,\n\t\t\treconnection: query.reconnection === 'true',\n\t\t\tskipWebSocketFrames: query.skipWebSocketFrames === 'true',\n\t\t});\n\t\ttry {\n\t\t\tawait this.connect(await protocol.handshake(), protocol);\n\t\t} catch (error) {\n\t\t\tprotocol.sendMessage({ type: 'error', reason: error.message });\n\t\t\tprotocol.dispose();\n\t\t\tprotocol.getSocket().dispose();\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async connect(message: ConnectionTypeRequest, protocol: Protocol): Promise<void> {\n\t\tif (product.commit && message.commit !== product.commit) {\n\t\t\tlogger.warn(`Version mismatch (${message.commit} instead of ${product.commit})`);\n\t\t}\n\n\t\tswitch (message.desiredConnectionType) {\n\t\t\tcase ConnectionType.ExtensionHost:\n\t\t\tcase ConnectionType.Management:\n\t\t\t\tif (!this.connections.has(message.desiredConnectionType)) {\n\t\t\t\t\tthis.connections.set(message.desiredConnectionType, new Map());\n\t\t\t\t}\n\t\t\t\tconst connections = this.connections.get(message.desiredConnectionType)!;\n\n\t\t\t\tconst ok = async () => {\n\t\t\t\t\treturn message.desiredConnectionType === ConnectionType.ExtensionHost\n\t\t\t\t\t\t? { debugPort: await this.getDebugPort() }\n\t\t\t\t\t\t: { type: 'ok' };\n\t\t\t\t};\n\n\t\t\t\tconst token = protocol.options.reconnectionToken;\n\t\t\t\tif (protocol.options.reconnection && connections.has(token)) {\n\t\t\t\t\tprotocol.sendMessage(await ok());\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tprotocol.dispose();\n\t\t\t\t\treturn connections.get(token)!.reconnect(protocol.getSocket(), buffer);\n\t\t\t\t} else if (protocol.options.reconnection || connections.has(token)) {\n\t\t\t\t\tthrow new Error(protocol.options.reconnection\n\t\t\t\t\t\t? 'Unrecognized reconnection token'\n\t\t\t\t\t\t: 'Duplicate reconnection token'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlogger.debug('New connection', field('token', token));\n\t\t\t\tprotocol.sendMessage(await ok());\n\n\t\t\t\tlet connection: Connection;\n\t\t\t\tif (message.desiredConnectionType === ConnectionType.Management) {\n\t\t\t\t\tconnection = new ManagementConnection(protocol, token);\n\t\t\t\t\tthis._onDidClientConnect.fire({\n\t\t\t\t\t\tprotocol, onDidClientDisconnect: connection.onClose,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tconnection = new ExtensionHostConnection(\n\t\t\t\t\t\tmessage.args ? message.args.language : 'en',\n\t\t\t\t\t\tprotocol, buffer, token,\n\t\t\t\t\t\tthis.services.get(IEnvironmentService) as INativeEnvironmentService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconnections.set(token, connection);\n\t\t\t\tconnection.onClose(() => {\n\t\t\t\t\tlogger.debug('Connection closed', field('token', token));\n\t\t\t\t\tconnections.delete(token);\n\t\t\t\t});\n\t\t\t\tthis.disposeOldOfflineConnections(connections);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionType.Tunnel: return protocol.tunnel();\n\t\t\tdefault: throw new Error('Unrecognized connection type');\n\t\t}\n\t}\n\n\tprivate disposeOldOfflineConnections(connections: Map<string, Connection>): void {\n\t\tconst offline = Array.from(connections.values())\n\t\t\t.filter((connection) => typeof connection.offline !== 'undefined');\n\t\tfor (let i = 0, max = offline.length - this.maxExtraOfflineConnections; i < max; ++i) {\n\t\t\tlogger.debug('Disposing offline connection', field('token', offline[i].token));\n\t\t\toffline[i].dispose();\n\t\t}\n\t}\n\n\tprivate async initializeServices(args: NativeParsedArgs): Promise<void> {\n\t\tconst environmentService = new NativeEnvironmentService(args);\n\t\t// https://github.com/cdr/code-server/issues/1693\n\t\tfs.mkdirSync(environmentService.globalStorageHome.fsPath, { recursive: true });\n\n\t\tconst logService = new SpdLogService(RemoteExtensionLogFileName, environmentService.logsPath, getLogLevel(environmentService));\n\t\tconst fileService = new FileService(logService);\n\t\tfileService.registerProvider(Schemas.file, new DiskFileSystemProvider(logService));\n\n\t\tconst piiPaths = [\n\t\t\tpath.join(environmentService.userDataPath, 'clp'), // Language packs.\n\t\t\tenvironmentService.appRoot,\n\t\t\tenvironmentService.extensionsPath,\n\t\t\tenvironmentService.builtinExtensionsPath,\n\t\t\t...environmentService.extraExtensionPaths,\n\t\t\t...environmentService.extraBuiltinExtensionPaths,\n\t\t];\n\n\t\tthis.ipc.registerChannel('logger', new LoggerChannel(logService));\n\t\tthis.ipc.registerChannel(ExtensionHostDebugBroadcastChannel.ChannelName, new ExtensionHostDebugBroadcastChannel());\n\n\t\tthis.services.set(ILogService, logService);\n\t\tthis.services.set(IEnvironmentService, environmentService);\n\t\tthis.services.set(INativeEnvironmentService, environmentService);\n\t\tthis.services.set(ILoggerService, new SyncDescriptor(LoggerService));\n\n\t\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\t\tawait configurationService.initialize();\n\t\tthis.services.set(IConfigurationService, configurationService);\n\n\t\tthis.services.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tthis.services.set(IFileService, fileService);\n\t\tthis.services.set(IProductService, { _serviceBrand: undefined, ...product });\n\n\t\tconst machineId = await getMachineId();\n\n\t\tawait new Promise((resolve) => {\n\t\t\tconst instantiationService = new InstantiationService(this.services);\n\n\t\t\tinstantiationService.invokeFunction((accessor) => {\n\t\t\t\tinstantiationService.createInstance(LogsDataCleaner);\n\n\t\t\t\tlet telemetryService: ITelemetryService;\n\t\t\t\tif (!environmentService.disableTelemetry) {\n\t\t\t\t\ttelemetryService = new TelemetryService({\n\t\t\t\t\t\tappender: combinedAppender(\n\t\t\t\t\t\t\tnew AppInsightsAppender('code-server', null, () => new TelemetryClient() as any),\n\t\t\t\t\t\t\tnew TelemetryLogAppender(accessor.get(ILoggerService), environmentService)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsendErrorTelemetry: true,\n\t\t\t\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\t\t\t\tproduct.commit, product.version, machineId,\n\t\t\t\t\t\t\t[], environmentService.installSourcePath, 'code-server',\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpiiPaths,\n\t\t\t\t\t}, configurationService);\n\t\t\t\t} else {\n\t\t\t\t\ttelemetryService = NullTelemetryService;\n\t\t\t\t}\n\n\t\t\t\tthis.services.set(ITelemetryService, telemetryService);\n\n\t\t\t\tthis.services.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\t\t\tthis.services.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\t\t\tthis.services.set(ILocalizationsService, new SyncDescriptor(LocalizationsService));\n\n\t\t\t\tthis.ipc.registerChannel('extensions', new ExtensionManagementChannel(\n\t\t\t\t\taccessor.get(IExtensionManagementService),\n\t\t\t\t\t(context) => getUriTransformer(context.remoteAuthority),\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('remoteextensionsenvironment', new ExtensionEnvironmentChannel(\n\t\t\t\t\tenvironmentService, logService, telemetryService, '',\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('request', new RequestChannel(accessor.get(IRequestService)));\n\t\t\t\tthis.ipc.registerChannel('telemetry', new TelemetryChannel(telemetryService));\n\t\t\t\tthis.ipc.registerChannel('localizations', <IServerChannel<any>>createChannelReceiver(accessor.get(ILocalizationsService)));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME, new FileProviderChannel(environmentService, logService));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_TERMINAL_CHANNEL_NAME, new TerminalProviderChannel(logService));\n\t\t\t\tresolve(new ErrorTelemetry(telemetryService));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tprivate async getDebugPort(): Promise<number | undefined> {\n\t\treturn undefined;\n\t}\n}\n","import { field } from '@coder/logger';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { CodeServerMessage, VscodeMessage } from 'vs/server/ipc';\nimport { logger } from 'vs/server/node/logger';\nimport { enableCustomMarketplace } from 'vs/server/node/marketplace';\nimport { Vscode } from 'vs/server/node/server';\nimport * as proxyAgent from 'vs/base/node/proxy_agent';\n\nsetUnexpectedErrorHandler((error) => logger.warn(error instanceof Error ? error.message : error));\nenableCustomMarketplace();\nproxyAgent.monkeyPatch(true);\n\n/**\n * Ensure we control when the process exits.\n */\nconst exit = process.exit;\nprocess.exit = function(code?: number) {\n\tlogger.warn(`process.exit() was prevented: ${code || 'unknown code'}.`);\n} as (code?: number) => never;\n\n// Kill VS Code if the parent process dies.\nif (typeof process.env.CODE_SERVER_PARENT_PID !== 'undefined') {\n\tconst parentPid = parseInt(process.env.CODE_SERVER_PARENT_PID, 10);\n\tsetInterval(() => {\n\t\ttry {\n\t\t\tprocess.kill(parentPid, 0); // Throws an exception if the process doesn't exist anymore.\n\t\t} catch (e) {\n\t\t\texit();\n\t\t}\n\t}, 5000);\n} else {\n\tlogger.error('no parent process');\n\texit(1);\n}\n\nconst vscode = new Vscode();\nconst send = (message: VscodeMessage): void => {\n\tif (!process.send) {\n\t\tthrow new Error('not spawned with IPC');\n\t}\n\tprocess.send(message);\n};\n\n// Wait for the init message then start up VS Code. Subsequent messages will\n// return new workbench options without starting a new instance.\nprocess.on('message', async (message: CodeServerMessage, socket) => {\n\tlogger.debug('got message from code-server', field('type', message.type));\n\tlogger.trace('code-server message content', field('message', message));\n\tswitch (message.type) {\n\t\tcase 'init':\n\t\t\ttry {\n\t\t\t\tconst options = await vscode.initialize(message.options);\n\t\t\t\tsend({ type: 'options', id: message.id, options });\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'cli':\n\t\t\ttry {\n\t\t\t\tawait vscode.cli(message.args);\n\t\t\t\texit(0);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'socket':\n\t\t\tvscode.handleWebSocket(socket, message.query);\n\t\t\tbreak;\n\t}\n});\nif (!process.send) {\n\tlogger.error('not spawned with IPC');\n\texit(1);\n} else {\n\t// This lets the parent know the child is ready to receive messages.\n\tsend({ type: 'ready' });\n}\n"]}